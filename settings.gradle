import com.iteego.glasir.build.api.internal.*
import com.iteego.glasir.build.api.*

buildscript {
  ext.SettingsRepositoryConfigurator = {
    maven {
      credentials.username artifactoryReader
      credentials.password artifactoryReaderPwd
      url "$artifactoryReaderUrl/glasir"
    }
    mavenCentral()
  }

  ext.SettingsDependencyConfigurator = {
    classpath "com.iteego.glasir:glasir.build:1.3.14-SNAPSHOT"
  }

  ext.SettingsResolutionConfigurator = {
    resolutionStrategy.cacheChangingModulesFor 1, 'hours'
  }

  repositories             SettingsRepositoryConfigurator
  dependencies             SettingsDependencyConfigurator
  configurations.classpath SettingsResolutionConfigurator

  // replacing the below with gradle.allprojects { buildscript {} } as per
  // http://forums.gradle.org/gradle/topics/while_we_are_waiting_for_plugins_in_settings_gradle
  // does not work. Leaving this in for now.  -Matias 2013.Sep.11
  // configurations.classpath.each { file -> settings.classLoader.addURL(file.toURI().toURL()) }
}

gradle.rootProject { 
  ext { 
    RepositoryConfigurator = SettingsRepositoryConfigurator
    DependencyConfigurator = SettingsDependencyConfigurator
    ResolutionConfigurator = SettingsResolutionConfigurator

    //atgModel = new DefaultAtgModel()
  }
}

gradle.allprojects {
  repositories RepositoryConfigurator
}


new glasir.Build(this).with {
  setup {
    rootProjectName "glasir.demo"
    cachePackagesFor 24, "hours"
    dependencies {
      glasirpackage("com.iteego.glasir.pkg:atg-10.0.2:+")
      glasirpackage("com.iteego.glasir.pkg:atg-initializer-10.0.2:+")
      glasirpackage("com.iteego.glasir.pkg:jboss-eap-5.1.0:1.1.2")
      glasirpackage("com.iteego.glasir.pkg:glasir.db:1.1.4-SNAPSHOT")
    }
    
    addAtgModules from: atgRoot
    addAtgModules from: "$settingsDir/packages/modules"
    addAtgModules from: "$settingsDir/packages/initializer"
    addAtgModules from: "$settingsDir/glasir-app", isAtgCore: false, 
                  excludes: ["**/*.war/", "Main/Data/db/", "Main/Data/import/", "**/build/", "**/config/", "**/src/", "**/lib/"]
  }
}
