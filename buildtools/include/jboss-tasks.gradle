import com.iteego.glasir.build.tasks.*

/*
Starts a hsql instance in the gradle java process. It starts the instance 
in a mode where the connecting url creates the database if it doesn't already 
exists. Example connection URLS:
 
jdbc:hsqldb:hsql://localhost/myalias;file:C:/files/mydatabase
jdbc:hsqldb:hsql://localhost/myalias;mem:test;sql.enforce_types=true
jdbc:hsqldb:hsql://localhost/myalias;filepath=file:C:/files/mydatabase
*/
task startDatabase(type: HsqlDb) {}

//task startDevStore(type: RunAtgOnJBoss, dependsOn: [startDatabase]) {
task startDevStore(type: RunAtgOnJBoss) {
  jBossRoot     jbossRoot
  serverName    storeServerName
  modules       "env.store.dev"
}

//task startDevAdmin(type: RunAtgOnJBoss, dependsOn: [startDatabase]) {
task startDevAdmin(type: RunAtgOnJBoss) {
  jBossRoot     jbossRoot
  serverName    adminServerName
  modules       "env.admin.dev"
}

task startCiStore(type: RunAtgOnJBoss, dependsOn: [startDatabase]) {
  jBossRoot     jbossRoot
  serverName    storeServerName
  modules       "env.store.dev"
  async         true
}

task verifyCiStore(type: Tail, dependsOn: [startCiStore]) {
  file         "$jbossRoot/server/$storeServerName/log/console.log"
  failOn       regex: "ERROR[ ]*\\[", postFireTailPeriod: "5 seconds"
  succeedOn    "INFO[ ]*\\[org\\.jboss\\.bootstrap\\.microcontainer\\.ServerImpl\\].*JBoss \\(Microcontainer\\) \\[.*\\] Started in"
  timeoutAfter "5 minutes"
}

task startCiAdmin(type: RunAtgOnJBoss, dependsOn: [startDatabase]) {
  jBossRoot     jbossRoot
  serverName    adminServerName
  modules       "env.admin.dev"
  async         true
}

task verifyCiAdmin(type: Tail, dependsOn: [startCiAdmin]) {
  file         "$jbossRoot/server/$adminServerName/log/console.log"
  failOn       regex: "ERROR[ ]*\\[", postFireTailPeriod: "5 seconds"
  succeedOn    "INFO[ ]*\\[org\\.jboss\\.bootstrap\\.microcontainer\\.ServerImpl\\].*JBoss \\(Microcontainer\\) \\[.*\\] Started in"
  timeoutAfter "5 minutes"
}
