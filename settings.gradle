import com.iteego.glasir.build.GlasirSettingsConvention

rootProject.name='glasir.boostrap'

buildscript {    
  repositories {
    maven {
      credentials {
        username artifactoryReader
        password artifactoryReaderPwd
      }
      url 'http://iteego.artifactoryonline.com/iteego/glasir-repos'
    }
  }

  //we need two artifacts to 'bootstrap' the gradle builds.
  //1. The artifactory plugin as the configuration for this plugin is then 
  //   used to resolve all other artifacts for the project
  //2. The glasir.build plugin as he is required in this file (settings.gradle)
  //   and can thus not be downloaded in a later build phase
  dependencies {
    classpath('com.iteego.glasir:glasir.build:1.0.25-SNAPSHOT') { changing=true }
    classpath('org.jfrog.buildinfo:build-info-extractor-gradle:2.0.7')
  }

  //set the expiry time for glasir.build and the gradle-artifactory plugin
  configurations.classpath {
    resolutionStrategy {
      failOnVersionConflict()
      cacheDynamicVersionsFor 1, 'minutes'
      cacheChangingModulesFor 1, 'minutes'
    }
  }
  configurations.classpath.resolutionStrategy.cacheChangingModulesFor 1, 'minutes'
  
  //add the above dependencies to the classpath of all sub project build scripts
  configurations.classpath.each { file -> settings.classLoader.addURL(file.toURI().toURL()) }
}

/*
* 
* Now use a convention object and set the required properties for setting up a gradle 
* multi project structure reflecting the ATG module structure in this source tree
*
*/
new GlasirSettingsConvention().with {
  // prompt for location of ATG dir, persisted into properties file
  // if file and property exists, value is returned without prompting
  String atgRoot = promptDir(message: "Please provide a valid ATG installation directory: ",
                             blockUntilSubItemsExist: "home/localconfig,home/bin, DAS",
                             propertyFile: "$settingsDir/.local.build.properties",
                             propertyName: "atgRoot")

  // configure module search roots. This enables the build to locate
  // all relevant ATG modules and analyze the ATG module dependencies of the
  // project. settingsDir is a gradle injected property representing the directory
  // where the settings.gradle file lives
  moduleSearchRoot dir: file(atgRoot), isAtgCore: true
  moduleSearchRoot dir: settingsDir, isAtgCore: false, includes: "glasir-app"

  //the below configures the gradle subprojects using the given module
  //search roots and the resulting atg modules. First parameter settings
  //is gradle injected settings instance, second param is a name for
  //the root project (and also the sub dir where we should look for
  //modules
  initializeProjectStructure (settings as Settings, "glasir-app")
}

