<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog                  
xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
 http://www.liquibase.org/xml/ns/dbchangelog-ext
 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">


<changeSet id='changeSet_0000_pub' author='iteego' context='prod'>
  <preConditions>
    <not>
      <tableExists schemaName='dbo' tableName='bogus_precondition_table'/>
    </not>
  </preConditions>

  <sql><![CDATA[

-- Collected from DAS/sql/db_components/mysql/id_generator.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/id_generator.xml#2 $$Change: 635969 $

create table das_id_generator (
	id_space_name	varchar(60)	not null,
	seed	bigint	not null,
	batch_size	integer	not null,
	prefix	varchar(10)	null,
	suffix	varchar(10)	null
,constraint das_id_generator_p primary key (id_space_name));


create table das_secure_id_gen (
	id_space_name	varchar(60)	not null,
	seed	bigint	not null,
	batch_size	integer	not null,
	ids_per_batch	integer	null,
	prefix	varchar(10)	null,
	suffix	varchar(10)	null
,constraint das_secure_id_ge_p primary key (id_space_name));

commit;




-- Collected from DAS/sql/db_components/mysql/dms_limbo_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/dms_limbo_ddl.xml#2 $$Change: 635969 $
-- This table is where limbo instance/clients identify themselves. --There should only be one entry in this table for each Dynamo running PatchBay with message delays enabled.

create table dms_limbo (
	limbo_name	varchar(250)	not null,
	limbo_id	bigint	not null
,constraint limbo_pk primary key (limbo_name));

-- The following four tables comprise the parts of the stored messages.

create table dms_limbo_msg (
	msg_id	bigint	not null,
	limbo_id	bigint	not null,
	delivery_date	bigint	not null,
	delivery_count	tinyint	not null,
	msg_src_name	varchar(250)	not null,
	port_name	varchar(250)	not null,
	msg_class	varchar(250)	not null,
	msg_class_type	tinyint	not null,
	jms_type	varchar(250)	null,
	jms_expiration	bigint	null,
	jms_correlationid	varchar(250)	null
,constraint limbo_msg_pk primary key (msg_id));

create index dms_limbo_read_idx on dms_limbo_msg (limbo_id,delivery_date);
-- If serialized reply-to destinations are known to be small enough, this binary column's size can be reduced for efficiency.  The size here has been chosen to work with local dms and SQL-JMS.

create table dms_limbo_replyto (
	msg_id	bigint	not null,
	jms_replyto	varbinary(500)	null
,constraint limbo_replyto_pk primary key (msg_id));

-- If serialized message bodies are known to be small enough, this binary column's size can be reduced for efficiency.  The size here has been chosen to work with almost all types of messages but may be larger than necessary.  Actual usage analysis is recommended for finding the optimal binary column size.

create table dms_limbo_body (
	msg_id	bigint	not null,
	msg_body	longblob	null
,constraint limbo_body_pk primary key (msg_id));

-- This table represents a map of properties for messages stored above, i.e.  there can be multiple rows in this table for a single row in the preceeding tables.

create table dms_limbo_props (
	msg_id	bigint	not null,
	prop_name	varchar(250)	not null,
	prop_value	varchar(250)	not null
,constraint limbo_props_pk primary key (msg_id,prop_name));


create table dms_limbo_ptypes (
	msg_id	bigint	not null,
	prop_name	varchar(250)	not null,
	prop_type	tinyint	not null
,constraint dms_limbo_ptypes_p primary key (msg_id,prop_name));


create table dms_limbo_delay (
	msg_id	bigint	not null,
	delay	bigint	not null,
	max_attempts	tinyint	not null,
	failure_port	varchar(250)	not null,
	jms_timestamp	bigint	null,
	jms_deliverymode	integer	null,
	jms_priority	integer	null,
	jms_messageid	varchar(250)	null,
	jms_redelivered	tinyint	null,
	jms_destination	varbinary(500)	null
,constraint limbo_delay_pk primary key (msg_id));

commit;




-- Collected from DAS/sql/db_components/mysql/cluster_name_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/cluster_name_ddl.xml#2 $$Change: 635969 $

create table das_cluster_name (
	cluster_name	varchar(255)	not null,
	saved_date	bigint	not null);

commit;




-- Collected from DAS/sql/db_components/mysql/create_sql_jms_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/create_sql_jms_ddl.xml#2 $$Change: 635969 $

create table dms_client (
	client_name	varchar(250)	not null,
	client_id	bigint	null
,constraint dms_client_p primary key (client_name));


create table dms_queue (
	queue_name	varchar(250)	null,
	queue_id	bigint	not null,
	temp_id	bigint	null
,constraint dms_queue_p primary key (queue_id));


create table dms_queue_recv (
	client_id	bigint	null,
	receiver_id	bigint	not null,
	queue_id	bigint	null
,constraint dms_queue_recv_p primary key (receiver_id));


create table dms_queue_entry (
	queue_id	bigint	not null,
	msg_id	bigint	not null,
	delivery_date	bigint	null,
	handling_client_id	bigint	null,
	read_state	bigint	null
,constraint dms_queue_entry_p primary key (queue_id,msg_id));


create table dms_topic (
	topic_name	varchar(250)	null,
	topic_id	bigint	not null,
	temp_id	bigint	null
,constraint dms_topic_p primary key (topic_id));


create table dms_topic_sub (
	client_id	bigint	null,
	subscriber_name	varchar(250)	null,
	subscriber_id	bigint	not null,
	topic_id	bigint	null,
	durable	tinyint	null,
	active	tinyint	null
,constraint dms_topic_sub_p primary key (subscriber_id));


create table dms_topic_entry (
	subscriber_id	bigint	not null,
	msg_id	bigint	not null,
	delivery_date	bigint	null,
	read_state	bigint	null
,constraint dms_topic_entry_p primary key (subscriber_id,msg_id));

create index dms_topic_msg_idx on dms_topic_entry (msg_id,subscriber_id);
create index dms_topic_read_idx on dms_topic_entry (read_state,delivery_date);

create table dms_msg (
	msg_class	varchar(250)	null,
	has_properties	tinyint	null,
	reference_count	integer	null,
	msg_id	bigint	not null,
	timestamp	bigint	null,
	correlation_id	varchar(250)	null,
	reply_to	bigint	null,
	destination	bigint	null,
	delivery_mode	tinyint	null,
	redelivered	tinyint	null,
	type	varchar(250)	null,
	expiration	bigint	null,
	priority	tinyint	null,
	small_body	varbinary(250)	null,
	large_body	longblob	null
,constraint dms_msg_p primary key (msg_id));


create table dms_msg_properties (
	msg_id	bigint	not null,
	data_type	tinyint	null,
	name	varchar(250)	not null,
	value	varchar(250)	null
,constraint dms_msg_properti_p primary key (msg_id,name));

commit;


-- Collected from DAS/sql/db_components/mysql/create_staff_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/create_staff_ddl.xml#2 $$Change: 635969 $
-- SQL for creating the Dynamo Staff Repository for the GSA
-- Primary account table.
--  Type=1 is a login account.  The first_name, last_name, and password         fields are valid for this type of account.
-- Type=2 is a group account.  The description field is valid for        this type of account.
-- Type=4 is a privilege account.  The description field is valid for        this type of account.

create table das_account (
	account_name	nvarchar(254)	not null,
	type	integer	not null,
	first_name	nvarchar(254)	null,
	last_name	nvarchar(254)	null,
	password	varchar(254)	null,
	description	nvarchar(254)	null,
	lastpwdupdate	datetime	null
,constraint das_account_p primary key (account_name));


create table das_group_assoc (
	account_name	nvarchar(254)	not null,
	sequence_num	integer	not null,
	group_name	nvarchar(254)	not null
,constraint das_grp_asc_p primary key (account_name,sequence_num));

-- Adding the previous password information

create table das_acct_prevpwd (
	account_name	nvarchar(254)	not null,
	seq_num	integer	not null,
	prevpwd	varchar(35)	null
,constraint das_prevpwd_p primary key (account_name,seq_num)
,constraint das_prvpwd_d_f foreign key (account_name) references das_account (account_name));

commit;




-- Collected from DAS/sql/db_components/mysql/create_gsa_subscribers_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/create_gsa_subscribers_ddl.xml#2 $$Change: 635969 $

create table das_gsa_subscriber (
	id	integer	not null,
	address	varchar(50)	not null,
	port	integer	not null,
	repository	varchar(256)	not null,
	itemdescriptor	varchar(256)	not null
,constraint das_gsa_subscrib_p primary key (id));

commit;




-- Collected from DAS/sql/db_components/mysql/create_sds.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/create_sds.xml#2 $$Change: 635969 $

create table das_sds (
	sds_name	varchar(50)	not null,
	curr_ds_name	varchar(50)	null,
	dynamo_server	varchar(80)	null,
	last_modified	datetime	null
,constraint das_sds_p primary key (sds_name));

commit;




-- Collected from DAS/sql/db_components/mysql/integration_data_ddl.sql



create table if_integ_data (
	item_id	varchar(40)	not null,
	descriptor	nvarchar(64)	not null,
	repository	nvarchar(255)	not null,
	state	integer	not null,
	last_import	datetime	null,
	version	integer	not null
,constraint if_int_data_p primary key (item_id,descriptor,repository));

commit;




-- Collected from DAS/sql/db_components/mysql/nucleus_security_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/nucleus_security_ddl.xml#2 $$Change: 635969 $

create table das_nucl_sec (
	func_name	nvarchar(254)	not null,
	policy	nvarchar(254)	not null
,constraint func_name_pk primary key (func_name));


create table das_ns_acls (
	id	nvarchar(254)	not null,
	index_num	integer	not null,
	acl	nvarchar(254)	not null
,constraint id_index_pk primary key (id,index_num));

commit;




-- Collected from DAS/sql/db_components/mysql/media_ddl.sql


--     @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/media_ddl.xml#2 $$Change: 635969 $  
--     media content repository tables.  

create table media_folder (
	folder_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	description	nvarchar(254)	null,
	name	nvarchar(254)	not null,
	path	nvarchar(254)	not null,
	parent_folder_id	varchar(40)	null
,constraint md_folder_p primary key (folder_id)
,constraint md_foldparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));

create index fldr_mfldrid_idx on media_folder (parent_folder_id);
create index md_fldr_path_idx on media_folder (path);

create table media_base (
	media_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	description	nvarchar(254)	null,
	name	nvarchar(254)	not null,
	path	nvarchar(254)	not null,
	parent_folder_id	varchar(40)	not null,
	media_type	integer	null
,constraint media_p primary key (media_id)
,constraint medparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));

create index med_mfldrid_idx on media_base (parent_folder_id);
create index media_path_idx on media_base (path);
create index media_type_idx on media_base (media_type);

create table media_ext (
	media_id	varchar(40)	not null,
	url	varchar(254)	not null
,constraint media_ext_p primary key (media_id)
,constraint medxtmed_d_f foreign key (media_id) references media_base (media_id));


create table media_bin (
	media_id	varchar(40)	not null,
	length	integer	not null,
	last_modified	datetime	not null,
	data	longblob	not null
,constraint media_bin_p primary key (media_id)
,constraint medbnmed_d_f foreign key (media_id) references media_base (media_id));


create table media_txt (
	media_id	varchar(40)	not null,
	length	integer	not null,
	last_modified	datetime	not null,
	data	longtext not null
,constraint media_txt_p primary key (media_id)
,constraint medtxtmed_d_f foreign key (media_id) references media_base (media_id));

commit;




-- Collected from DAS/sql/db_components/mysql/deployment_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/deployment_ddl.xml#2 $
--     These tables are for the daf deployment system  

create table das_deployment (
	deployment_id	varchar(40)	not null,
	version	integer	not null,
	start_time	datetime	null,
	end_time	datetime	null,
	failure_time	datetime	null,
	status	integer	null,
	prev_status	integer	null,
	status_detail	varchar(255)	null,
	current_phase	integer	null,
	rep_high_mark	integer	null,
	rep_marks_avail	integer	null,
	file_high_mark	integer	null,
	file_marks_avail	integer	null,
	thread_batch_size	integer	null,
	failure_count	integer	null,
	purge_deploy_data	tinyint	null
,constraint daf_depl_pk primary key (deployment_id));

create index das_dpl_start_idx on das_deployment (start_time);

create table das_depl_progress (
	deployment_id	varchar(40)	not null,
	version	integer	not null,
	work_completed	integer	null,
	total_work	integer	null
,constraint daf_depl_prg_pk primary key (deployment_id));


create table das_thread_batch (
	thread_batch_id	varchar(40)	not null,
	version	integer	not null,
	deployment	varchar(40)	null,
	type	integer	null,
	owner	varchar(255)	null,
	thread_name	varchar(255)	null,
	lower_bound	integer	null,
	upper_bound	integer	null,
	last_update_time	datetime	null,
	running	tinyint	not null
,constraint das_dpl_tb_pk primary key (thread_batch_id));

create index das_tb_deployment on das_thread_batch (deployment);
create index das_tb_owner on das_thread_batch (owner);
create index das_tb_thread_nam on das_thread_batch (thread_name);

create table das_deploy_data (
	deploy_data_id	varchar(40)	not null,
	version	integer	not null,
	type	integer	null,
	source	varchar(255)	null,
	destination	varchar(255)	null,
	dest_server	varchar(255)	null,
	deployment	varchar(40)	null
,constraint deploy_data_pk primary key (deploy_data_id)
,constraint dd_deployment_fk foreign key (deployment) references das_deployment (deployment_id));

create index dd_deployment_idx on das_deploy_data (deployment);

create table das_deploy_mark (
	marker_id	varchar(40)	not null,
	version	integer	not null,
	type	integer	null,
	status	integer	null,
	index_number	integer	null,
	marker_action	integer	null,
	f_src_devline_id	varchar(40)	null,
	r_src_devline_id	varchar(40)	null,
	deployment_id	varchar(40)	null,
	deployment_data	varchar(40)	null
,constraint marker_pk primary key (marker_id));

create index marker_index_idx on das_deploy_mark (index_number);

create table das_rep_mark (
	rep_marker_id	varchar(40)	not null,
	item_desc_name	varchar(255)	null,
	item_id	varchar(255)	null
,constraint rep_marker_pk primary key (rep_marker_id));


create table das_file_mark (
	file_marker_id	varchar(40)	not null,
	file_path	varchar(1000)	null
,constraint file_marker_pk primary key (file_marker_id));


create table das_depl_depldat (
	deployment_id	varchar(40)	not null,
	sequence_num	integer	not null,
	deployment_data	varchar(40)	null
,constraint das_dpl_depdat_pk primary key (deployment_id,sequence_num));


create table das_depl_options (
	deployment_id	varchar(40)	not null,
	tag	varchar(255)	not null,
	optionValue	varchar(255)	null
,constraint das_dpl_depopt_pk primary key (deployment_id,tag));


create table das_depl_repmaps (
	deployment_id	varchar(40)	not null,
	source	varchar(255)	not null,
	destination	varchar(255)	null
,constraint das_dpl_repmap_pk primary key (deployment_id,source));


create table das_depl_item_ref (
	item_ref_id	varchar(40)	not null,
	version	integer	not null,
	deployment_id	varchar(40)	null,
	repository	varchar(255)	null,
	item_desc_name	varchar(255)	null,
	item_id	varchar(255)	null,
	item_index	integer	null
,constraint das_dpl_itmref_pk primary key (item_ref_id));

create index das_dpl_itmx_idx on das_depl_item_ref (item_index);
create index das_dpl_dplid_idx on das_depl_item_ref (deployment_id);

create table das_dd_markers (
	deploy_data_id	varchar(40)	not null,
	sequence_num	integer	not null,
	marker	varchar(40)	null
,constraint das_dpl_dd_mrk_pk primary key (deploy_data_id,sequence_num)
,constraint marker_fk foreign key (marker) references das_deploy_mark (marker_id));

create index marker_idx on das_dd_markers (marker);

create table das_dep_fail_info (
	id	varchar(40)	not null,
	deployment_id	varchar(40)	not null,
	marker_id	varchar(40)	null,
	severity	varchar(40)	null,
	failure_message	varchar(255)	null,
	failure_time	datetime	null,
	error_code	varchar(40)	null,
	cause	longtext	null);

commit;




-- Collected from DAS/sql/db_components/mysql/sitemap_ddl.sql


--     @version $Id:    //product/DAF/Sitemap/main/templates/DAS/sql/deployment_ddl.xml#26 $  
-- Table for siteindex repository item

create table das_siteindex (
	siteindex_id	varchar(40)	not null,
	lastmod	datetime	null,
	filename	varchar(100)	null,
	xml	longtext null
,constraint siteindex_pk primary key (siteindex_id));

-- Table for sitemap repository item

create table das_sitemap (
	sitemap_id	varchar(40)	not null,
	lastmod	datetime	null,
	filename	varchar(100)	null,
	xml	longtext null
,constraint sitemap_pk primary key (sitemap_id));

commit;




-- Collected from DPS/sql/db_components/mysql/user_ddl.sql


--  @version $Id: //product/DPS/version/10.0.2/templates/DPS/sql/user_ddl.xml#2 $$Change: 635969 $
-- This file contains create table statements, which will configure your database for use with the new DPS schema.
-- Add the organization definition.  It's out of place, but since dps_user references it, it's got to be defined up here

create table dps_organization (
	org_id	varchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	parent_org	varchar(40)	null
,constraint dps_organization_p primary key (org_id)
,constraint dps_orgnparnt_rg_f foreign key (parent_org) references dps_organization (org_id));

create index dps_orgparent_org on dps_organization (parent_org);
-- Default Profile User Template
-- Basic user info.  note: the password field size must be at a minimum 35 characters       if DPS stores a hash of the password and not the actual value.

create table dps_user (
	id	varchar(40)	not null,
	login	nvarchar(40)	not null,
	auto_login	tinyint	null,
	password	varchar(35)	null,
	member	tinyint	null,
	first_name	nvarchar(40)	null,
	middle_name	nvarchar(40)	null,
	last_name	nvarchar(40)	null,
	user_type	integer	null,
	locale	integer	null,
	lastactivity_date	datetime	null,
	lastpwdupdate	datetime	null,
	generatedpwd	tinyint	null,
	registration_date	datetime	null,
	email	nvarchar(255)	null,
	email_status	integer	null,
	receive_email	integer	null,
	last_emailed	datetime	null,
	gender	integer	null,
	date_of_birth	date	null,
	securityStatus	integer	null,
	description	nvarchar(254)	null
,constraint dps_user_p primary key (id)
,constraint dps_user_u unique (login)
,constraint dps_user1_c check (auto_login in (0,1))
,constraint dps_user2_c check (member in (0,1)));


create table dps_contact_info (
	id	varchar(40)	not null,
	user_id	varchar(40)	null,
	prefix	nvarchar(40)	null,
	first_name	nvarchar(40)	null,
	middle_name	nvarchar(40)	null,
	last_name	nvarchar(40)	null,
	suffix	nvarchar(40)	null,
	job_title	nvarchar(100)	null,
	company_name	nvarchar(40)	null,
	address1	nvarchar(50)	null,
	address2	nvarchar(50)	null,
	address3	nvarchar(50)	null,
	city	nvarchar(30)	null,
	state	nvarchar(20)	null,
	postal_code	nvarchar(10)	null,
	county	nvarchar(40)	null,
	country	nvarchar(40)	null,
	phone_number	nvarchar(30)	null,
	fax_number	nvarchar(30)	null
,constraint dps_contact_info_p primary key (id));


create table dps_user_address (
	id	varchar(40)	not null,
	home_addr_id	varchar(40)	null,
	billing_addr_id	varchar(40)	null,
	shipping_addr_id	varchar(40)	null
,constraint dps_user_address_p primary key (id)
,constraint dps_usrddrssid_f foreign key (id) references dps_user (id));

create index dps_usr_adr_shp_id on dps_user_address (shipping_addr_id);
create index dps_usr_blng_ad_id on dps_user_address (billing_addr_id);
create index dps_usr_home_ad_id on dps_user_address (home_addr_id);

create table dps_other_addr (
	user_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	address_id	varchar(40)	not null
,constraint dps_other_addr_p primary key (user_id,tag)
,constraint dps_othrddrusr_d_f foreign key (user_id) references dps_user (id));


create table dps_mailing (
	id	varchar(40)	not null,
	name	nvarchar(255)	null,
	subject	nvarchar(80)	null,
	uniq_server_id	varchar(255)	null,
	from_address	nvarchar(255)	null,
	replyto	nvarchar(255)	null,
	template_URL	varchar(255)	null,
	alt_template_URL	varchar(255)	null,
	batch_exec_id	varchar(40)	null,
	cc	longtext	null,
	bcc	longtext	null,
	send_as_html	integer	null,
	send_as_text	integer	null,
	params	longblob	null,
	start_time	datetime	null,
	end_time	datetime	null,
	status	integer	null,
	num_profiles	integer	null,
	num_sent	integer	null,
	num_bounces	integer	null,
	num_soft_bounces	integer	null,
	num_errors	integer	null,
	num_skipped	integer	null,
	fill_from_templ	tinyint	null,
	is_batched	tinyint	null,
	ignore_fatigue	tinyint	null,
	batch_size	integer	null
,constraint dps_mailing_p primary key (id));


create table dps_mail_trackdata (
	mailing_id	varchar(40)	not null,
	map_key	varchar(254)	not null,
	map_value	varchar(254)	null
,constraint dps_mail_trackd_p primary key (mailing_id,map_key)
,constraint dps_mail_trackd_f foreign key (mailing_id) references dps_mailing (id));


create table dps_mail_batch (
	mailing_id	varchar(40)	not null,
	start_idx	integer	not null,
	uniq_server_id	varchar(254)	null,
	start_time	datetime	null,
	end_time	datetime	null,
	status	integer	null,
	num_profiles	integer	null,
	num_sent	integer	null,
	num_bounces	integer	null,
	num_errors	integer	null,
	num_skipped	integer	null,
	is_summarized	tinyint	null
,constraint dps_mail_batch_p primary key (mailing_id,start_idx)
,constraint dps_mailbatch_d_f foreign key (mailing_id) references dps_mailing (id));


create table dps_mail_server (
	uniq_server_id	varchar(254)	not null,
	last_updated	datetime	null
,constraint dps_mail_server_p primary key (uniq_server_id));


create table dps_user_mailing (
	mailing_id	varchar(40)	not null,
	user_id	varchar(40)	not null,
	idx	integer	not null
,constraint dps_user_mailing_p primary key (mailing_id,user_id)
,constraint dps_usrmmalng_d_f foreign key (mailing_id) references dps_mailing (id)
,constraint dps_usrmlngusr_d_f foreign key (user_id) references dps_user (id));

create index dps_u_mail_uid on dps_user_mailing (user_id);

create table dps_email_address (
	mailing_id	varchar(40)	not null,
	email_address	varchar(255)	not null,
	idx	integer	not null
,constraint dps_email_addres_p primary key (mailing_id,idx)
,constraint dps_emldmalng_d_f foreign key (mailing_id) references dps_mailing (id));

-- Organizations/roles

create table dps_role (
	role_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null
,constraint dps_role_p primary key (role_id));

-- Extending the user profile to include references to the roles that are assigned to this user

create table dps_user_roles (
	user_id	varchar(40)	not null,
	atg_role	varchar(40)	not null
,constraint dps_user_roles_p primary key (user_id,atg_role)
,constraint dps_usrrlsatg_rl_f foreign key (atg_role) references dps_role (role_id)
,constraint dps_usrrlsusr_d_f foreign key (user_id) references dps_user (id));

create index dps_usr_roles_id on dps_user_roles (atg_role);

create table dps_org_role (
	org_id	varchar(40)	not null,
	atg_role	varchar(40)	not null
,constraint dps_org_role_p primary key (org_id,atg_role)
,constraint dps_orgrlorg_d_f foreign key (org_id) references dps_organization (org_id)
,constraint dps_orgrlatg_rl_f foreign key (atg_role) references dps_role (role_id));

create index dps_org_rolerole on dps_org_role (atg_role);

create table dps_role_rel_org (
	organization	varchar(40)	not null,
	sequence_num	integer	not null,
	role_id	varchar(40)	not null
,constraint dps_role_rel_org_p primary key (organization,sequence_num)
,constraint dps_rolrorgnztn_f foreign key (organization) references dps_organization (org_id)
,constraint dps_rolrlrgrol_d_f foreign key (role_id) references dps_role (role_id));

create index dps_role_rel_org on dps_role_rel_org (role_id);

create table dps_relativerole (
	role_id	varchar(40)	not null,
	dps_function	nvarchar(40)	not null,
	relative_to	varchar(40)	not null
,constraint dps_relativerole_p primary key (role_id)
,constraint dps_reltreltv_t_f foreign key (relative_to) references dps_organization (org_id)
,constraint dps_reltvrlrol_d_f foreign key (role_id) references dps_role (role_id));

create index dps_relativerole on dps_relativerole (relative_to);

create table dps_user_org (
	organization	varchar(40)	not null,
	user_id	varchar(40)	not null
,constraint dps_user_org_p primary key (organization,user_id)
,constraint dps_usrrgorgnztn_f foreign key (organization) references dps_organization (org_id)
,constraint dps_usrrgusr_d_f foreign key (user_id) references dps_user (id));

create index dps_usr_orgusr_id on dps_user_org (user_id);

create table dps_user_org_anc (
	user_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_org	varchar(40)	not null
,constraint dps_user_org_anc_p primary key (user_id,sequence_num)
,constraint dps_usrranc_rg_f foreign key (anc_org) references dps_organization (org_id)
,constraint dps_usrrgncusr_d_f foreign key (user_id) references dps_user (id));

create index dps_usr_org_ancanc on dps_user_org_anc (anc_org);

create table dps_org_chldorg (
	org_id	varchar(40)	not null,
	child_org_id	varchar(40)	not null
,constraint dps_org_chldorg_p primary key (org_id,child_org_id)
,constraint dps_orgcchild_rg_f foreign key (child_org_id) references dps_organization (org_id)
,constraint dps_orgcorg_d_f foreign key (org_id) references dps_organization (org_id));

create index dps_org_chldorg_id on dps_org_chldorg (child_org_id);

create table dps_org_ancestors (
	org_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_org	varchar(40)	not null
,constraint dps_org_ancestor_p primary key (org_id,sequence_num)
,constraint dps_orgnanc_rg_f foreign key (anc_org) references dps_organization (org_id)
,constraint dps_orgnorg_d_f foreign key (org_id) references dps_organization (org_id));

create index dps_org_ancanc_org on dps_org_ancestors (anc_org);
-- Adding the folder information

create table dps_folder (
	folder_id	varchar(40)	not null,
	type	integer	not null,
	name	nvarchar(254)	not null,
	parent	varchar(40)	null,
	description	nvarchar(254)	null
,constraint dps_folder_p primary key (folder_id)
,constraint dps_foldrparnt_f foreign key (parent) references dps_folder (folder_id));

create index dps_folderparent on dps_folder (parent);

create table dps_child_folder (
	folder_id	varchar(40)	not null,
	child_folder_id	varchar(40)	not null
,constraint dps_child_folder_p primary key (folder_id,child_folder_id)
,constraint dps_chilchild_fl_f foreign key (child_folder_id) references dps_folder (folder_id)
,constraint dps_chilfoldr_d_f foreign key (folder_id) references dps_folder (folder_id));

create index dps_chld_fldr_fld on dps_child_folder (child_folder_id);

create table dps_rolefold_chld (
	rolefold_id	varchar(40)	not null,
	role_id	varchar(40)	not null
,constraint dps_rolefold_chl_p primary key (rolefold_id,role_id)
,constraint dps_rolfrolfld_d_f foreign key (rolefold_id) references dps_folder (folder_id)
,constraint dps_rolfrol_d_f foreign key (role_id) references dps_role (role_id));

create index dps_rolfldchldrole on dps_rolefold_chld (role_id);
-- Adding the previous password information

create table dps_user_prevpwd (
	id	varchar(40)	not null,
	seq_num	integer	not null,
	prevpwd	varchar(35)	null
,constraint dps_prevpwd_p primary key (id,seq_num)
,constraint dps_prvpwd_d_f foreign key (id) references dps_user (id));

commit;




-- Collected from DPS/sql/db_components/mysql/logging_ddl.sql


--  @version $Id: //product/DPS/version/10.0.2/templates/DPS/sql/logging_ddl.xml#2 $$Change: 635969 $
-- This file contains create table statements needed to configure your database for use with the DPS logging/reporting subsystem.This script will create tables and indexes associated with the newlogging and reporting subsystem. To initialize these tables run thelogging_init.sql script.
-- Tables for storing logging data for reports

create table dps_event_type (
	id	integer	not null,
	name	varchar(32)	not null
,constraint dps_event_type_p primary key (id)
,constraint dps_event_type_u unique (name));


create table dps_user_event (
	id	bigint	not null,
	timestamp	datetime	not null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	eventtype	integer	not null,
	profileid	varchar(25)	null,
	member	tinyint	default 0 not null
,constraint dps_user_event_p primary key (id)
,constraint dps_usrvevnttyp_f foreign key (eventtype) references dps_event_type (id)
,constraint dps_user_event_c check (member in (0,1)));

create index dps_user_event_ix on dps_user_event (eventtype);
create index dps_ue_ts on dps_user_event (timestamp);

create table dps_user_event_sum (
	eventtype	integer	not null,
	summarycount	integer	not null,
	fromtime	datetime	not null,
	totime	datetime	not null
,constraint dps_usrsuevnttyp_f foreign key (eventtype) references dps_event_type (id));

create index dps_user_ev_sum_ix on dps_user_event_sum (eventtype);
create index dps_ues_ft on dps_user_event_sum (fromtime,totime,eventtype);

create table dps_request (
	id	bigint	not null,
	timestamp	datetime	not null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	name	varchar(255)	not null,
	member	tinyint	default 0 not null
,constraint dps_request_p primary key (id)
,constraint dps_request_c check (member in (0,1)));

create index dps_r_ts on dps_request (timestamp);

create table dps_reqname_sum (
	name	varchar(255)	not null,
	member	tinyint	default 0 not null,
	summarycount	integer	not null,
	fromtime	datetime	not null,
	totime	datetime	not null
,constraint dps_reqname_sum_c check (member in (0,1)));

create index dps_rns_ft on dps_reqname_sum (fromtime,totime);

create table dps_session_sum (
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	member	tinyint	default 0 not null,
	summarycount	integer	not null,
	fromtime	datetime	not null,
	totime	datetime	not null
,constraint dps_session_sum_c check (member in (0,1)));

create index dps_rss_ft on dps_session_sum (fromtime,totime,sessionid);

create table dps_con_req (
	id	bigint	not null,
	timestamp	datetime	not null,
	requestid	bigint	null,
	contentid	varchar(255)	not null
,constraint dps_con_req_p primary key (id));

create index dps_cr_ts on dps_con_req (timestamp);

create table dps_con_req_sum (
	contentid	varchar(255)	not null,
	member	tinyint	default 0 not null,
	summarycount	integer	not null,
	fromtime	datetime	not null,
	totime	datetime	not null
,constraint dps_con_req_sum_c check (member in (0,1)));

create index dps_crs_ft on dps_con_req_sum (fromtime,totime);

create table dps_pgrp_req_sum (
	groupname	nvarchar(64)	not null,
	contentname	nvarchar(255)	not null,
	summarycount	integer	not null,
	fromtime	datetime	not null,
	totime	datetime	not null);

create index dps_prs_ft on dps_pgrp_req_sum (fromtime,totime);

create table dps_pgrp_con_sum (
	groupname	nvarchar(64)	not null,
	contentname	nvarchar(64)	not null,
	summarycount	integer	not null,
	fromtime	datetime	not null,
	totime	datetime	not null);

create index dps_pcs_ft on dps_pgrp_con_sum (fromtime,totime);

create table dps_log_id (
	tablename	varchar(30)	not null,
	nextid	bigint	not null
,constraint dps_log_id_p primary key (tablename));

commit;




-- Collected from DPS/sql/db_components/mysql/logging_init.sql


--  @version $Id: //product/DPS/version/10.0.2/templates/DPS/sql/logging_init.xml#2 $$Change: 635969 $
-- This file contains SQL statements which will initialize theDPS logging/reporting tables.
-- Set names of the default user event types, and initialize the log entry id counters

--	START TRANSACTION;
	INSERT INTO dps_event_type (id, name) VALUES (0, 'newsession');
	INSERT INTO dps_event_type (id, name) VALUES (1, 'sessionexpiration');
	INSERT INTO dps_event_type (id, name) VALUES (2, 'login');
	INSERT INTO dps_event_type (id, name) VALUES (3, 'registration');
	INSERT INTO dps_event_type (id, name) VALUES (4, 'logout');
	INSERT INTO dps_log_id (tablename, nextid) VALUES ('dps_user_event', 0);
	INSERT INTO dps_log_id (tablename, nextid) VALUES ('dps_request', 0);
	INSERT INTO dps_log_id (tablename, nextid) VALUES ('dps_con_req', 0);
	COMMIT;
        
commit;




-- Collected from DPS/InternalUsers/sql/db_components/mysql/internal_user_ddl.sql


--  @version $Id: //product/DPS/version/10.0.2/templates/DPS/InternalUsers/sql/internal_user_ddl.xml#1 $$Change: 633540 $
-- This file contains create table statements, which will configure your database for use with the new DPS schema.
-- Add the organization definition.  It's out of place, but since dpi_user references it, it's got to be defined up here

create table dpi_organization (
	org_id	varchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	parent_org	varchar(40)	null
,constraint dpi_organization_p primary key (org_id)
,constraint dpi_orgnparnt_rg_f foreign key (parent_org) references dpi_organization (org_id));

create index dpi_orgparent_org on dpi_organization (parent_org);
-- Default Profile User Template
-- Basic user info.  note: the password field size must be at a minimum 35 characters       if DPS stores a hash of the password and not the actual value.

create table dpi_user (
	id	varchar(40)	not null,
	login	nvarchar(40)	not null,
	auto_login	tinyint	null,
	password	varchar(35)	null,
	member	tinyint	null,
	first_name	nvarchar(40)	null,
	middle_name	nvarchar(40)	null,
	last_name	nvarchar(40)	null,
	user_type	integer	null,
	locale	integer	null,
	lastactivity_date	datetime	null,
	lastpwdupdate	datetime	null,
	generatedpwd	tinyint	null,
	registration_date	datetime	null,
	email	nvarchar(255)	null,
	email_status	integer	null,
	receive_email	integer	null,
	last_emailed	datetime	null,
	gender	integer	null,
	date_of_birth	date	null,
	securityStatus	integer	null,
	description	nvarchar(254)	null
,constraint dpi_user_p primary key (id)
,constraint dpi_user_u unique (login)
,constraint dpi_user1_c check (auto_login in (0,1))
,constraint dpi_user2_c check (member in (0,1)));


create table dpi_contact_info (
	id	varchar(40)	not null,
	user_id	varchar(40)	null,
	prefix	nvarchar(40)	null,
	first_name	nvarchar(40)	null,
	middle_name	nvarchar(40)	null,
	last_name	nvarchar(40)	null,
	suffix	nvarchar(40)	null,
	job_title	nvarchar(100)	null,
	company_name	nvarchar(40)	null,
	address1	nvarchar(50)	null,
	address2	nvarchar(50)	null,
	address3	nvarchar(50)	null,
	city	nvarchar(30)	null,
	state	nvarchar(20)	null,
	postal_code	nvarchar(10)	null,
	county	nvarchar(40)	null,
	country	nvarchar(40)	null,
	phone_number	nvarchar(30)	null,
	fax_number	nvarchar(30)	null
,constraint dpi_contact_info_p primary key (id));


create table dpi_user_address (
	id	varchar(40)	not null,
	home_addr_id	varchar(40)	null,
	billing_addr_id	varchar(40)	null,
	shipping_addr_id	varchar(40)	null
,constraint dpi_user_address_p primary key (id)
,constraint dpi_usrddrssid_f foreign key (id) references dpi_user (id));

create index dpi_usr_adr_shp_id on dpi_user_address (shipping_addr_id);
create index dpi_usr_blng_ad_id on dpi_user_address (billing_addr_id);
create index dpi_usr_home_ad_id on dpi_user_address (home_addr_id);

create table dpi_other_addr (
	user_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	address_id	varchar(40)	not null
,constraint dpi_other_addr_p primary key (user_id,tag)
,constraint dpi_othrddrusr_d_f foreign key (user_id) references dpi_user (id));


create table dpi_mailing (
	id	varchar(40)	not null,
	name	nvarchar(255)	null,
	subject	nvarchar(80)	null,
	uniq_server_id	varchar(255)	null,
	from_address	nvarchar(255)	null,
	replyto	nvarchar(255)	null,
	template_URL	varchar(255)	null,
	alt_template_URL	varchar(255)	null,
	batch_exec_id	varchar(40)	null,
	cc	longtext	null,
	bcc	longtext	null,
	send_as_html	integer	null,
	send_as_text	integer	null,
	params	longblob	null,
	start_time	datetime	null,
	end_time	datetime	null,
	status	integer	null,
	num_profiles	integer	null,
	num_sent	integer	null,
	num_bounces	integer	null,
	num_soft_bounces	integer	null,
	num_errors	integer	null,
	num_skipped	integer	null,
	fill_from_templ	tinyint	null,
	is_batched	tinyint	null,
	ignore_fatigue	tinyint	null,
	batch_size	integer	null
,constraint dpi_mailing_p primary key (id));


create table dpi_mail_trackdata (
	mailing_id	varchar(40)	not null,
	map_key	varchar(254)	not null,
	map_value	varchar(254)	null
,constraint dpi_mail_trackd_p primary key (mailing_id,map_key)
,constraint dpi_mail_trackd_f foreign key (mailing_id) references dpi_mailing (id));


create table dpi_mail_batch (
	mailing_id	varchar(40)	not null,
	start_idx	integer	not null,
	uniq_server_id	varchar(254)	null,
	start_time	datetime	null,
	end_time	datetime	null,
	status	integer	null,
	num_profiles	integer	null,
	num_sent	integer	null,
	num_bounces	integer	null,
	num_errors	integer	null,
	num_skipped	integer	null,
	is_summarized	tinyint	null
,constraint dpi_mail_batch_p primary key (mailing_id,start_idx)
,constraint dpi_mailbatch_d_f foreign key (mailing_id) references dpi_mailing (id));


create table dpi_mail_server (
	uniq_server_id	varchar(254)	not null,
	last_updated	datetime	null
,constraint dpi_mail_server_p primary key (uniq_server_id));


create table dpi_user_mailing (
	mailing_id	varchar(40)	not null,
	user_id	varchar(40)	not null,
	idx	integer	not null
,constraint dpi_user_mailing_p primary key (mailing_id,user_id)
,constraint dpi_usrmmalng_d_f foreign key (mailing_id) references dpi_mailing (id)
,constraint dpi_usrmlngusr_d_f foreign key (user_id) references dpi_user (id));

create index dpi_u_mail_uid on dpi_user_mailing (user_id);

create table dpi_email_address (
	mailing_id	varchar(40)	not null,
	email_address	varchar(255)	not null,
	idx	integer	not null
,constraint dpi_email_addres_p primary key (mailing_id,idx)
,constraint dpi_emldmalng_d_f foreign key (mailing_id) references dpi_mailing (id));

-- Organizations/roles

create table dpi_role (
	role_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null
,constraint dpi_role_p primary key (role_id));


create table dpi_template_role (
	role_id	varchar(40)	not null,
	template_role_id	varchar(40)	not null
,constraint dpi_tmplate_role_p primary key (role_id,template_role_id)
,constraint dpi_tpltrlrl_rl_f foreign key (template_role_id) references dpi_role (role_id)
,constraint dpi_tpltrltpl_d_f foreign key (role_id) references dpi_role (role_id));

create index dpi_tmplt_role_id on dpi_template_role (template_role_id);

create table dpi_access_right (
	access_right_id	varchar(40)	not null,
	right_type	integer	not null,
	right_scope	integer	not null,
	version	integer	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null
,constraint dpi_access_right_p primary key (access_right_id));


create table dpi_role_right (
	role_id	varchar(40)	not null,
	access_right_id	varchar(40)	not null
,constraint dpi_role_right_p primary key (role_id,access_right_id)
,constraint dpi_rlrightrt_rl_f foreign key (access_right_id) references dpi_access_right (access_right_id)
,constraint dpi_rlrightrl_d_f foreign key (role_id) references dpi_role (role_id));

create index dpi_access_rt_id on dpi_role_right (access_right_id);
-- Extending the user profile to include references to the roles that are assigned to this user

create table dpi_user_roles (
	user_id	varchar(40)	not null,
	atg_role	varchar(40)	not null
,constraint dpi_user_roles_p primary key (user_id,atg_role)
,constraint dpi_usrrlsatg_rl_f foreign key (atg_role) references dpi_role (role_id)
,constraint dpi_usrrlsusr_d_f foreign key (user_id) references dpi_user (id));

create index dpi_usr_roles_id on dpi_user_roles (atg_role);

create table dpi_org_role (
	org_id	varchar(40)	not null,
	atg_role	varchar(40)	not null
,constraint dpi_org_role_p primary key (org_id,atg_role)
,constraint dpi_orgrlorg_d_f foreign key (org_id) references dpi_organization (org_id)
,constraint dpi_orgrlatg_rl_f foreign key (atg_role) references dpi_role (role_id));

create index dpi_org_rolerole on dpi_org_role (atg_role);

create table dpi_role_rel_org (
	organization	varchar(40)	not null,
	sequence_num	integer	not null,
	role_id	varchar(40)	not null
,constraint dpi_role_rel_org_p primary key (organization,sequence_num)
,constraint dpi_rolrorgnztn_f foreign key (organization) references dpi_organization (org_id)
,constraint dpi_rolrlrgrol_d_f foreign key (role_id) references dpi_role (role_id));

create index dpi_role_rel_org on dpi_role_rel_org (role_id);

create table dpi_relativerole (
	role_id	varchar(40)	not null,
	dps_function	nvarchar(40)	not null,
	relative_to	varchar(40)	not null
,constraint dpi_relativerole_p primary key (role_id)
,constraint dpi_reltreltv_t_f foreign key (relative_to) references dpi_organization (org_id)
,constraint dpi_reltvrlrol_d_f foreign key (role_id) references dpi_role (role_id));

create index dpi_relativerole on dpi_relativerole (relative_to);

create table dpi_user_org (
	organization	varchar(40)	not null,
	user_id	varchar(40)	not null
,constraint dpi_user_org_p primary key (organization,user_id)
,constraint dpi_usrrgorgnztn_f foreign key (organization) references dpi_organization (org_id)
,constraint dpi_usrrgusr_d_f foreign key (user_id) references dpi_user (id));

create index dpi_usr_orgusr_id on dpi_user_org (user_id);

create table dpi_user_sec_orgs (
	user_id	varchar(40)	not null,
	secondary_org_id	varchar(40)	not null
,constraint dpi_usr_sec_orgs_p primary key (user_id,secondary_org_id)
,constraint dpi_usrsecorg_rl_f foreign key (secondary_org_id) references dpi_organization (org_id)
,constraint dpi_usrsorgusr_d_f foreign key (user_id) references dpi_user (id));

create index dpi_usr_sec_org_id on dpi_user_sec_orgs (secondary_org_id);

create table dpi_user_org_anc (
	user_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_org	varchar(40)	not null
,constraint dpi_user_org_anc_p primary key (user_id,sequence_num)
,constraint dpi_usrranc_rg_f foreign key (anc_org) references dpi_organization (org_id)
,constraint dpi_usrrgncusr_d_f foreign key (user_id) references dpi_user (id));

create index dpi_usr_org_ancanc on dpi_user_org_anc (anc_org);

create table dpi_org_chldorg (
	org_id	varchar(40)	not null,
	child_org_id	varchar(40)	not null
,constraint dpi_org_chldorg_p primary key (org_id,child_org_id)
,constraint dpi_orgcchild_rg_f foreign key (child_org_id) references dpi_organization (org_id)
,constraint dpi_orgcorg_d_f foreign key (org_id) references dpi_organization (org_id));

create index dpi_org_chldorg_id on dpi_org_chldorg (child_org_id);

create table dpi_org_ancestors (
	org_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_org	varchar(40)	not null
,constraint dpi_org_ancestor_p primary key (org_id,sequence_num)
,constraint dpi_orgnanc_rg_f foreign key (anc_org) references dpi_organization (org_id)
,constraint dpi_orgnorg_d_f foreign key (org_id) references dpi_organization (org_id));

create index dpi_org_ancanc_org on dpi_org_ancestors (anc_org);
-- Adding the folder information

create table dpi_folder (
	folder_id	varchar(40)	not null,
	type	integer	not null,
	name	nvarchar(254)	not null,
	parent	varchar(40)	null,
	description	nvarchar(254)	null
,constraint dpi_folder_p primary key (folder_id)
,constraint dpi_foldrparnt_f foreign key (parent) references dpi_folder (folder_id));

create index dpi_folderparent on dpi_folder (parent);

create table dpi_child_folder (
	folder_id	varchar(40)	not null,
	child_folder_id	varchar(40)	not null
,constraint dpi_child_folder_p primary key (folder_id,child_folder_id)
,constraint dpi_chilchild_fl_f foreign key (child_folder_id) references dpi_folder (folder_id)
,constraint dpi_chilfoldr_d_f foreign key (folder_id) references dpi_folder (folder_id));

create index dpi_chld_fldr_fld on dpi_child_folder (child_folder_id);

create table dpi_rolefold_chld (
	rolefold_id	varchar(40)	not null,
	role_id	varchar(40)	not null
,constraint dpi_rolefold_chl_p primary key (rolefold_id,role_id)
,constraint dpi_rolfrolfld_d_f foreign key (rolefold_id) references dpi_folder (folder_id)
,constraint dpi_rolfrol_d_f foreign key (role_id) references dpi_role (role_id));

create index dpi_rolfldchldrole on dpi_rolefold_chld (role_id);
-- Adding the previous password information

create table dpi_user_prevpwd (
	id	varchar(40)	not null,
	seq_num	integer	not null,
	prevpwd	varchar(35)	null
,constraint dpi_prevpwd_p primary key (id,seq_num)
,constraint dpi_prvpwd_d_f foreign key (id) references dpi_user (id));

commit;




-- Collected from DSS/sql/db_components/mysql/business_process_rpt_ddl.sql


--  @version $Id: //product/DSS/version/10.0.2/templates/DSS/sql/business_process_rpt_ddl.xml#2 $$Change: 635969 $

create table drpt_stage_reached (
	id	varchar(40)	not null,
	owner_id	varchar(40)	not null,
	process_start_time	datetime	not null,
	event_time	datetime	not null,
	bp_name	varchar(255)	not null,
	bp_stage	varchar(255)	null,
	is_transient	tinyint	not null,
	bp_stage_sequence	integer	not null
,constraint drpt_bpstage_c check (is_transient in (0,1)));

commit;




-- Collected from DSS/sql/db_components/mysql/das_mappers.sql


--  @version $Id: //product/DSS/version/10.0.2/templates/DSS/sql/das_mappers.xml#2 $$Change: 635969 $

create table dss_das_event (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null);


create table dss_das_form (
	id	varchar(32)	not null,
	clocktime	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	formname	varchar(254)	null);

commit;




-- Collected from DSS/sql/db_components/mysql/dps_mappers.sql


--  @version $Id: //product/DSS/version/10.0.2/templates/DSS/sql/dps_mappers.xml#2 $$Change: 635969 $

create table dss_dps_event (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	profileid	varchar(25)	null,
	scenarioPathInfo	varchar(254)	null);


create table dss_dps_page_visit (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	path	varchar(255)	null,
	profileid	varchar(25)	null);


create table dss_dps_view_item (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	repositoryname	nvarchar(255)	null,
	folder	varchar(255)	null,
	itemtype	varchar(255)	null,
	repositoryid	varchar(255)	null,
	itemdescriptor	varchar(255)	null,
	page	varchar(255)	null,
	profileid	varchar(25)	null);


create table dss_dps_click (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	destinationpath	varchar(255)	null,
	sourcenames	varchar(255)	null,
	sourcepath	varchar(255)	null,
	profileid	varchar(25)	null);


create table dss_dps_referrer (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	referrerpath	varchar(255)	null,
	referrersite	varchar(255)	null,
	referrerpage	varchar(255)	null,
	profileid	varchar(25)	null);


create table dss_dps_inbound (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	messagesubject	varchar(255)	null,
	originalsubject	varchar(255)	null,
	messagefrom	varchar(64)	null,
	messageto	varchar(255)	null,
	messagecc	varchar(255)	null,
	messagereplyto	varchar(64)	null,
	receiveddate	bigint	null,
	bounced	varchar(6)	null,
	bounceemailaddr	varchar(255)	null,
	bouncereplycode	varchar(10)	null,
	bounceerrormess	varchar(255)	null,
	bouncestatuscode	varchar(10)	null);


create table dss_dps_admin_reg (
	id	varchar(32)	not null,
	clocktime	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	adminprofileid	varchar(25)	null,
	profileid	varchar(25)	null);


create table dss_dps_property (
	id	varchar(32)	not null,
	clocktime	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	propertypath	varchar(254)	null,
	oldvalue	varchar(254)	null,
	newvalue	varchar(254)	null,
	changesign	varchar(16)	null,
	changeamount	numeric(19,7)	null,
	changepercentage	numeric(19,7)	null,
	elementsadded	varchar(254)	null,
	elementsremoved	varchar(254)	null,
	profileid	varchar(25)	null);


create table dss_dps_admin_prop (
	id	varchar(32)	not null,
	clocktime	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	propertypath	varchar(254)	null,
	oldvalue	varchar(254)	null,
	newvalue	varchar(254)	null,
	changesign	varchar(16)	null,
	changeamount	numeric(19,7)	null,
	changepercentage	numeric(19,7)	null,
	elementsadded	varchar(254)	null,
	elementsremoved	varchar(254)	null,
	adminprofileid	varchar(25)	null,
	profileid	varchar(25)	null);


create table dss_dps_update (
	id	varchar(32)	not null,
	clocktime	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	changedproperties	longtext	null,
	oldvalues	longtext	null,
	newvalues	longtext	null,
	profileid	varchar(25)	null);


create table dss_dps_admin_up (
	id	varchar(32)	not null,
	clocktime	datetime	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	changedproperties	longtext	null,
	oldvalues	longtext	null,
	newvalues	longtext	null,
	adminprofileid	varchar(25)	null,
	profileid	varchar(25)	null);


create table dps_scenario_value (
	id	varchar(40)	not null,
	tag	varchar(42)	not null,
	scenario_value	varchar(100)	null
,constraint dps_scenario_val_p primary key (id,tag)
,constraint dps_scenrvlid_f foreign key (id) references dps_user (id));

create index dps_scenval_id on dps_scenario_value (id);
commit;




-- Collected from DSS/sql/db_components/mysql/dss_mappers.sql


--  @version $Id: //product/DSS/version/10.0.2/templates/DSS/sql/dss_mappers.xml#2 $$Change: 635969 $

create table dss_audit_trail (
	id	varchar(32)	not null,
	timestamp	datetime	null,
	label	nvarchar(255)	null,
	profileid	varchar(25)	null,
	segmentName	nvarchar(254)	null,
	processName	nvarchar(254)	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null);

commit;




-- Collected from DSS/sql/db_components/mysql/markers_ddl.sql


--  @version $ $

create table dps_markers (
	marker_id	varchar(40)	not null,
	marker_key	varchar(100)	not null,
	marker_value	varchar(100)	null,
	marker_data	varchar(100)	null,
	creation_date	datetime	null,
	version	integer	not null,
	marker_type	integer	null
,constraint dps_markers_p primary key (marker_id));


create table dps_usr_markers (
	profile_id	varchar(40)	not null,
	marker_id	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dps_usr_markers_p primary key (profile_id,sequence_num)
,constraint dpsusrmarkers_u_f foreign key (profile_id) references dps_user (id)
,constraint dpsusrmarkers_m_f foreign key (marker_id) references dps_markers (marker_id));

create index dpsusrmarkers1_ix on dps_usr_markers (marker_id);
commit;




-- Collected from DSS/sql/db_components/mysql/profile_bp_markers_ddl.sql


--  @version $ $

create table dss_user_bpmarkers (
	marker_id	varchar(40)	not null,
	profile_id	varchar(40)	not null,
	marker_key	varchar(100)	not null,
	marker_value	varchar(100)	null,
	marker_data	varchar(100)	null,
	creation_date	datetime	null,
	version	integer	not null,
	marker_type	integer	null
,constraint dssprofilebp_p primary key (marker_id,profile_id));

commit;




-- Collected from DSS/sql/db_components/mysql/scenario_ddl.sql


--  @version $Id: //product/DSS/version/10.0.2/templates/DSS/sql/scenario_ddl.xml#2 $$Change: 635969 $

create table dss_coll_scenario (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	segment_name	nvarchar(255)	null,
	creator_id	varchar(25)	null,
	state	varchar(16)	null
,constraint dss_coll_scenari_p primary key (id));

-- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.

create table dss_ind_scenario (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	segment_name	nvarchar(255)	null,
	creator_id	varchar(25)	null,
	state	varchar(16)	null,
	user_id	varchar(25)	not null
,constraint dss_ind_scenario_p primary key (id));

create index dss_indscenario1_x on dss_ind_scenario (modification_time);

create table dss_scenario_strs (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_str	varchar(255)	null
,constraint dss_scenario_str_p primary key (id,tag)
,constraint dss_scenrstrsid_f foreign key (id) references dss_ind_scenario (id));

create index dss_scn_st_idx on dss_scenario_strs (id);

create table dss_scenario_bools (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_bool	tinyint	null
,constraint dss_scenario_boo_p primary key (id,tag)
,constraint dss_scenrblsid_f foreign key (id) references dss_ind_scenario (id));

create index dss_scn_bo_idx on dss_scenario_bools (id);

create table dss_scenario_longs (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_long	bigint	null
,constraint dss_scenario_lon_p primary key (id,tag)
,constraint dss_scenrlngsid_f foreign key (id) references dss_ind_scenario (id));

create index dss_scn_lg_idx on dss_scenario_longs (id);

create table dss_scenario_dbls (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_dbl	numeric(15,4)	null
,constraint dss_scenario_dbl_p primary key (id,tag)
,constraint dss_scenrdblsid_f foreign key (id) references dss_ind_scenario (id));

create index dss_scn_db_idx on dss_scenario_dbls (id);

create table dss_scenario_dates (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_date	datetime	null
,constraint dss_scenario_dat_p primary key (id,tag)
,constraint dss_scenrdtsid_f foreign key (id) references dss_ind_scenario (id));

create index dss_scn_dt_idx on dss_scenario_dates (id);

create table dps_user_scenario (
	id	varchar(40)	not null,
	ind_scenario_id	varchar(25)	not null
,constraint dps_user_scenari_p primary key (ind_scenario_id)
,constraint dps_usrscnrid_f foreign key (id) references dps_user (id)
,constraint dps_usrsind_scnr_f foreign key (ind_scenario_id) references dss_ind_scenario (id));

create index dps_uscn_u_idx on dps_user_scenario (id);

create table dss_scenario_info (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	scenario_status	integer	null,
	modification_time	bigint	null,
	creation_time	bigint	null,
	author	varchar(254)	null,
	last_modified_by	varchar(254)	null,
	sdl	longblob	null,
	psm_version	integer	null
,constraint dss_scenario_inf_p primary key (id));


create table dss_scen_mig_info (
	id	varchar(25)	not null,
	scenario_info_id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	psm_version	integer	null,
	sdl	longblob	null,
	migration_status	integer	null
,constraint dss_scenmiginfo_pk primary key (id)
,constraint dss_scenmiginfo_fk foreign key (scenario_info_id) references dss_scenario_info (id));

create index dss_scenmiginfo_id on dss_scen_mig_info (scenario_info_id);

create table dss_mig_info_seg (
	id	varchar(25)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint dss_mig_infoseg_pk primary key (id,idx)
,constraint dss_mig_infoseg_fk foreign key (id) references dss_scen_mig_info (id));


create table dss_template_info (
	id	varchar(25)	not null,
	template_name	nvarchar(255)	null,
	modification_time	bigint	null,
	creation_time	bigint	null,
	author	varchar(254)	null,
	last_modified_by	varchar(254)	null,
	sdl	longblob	null
,constraint dss_template_inf_p primary key (id));


create table dss_coll_trans (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	server_id	varchar(40)	null,
	message_bean	longblob	null,
	event_type	varchar(255)	null,
	segment_name	nvarchar(255)	null,
	state	varchar(16)	null,
	coll_scenario_id	varchar(25)	null,
	step	integer	null,
	current_count	integer	null,
	last_query_id	varchar(25)	null
,constraint dss_coll_trans_p primary key (id)
,constraint dss_collcoll_scn_f foreign key (coll_scenario_id) references dss_coll_scenario (id));

create index dss_ctrcid_idx on dss_coll_trans (coll_scenario_id);

create table dss_ind_trans (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	server_id	varchar(40)	null,
	message_bean	longblob	null,
	event_type	varchar(255)	null,
	segment_name	nvarchar(255)	null,
	state	varchar(16)	null,
	last_query_id	varchar(25)	null
,constraint dss_ind_trans_p primary key (id));


create table dss_deletion (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null
,constraint dss_deletion_p primary key (id));


create table dss_server_id (
	server_id	varchar(40)	not null,
	server_type	integer	not null
,constraint dss_server_id_p primary key (server_id));


create table dss_del_seg_name (
	id	varchar(25)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint dss_del_seg_name_p primary key (id,idx));

-- migration_info_id references the migration info table, but we don't have aREFERENCES dss_scen_mig_info(id) here, because we want to be ableto delete the migration info without deleting this row

create table dss_migration (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	old_mod_time	bigint	null,
	new_mod_time	bigint	null,
	migration_info_id	varchar(25)	null
,constraint dss_migration_pk primary key (id));


create table dss_mig_seg_name (
	id	varchar(25)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint dss_mig_segname_pk primary key (id,idx)
,constraint dss_mig_segname_fk foreign key (id) references dss_migration (id));


create table dss_xref (
	id	varchar(25)	not null,
	scenario_name	varchar(255)	null,
	reference_type	varchar(30)	null,
	reference_target	varchar(255)	null
,constraint dss_xref_p primary key (id));

-- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.

create table dss_profile_slot (
	id	varchar(25)	not null,
	slot_name	varchar(255)	null,
	item_offset	bigint	null,
	user_id	varchar(25)	not null
,constraint dss_profile_slot_p primary key (id));


create table dps_user_slot (
	id	varchar(40)	not null,
	profile_slot_id	varchar(25)	not null
,constraint dps_user_slot_p primary key (id,profile_slot_id)
,constraint dps_usrsltid_f foreign key (id) references dps_user (id)
,constraint dps_usrsprofl_sl_f foreign key (profile_slot_id) references dss_profile_slot (id));

create index dps_usr_sltprfl_id on dps_user_slot (profile_slot_id);

create table dss_slot_items (
	slot_id	varchar(25)	not null,
	item_id	varchar(255)	null,
	idx	integer	not null
,constraint dss_slot_items_p primary key (slot_id,idx)
,constraint dss_slotslot_d_f foreign key (slot_id) references dss_profile_slot (id));


create table dss_slot_priority (
	slot_id	varchar(25)	not null,
	idx	integer	not null,
	priority	bigint	not null
,constraint dss_slot_priorit_p primary key (slot_id,idx)
,constraint dss_slotpslot_d_f foreign key (slot_id) references dss_profile_slot (id));

commit;




-- Collected from Portal/paf/sql/install/mysql/alert_ddl.sql


--  @version $Id: //app/portal/version/10.0.2/paf/sql/alert_ddl.xml#2 $$Change: 635969 $

create table alt_user (
	id	nvarchar(40)	not null,
	version	integer	default 0 not null,
	target_id	nvarchar(40)	not null,
	target_type	varchar(40)	not null,
	source_id	nvarchar(40)	null,
	msg_type	nvarchar(255)	null,
	message_bean	longblob	null,
	creation_date	datetime	null,
	end_date	datetime	null,
	start_date	datetime	null,
	delete_flag	tinyint	not null
,constraint alt_userpk primary key (id));

create index alt_user_idx on alt_user (target_id,target_type,source_id);

create table alt_group (
	id	nvarchar(40)	not null,
	version	integer	not null,
	target_id	nvarchar(40)	not null,
	target_type	varchar(40)	not null,
	source_id	nvarchar(40)	null,
	msg_type	nvarchar(255)	null,
	message_bean	longblob	null,
	creation_date	datetime	null,
	end_date	datetime	null,
	start_date	datetime	null,
	delete_flag	tinyint	not null
,constraint alt_grouppk primary key (id));

create index alt_group_idx on alt_group (target_id,target_type,source_id);

create table alt_user_alert_rel (
	id	nvarchar(40)	not null,
	alert_id	nvarchar(40)	not null
,constraint alt_useralertrel_p primary key (id,alert_id));


create table alt_user_pref (
	id	nvarchar(40)	not null,
	source_id	nvarchar(40)	not null,
	source_type	nvarchar(40)	not null,
	version	integer	not null,
	event_type	nvarchar(255)	null,
	name	nvarchar(40)	not null,
	value	nvarchar(40)	not null
,constraint alt_user_prefpk primary key (id));


create table alt_userpref_rel (
	id	nvarchar(40)	not null,
	alert_user_pref_id	nvarchar(40)	not null
,constraint alt_user_relpk primary key (id,alert_user_pref_id));

create index alt_userpref_idx on alt_userpref_rel (alert_user_pref_id);

create table alt_gear (
	id	nvarchar(40)	not null,
	source_id	nvarchar(40)	not null,
	source_type	nvarchar(40)	not null,
	version	integer	not null,
	message_type	nvarchar(255)	not null,
	name	nvarchar(40)	not null,
	value	nvarchar(40)	not null,
	resource_bundle	nvarchar(255)	not null
,constraint alt_gearpk primary key (id));


create table alt_gear_rel (
	id	nvarchar(40)	not null,
	name	nvarchar(40)	not null,
	gear_id	nvarchar(40)	not null
,constraint alt_gear_relpk primary key (id,gear_id));

create index alt_gear_idx on alt_gear_rel (gear_id);

create table alt_gear_def (
	id	nvarchar(40)	not null,
	version	integer	not null,
	message_type	nvarchar(255)	not null,
	name	nvarchar(40)	not null,
	value	nvarchar(40)	not null,
	resource_bundle	nvarchar(255)	not null
,constraint alt_gear_defpk primary key (id));


create table alt_gear_def_rel (
	id	nvarchar(40)	not null,
	name	nvarchar(40)	not null,
	gear_def_id	nvarchar(40)	not null
,constraint alt_def_relpk primary key (id,gear_def_id));

create index alt_gear_def_idx on alt_gear_def_rel (gear_def_id);

create table alt_channel (
	channel_id	nvarchar(40)	not null,
	version	integer	not null,
	component_name	nvarchar(255)	not null,
	display_name	nvarchar(255)	not null
,constraint alt_channel_pk primary key (channel_id));


create table alt_chan_usr_rel (
	alt_user_pref_id	nvarchar(40)	not null,
	channel_id	nvarchar(40)	not null
,constraint alt_chnusr_relpk primary key (channel_id,alt_user_pref_id));

commit;




-- Collected from Portal/paf/sql/install/mysql/membership_ddl.sql


--  @version $Id: //app/portal/version/10.0.2/paf/sql/membership_ddl.xml#2 $$Change: 635969 $

create table mem_membership_req (
	id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	user_id	nvarchar(40)	not null,
	community_id	nvarchar(40)	not null,
	request_type	integer	not null,
	creation_date	datetime	not null
,constraint mem_membershiprq_p primary key (id)
,constraint mem_membershiprq_c check (request_type in (0,1)));

commit;




-- Collected from Portal/paf/sql/install/mysql/paf_mappers_ddl.sql


--  @version $Id: //app/portal/version/10.0.2/paf/sql/paf_mappers_ddl.xml#2 $$Change: 635969 $

create table paf_page_visit (
	id	nvarchar(40)	not null,
	tstamp	datetime	null,
	gear_id	nvarchar(40)	null,
	community_id	nvarchar(40)	null,
	user_id	nvarchar(40)	null,
	page_path	nvarchar(255)	null,
	msg_type	nvarchar(255)	null);

create index paf_pgvst_comid on paf_page_visit (community_id);
create index paf_pgvst_gearid on paf_page_visit (gear_id);
create index paf_pgvst_usrid on paf_page_visit (user_id);

create table comm_gear_add (
	id	nvarchar(40)	not null,
	tstamp	datetime	null,
	gear_id	nvarchar(40)	null,
	community_id	nvarchar(40)	null,
	user_id	nvarchar(40)	null,
	msg_type	nvarchar(255)	null);

create index comm_gearaddcom_id on comm_gear_add (community_id);
create index comm_gearaddgearid on comm_gear_add (gear_id);
create index comm_gearaddusr_id on comm_gear_add (user_id);

create table comm_gear_rem (
	id	nvarchar(40)	not null,
	tstamp	datetime	null,
	gear_id	nvarchar(40)	null,
	community_id	nvarchar(40)	null,
	user_id	nvarchar(40)	null,
	msg_type	nvarchar(255)	null);

create index comm_gearremcom_id on comm_gear_rem (community_id);
create index comm_gearremgearid on comm_gear_rem (gear_id);
create index comm_gearremusr_id on comm_gear_rem (user_id);

create table page_gear_add (
	id	nvarchar(40)	not null,
	tstamp	datetime	null,
	gear_id	nvarchar(40)	null,
	community_id	nvarchar(40)	null,
	page_id	nvarchar(40)	null,
	user_id	nvarchar(40)	null,
	msg_type	nvarchar(255)	null);

create index page_gearaddcom_id on page_gear_add (community_id);
create index page_gearaddgearid on page_gear_add (gear_id);
create index page_gearaddpageid on page_gear_add (page_id);
create index page_gearaddusr_id on page_gear_add (user_id);

create table page_gear_rem (
	id	nvarchar(40)	not null,
	tstamp	datetime	null,
	gear_id	nvarchar(40)	null,
	community_id	nvarchar(40)	null,
	page_id	nvarchar(40)	null,
	user_id	nvarchar(40)	null,
	msg_type	nvarchar(255)	null);

create index page_gearremcom_id on page_gear_rem (community_id);
create index page_gearremgearid on page_gear_rem (gear_id);
create index page_gearrempageid on page_gear_rem (page_id);
create index page_gearremusr_id on page_gear_rem (user_id);
commit;




-- Collected from Portal/paf/sql/install/mysql/portal_ddl.sql


--  @version $Id: //app/portal/version/10.0.2/paf/sql/portal_ddl.xml#2 $$Change: 635969 $

create table paf_folder (
	folder_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	type	tinyint	not null,
	parent	nvarchar(40)	null,
	url_name	nvarchar(254)	not null
,constraint paf_folderpk primary key (folder_id)
,constraint paf_folder1_f foreign key (parent) references paf_folder (folder_id)
,constraint type_enum check (type in (0,1,2)));

create index paf_folderpnidx on paf_folder (parent,name);

create table paf_folder_acl (
	id	nvarchar(254)	not null,
	indx	integer	not null,
	acl	nvarchar(254)	null);


create table paf_child_folder (
	folder_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	child_folder_id	nvarchar(40)	not null
,constraint paf_childfolderpk primary key (folder_id,child_folder_id)
,constraint paf_childfolder1_f foreign key (folder_id) references paf_folder (folder_id)
,constraint paf_childfolder2_f foreign key (child_folder_id) references paf_folder (folder_id));

create index paf_cfchldflddlix on paf_child_folder (child_folder_id);

create table paf_fldr_ln_names (
	folder_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_fldr_lnnamespk primary key (folder_id,locale)
,constraint paf_fldrlnnames1_f foreign key (folder_id) references paf_folder (folder_id));


create table paf_fldr_ln_descs (
	folder_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_fldr_lndescspk primary key (folder_id,locale)
,constraint paf_fldrlndescs1_f foreign key (folder_id) references paf_folder (folder_id));


create table paf_gear_param (
	gear_param_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	description	nvarchar(254)	null,
	default_value	nvarchar(254)	null,
	required	tinyint	not null,
	isreadonly	tinyint	default 0 not null
,constraint paf_gearparampk primary key (gear_param_id)
,constraint required_bool check (required in (0,1))
,constraint isreadonly_bool check (isreadonly in (0,1)));


create table paf_gear_prmvals (
	gear_param_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	param_value	nvarchar(254)	null
,constraint paf_gprmvalspk primary key (gear_param_id,sequence_num)
,constraint paf_gprmvals1_f foreign key (gear_param_id) references paf_gear_param (gear_param_id));


create table paf_device_outputs (
	device_outputs_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null
,constraint paf_deviceoutspk primary key (device_outputs_id));


create table paf_device_output (
	device_output_id	nvarchar(40)	not null,
	type	nvarchar(10)	not null,
	url	nvarchar(254)	null
,constraint paf_deviceoutpk primary key (device_output_id,type)
,constraint paf_device_out1_f foreign key (device_output_id) references paf_device_outputs (device_outputs_id));


create table paf_display_modes (
	display_modes_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	shared_mode	nvarchar(40)	null,
	full_mode	nvarchar(40)	null,
	popup_mode	nvarchar(40)	null
,constraint paf_displaymodespk primary key (display_modes_id)
,constraint paf_displaymode1_f foreign key (shared_mode) references paf_device_outputs (device_outputs_id)
,constraint paf_displaymode2_f foreign key (full_mode) references paf_device_outputs (device_outputs_id)
,constraint paf_displaymode3_f foreign key (popup_mode) references paf_device_outputs (device_outputs_id));

create index paf_dmsmdlix on paf_display_modes (shared_mode);
create index paf_dmfmdlix on paf_display_modes (full_mode);
create index paf_dmpmdlix on paf_display_modes (popup_mode);

create table paf_title_template (
	title_template_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	servlet_context	nvarchar(254)	not null,
	template_dm	nvarchar(40)	null,
	pre_template_dm	nvarchar(40)	null,
	post_template_dm	nvarchar(40)	null,
	small_image_url	nvarchar(254)	null,
	small_image_alt	nvarchar(254)	null,
	large_image_url	nvarchar(254)	null,
	large_image_alt	nvarchar(254)	null
,constraint paf_titletmplpk primary key (title_template_id)
,constraint paf_title_templ1_u unique (name)
,constraint paf_title_templ1_f foreign key (template_dm) references paf_display_modes (display_modes_id)
,constraint paf_title_templ2_f foreign key (pre_template_dm) references paf_display_modes (display_modes_id)
,constraint paf_title_templ3_f foreign key (post_template_dm) references paf_display_modes (display_modes_id));

create index paf_ttmptmpldlix on paf_title_template (template_dm);
create index paf_ttmppredlix on paf_title_template (pre_template_dm);
create index paf_ttmppstdlix on paf_title_template (post_template_dm);

create table paf_gear_modes (
	gear_modes_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	content_mode	nvarchar(40)	null,
	help_mode	nvarchar(40)	null,
	about_mode	nvarchar(40)	null,
	preview_mode	nvarchar(40)	null,
	user_cfg_mode	nvarchar(40)	null,
	instance_cfg_mode	nvarchar(40)	null,
	initial_cfg_mode	nvarchar(40)	null,
	install_cfg_mode	nvarchar(40)	null
,constraint paf_gearmodespk primary key (gear_modes_id)
,constraint paf_gear_modes1_f foreign key (content_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes2_f foreign key (help_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes3_f foreign key (about_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes4_f foreign key (preview_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes5_f foreign key (user_cfg_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes6_f foreign key (instance_cfg_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes7_f foreign key (initial_cfg_mode) references paf_display_modes (display_modes_id)
,constraint paf_gear_modes8_f foreign key (install_cfg_mode) references paf_display_modes (display_modes_id));

create index paf_gdcmdlix on paf_gear_modes (content_mode);
create index paf_gdhmdlix on paf_gear_modes (help_mode);
create index paf_gdamdlix on paf_gear_modes (about_mode);
create index paf_gmpredlix on paf_gear_modes (preview_mode);
create index paf_gmusercmdlix on paf_gear_modes (user_cfg_mode);
create index paf_gmancecmdlix on paf_gear_modes (instance_cfg_mode);
create index paf_gminitcmdlix on paf_gear_modes (initial_cfg_mode);
create index paf_gminstcmdlix on paf_gear_modes (install_cfg_mode);

create table paf_gear_def (
	gear_def_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	parent_folder	nvarchar(40)	not null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	hide	tinyint	not null,
	timeout	bigint	not null,
	jsr168	tinyint	default 0 not null,
	portlet_guid	varchar(254)	null,
	render_async	tinyint	not null,
	should_cache	tinyint	not null,
	cache_timeout	bigint	null,
	intercept_errors	tinyint	not null,
	cover_err_cache	tinyint	not null,
	servlet_context	nvarchar(254)	not null,
	sharable	tinyint	not null,
	width	tinyint	not null,
	height	tinyint	not null,
	small_image_url	nvarchar(254)	null,
	small_image_alt	nvarchar(254)	null,
	large_image_url	nvarchar(254)	null,
	large_image_alt	nvarchar(254)	null,
	gear_modes	nvarchar(40)	null
,constraint paf_geardefpk primary key (gear_def_id)
,constraint paf_gear_def1_f foreign key (parent_folder) references paf_folder (folder_id)
,constraint paf_gear_def2_f foreign key (gear_modes) references paf_gear_modes (gear_modes_id)
,constraint gear_asyncbool check (render_async in (0,1))
,constraint gear_cachebool check (should_cache in (0,1))
,constraint gear_errcachebool check (cover_err_cache in (0,1))
,constraint gear_errorsbool check (intercept_errors in (0,1))
,constraint gear_heightenum check (height in (0,1,2))
,constraint gear_hidebool check (hide in (0,1))
,constraint gear_widthenum check (width in (0,1,2)));

create index paf_gdpfdlix on paf_gear_def (parent_folder);
create index paf_gdgmdlix on paf_gear_def (gear_modes);

create table paf_gd_cprops (
	gear_def_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	name	nvarchar(254)	not null
,constraint paf_gdcpropspk primary key (gear_def_id,sequence_num)
,constraint paf_gd_cprops1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id));


create table paf_gd_iparams (
	gear_def_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	gear_param_id	nvarchar(40)	not null
,constraint paf_gdiparamspk primary key (gear_def_id,gear_param_id)
,constraint paf_gd_iparams1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id)
,constraint paf_gd_iparams2_f foreign key (gear_param_id) references paf_gear_param (gear_param_id));

create index paf_gdipiddlix on paf_gd_iparams (gear_param_id);

create table paf_gd_uparams (
	gear_def_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	gear_param_id	nvarchar(40)	not null
,constraint paf_gduparamspk primary key (gear_def_id,gear_param_id)
,constraint paf_gd_uparams1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id)
,constraint paf_gd_uparams2_f foreign key (gear_param_id) references paf_gear_param (gear_param_id));

create index paf_gdupiddlix on paf_gd_uparams (gear_param_id);

create table paf_gd_l10n_names (
	gear_def_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_gd_l10nnamespk primary key (gear_def_id,locale)
,constraint paf_gd_l10nname1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id));


create table paf_gd_l10n_descs (
	gear_def_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_gd_l10ndescspk primary key (gear_def_id,locale)
,constraint paf_gd_l10ndesc1_f foreign key (gear_def_id) references paf_gear_def (gear_def_id));


create table paf_gear (
	gear_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	gear_definition	nvarchar(40)	not null,
	access_level	tinyint	not null,
	show_title_bars	tinyint	not null,
	parent_comm_id	nvarchar(40)	not null,
	is_shared	tinyint	not null
,constraint paf_gearpk primary key (gear_id)
,constraint paf_gear1_f foreign key (gear_definition) references paf_gear_def (gear_def_id)
,constraint gear_titlebarsbool check (show_title_bars in (0,1)));

create index paf_geargddlix on paf_gear (gear_definition);

create table paf_gear_acl (
	id	nvarchar(254)	not null,
	indx	integer	not null,
	acl	nvarchar(254)	null);


create table paf_gear_iparams (
	gear_id	nvarchar(40)	not null,
	tag	nvarchar(42)	not null,
	iparam_value	nvarchar(254)	null
,constraint paf_geariparamspk primary key (gear_id,tag)
,constraint paf_geariparams1_f foreign key (gear_id) references paf_gear (gear_id));


create table paf_gear_ln_names (
	gear_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_gear_lnnamespk primary key (gear_id,locale)
,constraint paf_gearlnnames1_f foreign key (gear_id) references paf_gear (gear_id));


create table paf_gear_ln_descs (
	gear_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_gear_lndescspk primary key (gear_id,locale)
,constraint paf_gearlndescs1_f foreign key (gear_id) references paf_gear (gear_id));


create table paf_region_def (
	region_def_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	name	nvarchar(254)	not null,
	width	tinyint	not null,
	height	tinyint	not null
,constraint paf_regiondefpk primary key (region_def_id)
,constraint paf_regiondefuk unique (name)
,constraint paf_regionhtbool check (height in (0,1))
,constraint paf_regionwithbool check (width in (0,1)));

-- Do not use REFERENCES paf_page(page_id) here because of circular references

create table paf_region (
	region_id	nvarchar(40)	not null,
	internal_version	integer	default 0 not null,
	definition	nvarchar(40)	not null,
	parent_page_id	nvarchar(40)	not null,
	fixed	tinyint	not null
,constraint paf_regionpk primary key (region_id)
,constraint paf_region1_f foreign key (definition) references paf_region_def (region_def_id)
,constraint regionfixedbool check (fixed in (0,1)));

create index paf_regdefdlix on paf_region (definition);

create table paf_region_gears (
	region_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	gear_id	nvarchar(40)	not null
,constraint paf_regiongearspk primary key (region_id,sequence_num)
,constraint paf_regiongears2_f foreign key (gear_id) references paf_gear (gear_id)
,constraint paf_regiongears1_f foreign key (region_id) references paf_region (region_id));

create index paf_reggriddlix on paf_region_gears (gear_id);

create table paf_style (
	style_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	servlet_context	nvarchar(254)	not null,
	css_url	nvarchar(254)	not null
,constraint paf_stylepk primary key (style_id)
,constraint paf_style1_u unique (name));


create table paf_styl_ln_names (
	style_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_styl_lnnamespk primary key (style_id,locale)
,constraint paf_styllnnames1_f foreign key (style_id) references paf_style (style_id));


create table paf_styl_ln_descs (
	style_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_styl_lndescspk primary key (style_id,locale)
,constraint paf_styllndescs1_f foreign key (style_id) references paf_style (style_id));


create table paf_col_palette (
	palette_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	servlet_context	nvarchar(254)	not null,
	small_image_url	nvarchar(254)	null,
	small_image_alt	nvarchar(254)	null,
	large_image_url	nvarchar(254)	null,
	large_image_alt	nvarchar(254)	null,
	pg_bg_image_url	nvarchar(254)	null,
	pg_bg_color	char(6)	null,
	pg_text_color	char(6)	null,
	pg_link_color	char(6)	null,
	pg_alink_color	char(6)	null,
	pg_vlink_color	char(6)	null,
	gt_bg_color	char(6)	null,
	gt_text_color	char(6)	null,
	gear_bg_color	char(6)	null,
	gear_text_color	char(6)	null,
	hl_bg_color	char(6)	null,
	hl_text_color	char(6)	null
,constraint paf_colpalettepk primary key (palette_id)
,constraint paf_col_palette1_u unique (name));


create table paf_cpal_ln_names (
	palette_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_cpal_lnnamespk primary key (palette_id,locale)
,constraint paf_cpallnnames1_f foreign key (palette_id) references paf_col_palette (palette_id));


create table paf_cpal_ln_descs (
	palette_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_cpal_lndescspk primary key (palette_id,locale)
,constraint paf_cpallndescs1_f foreign key (palette_id) references paf_col_palette (palette_id));


create table paf_layout (
	layout_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	not null,
	internal_version	integer	null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	small_image_url	nvarchar(254)	null,
	small_image_alt	nvarchar(254)	null,
	large_image_url	nvarchar(254)	null,
	large_image_alt	nvarchar(254)	null,
	servlet_context	nvarchar(254)	not null,
	display_modes	nvarchar(40)	not null
,constraint paf_layoutpk primary key (layout_id)
,constraint paf_layout1_u unique (name)
,constraint paf_layout1_f foreign key (display_modes) references paf_display_modes (display_modes_id));

create index paf_lytdmdlix on paf_layout (display_modes);

create table paf_layout_regdefs (
	layout_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	region_def_id	nvarchar(40)	not null
,constraint paf_layoutregdfpk primary key (layout_id,sequence_num)
,constraint paf_layoutregdf1_f foreign key (layout_id) references paf_layout (layout_id)
,constraint paf_layoutregdf2_f foreign key (region_def_id) references paf_region_def (region_def_id));

create index paf_lytregddlix on paf_layout_regdefs (region_def_id);

create table paf_page_template (
	page_template_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	small_image_url	nvarchar(254)	null,
	small_image_alt	nvarchar(254)	null,
	large_image_url	nvarchar(254)	null,
	large_image_alt	nvarchar(254)	null,
	servlet_context	nvarchar(254)	not null,
	display_modes	nvarchar(40)	not null
,constraint paf_pagetmplpk primary key (page_template_id)
,constraint paf_pagetmplate1_u unique (name)
,constraint paf_pagetmplate1_f foreign key (display_modes) references paf_display_modes (display_modes_id));

create index paf_pagetmdmdlix on paf_page_template (display_modes);

create table paf_ptpl_ln_names (
	page_template_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_ptpl_lnnamespk primary key (page_template_id,locale)
,constraint paf_ptpllnnames1_f foreign key (page_template_id) references paf_page_template (page_template_id));


create table paf_ptpl_ln_descs (
	page_template_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_ptpl_lndescspk primary key (page_template_id,locale)
,constraint paf_ptpllndescs1_f foreign key (page_template_id) references paf_page_template (page_template_id));


create table paf_template (
	template_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	author	nvarchar(254)	null,
	version	nvarchar(254)	null,
	small_image_url	nvarchar(254)	null,
	small_image_alt	nvarchar(254)	null,
	large_image_url	nvarchar(254)	null,
	large_image_alt	nvarchar(254)	null,
	servlet_context	nvarchar(254)	not null,
	device_outputs	nvarchar(40)	not null
,constraint paf_tmplpk primary key (template_id)
,constraint paf_tmplate1_u unique (name)
,constraint paf_tmplate1_f foreign key (device_outputs) references paf_device_outputs (device_outputs_id));

create index paf_tmpdodlix on paf_template (device_outputs);
-- Cannot have default_page REFERENCES paf_page(page_id) because this is circular

create table paf_community (
	community_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	url_name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	null,
	internal_version	integer	null,
	enabled	tinyint	not null,
	access_level	tinyint	not null,
	parent_folder	nvarchar(40)	not null,
	page_folder	nvarchar(40)	not null,
	default_page	nvarchar(40)	null,
	personalization	tinyint	not null,
	membership_req	tinyint	not null,
	page_template	nvarchar(40)	null,
	title_template	nvarchar(40)	null,
	li_template	nvarchar(40)	null,
	lo_template	nvarchar(40)	null,
	ad_template	nvarchar(40)	null,
	rg_template	nvarchar(40)	null,
	up_template	nvarchar(40)	null,
	ia_template	nvarchar(40)	null,
	page_style	nvarchar(40)	null
,constraint paf_communitypk primary key (community_id)
,constraint paf_community1_f foreign key (parent_folder) references paf_folder (folder_id)
,constraint paf_community2_f foreign key (page_folder) references paf_folder (folder_id)
,constraint paf_community3_f foreign key (page_template) references paf_page_template (page_template_id)
,constraint paf_community5_f foreign key (page_style) references paf_style (style_id)
,constraint paf_community10_f foreign key (up_template) references paf_template (template_id)
,constraint paf_community8_f foreign key (ad_template) references paf_template (template_id)
,constraint paf_community9_f foreign key (rg_template) references paf_template (template_id)
,constraint paf_community7_f foreign key (lo_template) references paf_template (template_id)
,constraint paf_community11_f foreign key (ia_template) references paf_template (template_id)
,constraint paf_community6_f foreign key (li_template) references paf_template (template_id)
,constraint paf_community4_f foreign key (title_template) references paf_title_template (title_template_id)
,constraint commenabledbool check (enabled in (0,1))
,constraint membershipreqenum check (membership_req in (0,1,2))
,constraint pers_enum check (personalization in (0,1,2)));

create index paf_commpfdlix on paf_community (parent_folder);
create index paf_commpgfdlix on paf_community (page_folder);
create index paf_commtmpldlix on paf_community (page_template);
create index paf_commstydlix on paf_community (page_style);
create index paf_comntuptmpl_ix on paf_community (up_template);
create index paf_comntadtmpl_ix on paf_community (ad_template);
create index paf_comntrgtmpl_ix on paf_community (rg_template);
create index paf_comntlotmpl_ix on paf_community (lo_template);
create index paf_comntiatmpl_ix on paf_community (ia_template);
create index paf_comntlitmpl_ix on paf_community (li_template);
create index paf_commttmpldlix on paf_community (title_template);

create table paf_comm_gears (
	community_id	nvarchar(40)	not null,
	gear_id	nvarchar(40)	not null
,constraint paf_commgearspk primary key (community_id,gear_id)
,constraint paf_comm_gears1_f foreign key (community_id) references paf_community (community_id)
,constraint paf_comm_gears2_f foreign key (gear_id) references paf_gear (gear_id));

create index paf_commgriddlix on paf_comm_gears (gear_id);

create table paf_comm_gfldrs (
	community_id	nvarchar(40)	not null,
	gear_def_fldr_id	nvarchar(40)	not null
,constraint paf_commgfldrpk primary key (community_id,gear_def_fldr_id)
,constraint paf_comm_gfldrs1_f foreign key (community_id) references paf_community (community_id)
,constraint paf_comm_gfldrs2_f foreign key (gear_def_fldr_id) references paf_folder (folder_id));

create index paf_comm_gfldrs1_i on paf_comm_gfldrs (gear_def_fldr_id);

create table paf_comm_roles (
	community_id	nvarchar(40)	not null,
	role_name	nvarchar(254)	not null,
	role_id	nvarchar(40)	not null
,constraint paf_comm_roles_pk primary key (community_id,role_name)
,constraint paf_comm_roles_fk foreign key (community_id) references paf_community (community_id));


create table paf_base_comm_role (
	id	nvarchar(40)	not null,
	role_name	nvarchar(254)	not null,
	category	nvarchar(254)	not null
,constraint paf_basecomrole_pk primary key (role_name));


create table paf_gear_roles (
	gear_id	nvarchar(40)	not null,
	role_name	nvarchar(254)	not null,
	role_id	nvarchar(40)	not null
,constraint paf_gear_roles_pk primary key (gear_id,role_name)
,constraint paf_gear_roles_fk foreign key (gear_id) references paf_gear (gear_id));


create table paf_base_gear_role (
	gear_def_id	nvarchar(40)	not null,
	role_name	nvarchar(254)	not null
,constraint paf_basegearrolepk primary key (gear_def_id,role_name));


create table paf_community_acl (
	id	nvarchar(254)	not null,
	indx	integer	not null,
	acl	nvarchar(254)	null);


create table paf_comm_lnames (
	community_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_commlnamespk primary key (community_id,locale)
,constraint paf_comm_lnames1_f foreign key (community_id) references paf_community (community_id));


create table paf_comm_ldescs (
	community_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_commldescspk primary key (community_id,locale)
,constraint paf_comm_ldescs1_f foreign key (community_id) references paf_community (community_id));


create table paf_page (
	page_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	url_name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	not null,
	internal_version	integer	null,
	access_level	tinyint	not null,
	parent_folder	nvarchar(40)	not null,
	parent_comm_id	nvarchar(40)	not null,
	layout_id	nvarchar(40)	not null,
	allow_layout_chgs	tinyint	not null,
	palette_id	nvarchar(40)	null,
	fixed	tinyint	not null,
	wireless_enabled	tinyint	not null
,constraint paf_pagepk primary key (page_id)
,constraint paf_page3_f foreign key (palette_id) references paf_col_palette (palette_id)
,constraint paf_page2_f foreign key (parent_comm_id) references paf_community (community_id)
,constraint paf_page1_f foreign key (parent_folder) references paf_folder (folder_id)
,constraint paf_page4_f foreign key (layout_id) references paf_layout (layout_id)
,constraint allowchgsbool check (allow_layout_chgs in (0,1))
,constraint fixedisbool check (fixed in (0,1))
,constraint wirelessisbool check (wireless_enabled in (0,1)));

create index paf_pagepaldlix on paf_page (palette_id);
create index paf_pagecommdlix on paf_page (parent_comm_id);
create index paf_pagepfdlix on paf_page (parent_folder);
create index paf_pagelytdlix on paf_page (layout_id);

create table paf_page_ln_names (
	page_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_page_lnnamespk primary key (page_id,locale)
,constraint paf_pagelnnames1_f foreign key (page_id) references paf_page (page_id));


create table paf_page_ln_descs (
	page_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_page_lndescspk primary key (page_id,locale)
,constraint paf_pagelndescs1_f foreign key (page_id) references paf_page (page_id));


create table paf_page_acl (
	id	nvarchar(254)	not null,
	indx	integer	not null,
	acl	nvarchar(254)	null);


create table paf_page_regions (
	page_id	nvarchar(40)	not null,
	tag	nvarchar(42)	not null,
	region_id	nvarchar(40)	not null
,constraint paf_pageregionspk primary key (page_id,tag)
,constraint paf_pageregions1_f foreign key (page_id) references paf_page (page_id)
,constraint paf_pageregions2_f foreign key (region_id) references paf_region (region_id));

create index paf_pageriddlix on paf_page_regions (region_id);

create table paf_cf_child_item (
	folder_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	child_item_id	nvarchar(40)	not null
,constraint paf_cfchilditempk primary key (folder_id,child_item_id)
,constraint paf_cfchilditem2_f foreign key (child_item_id) references paf_community (community_id)
,constraint paf_cfchilditem1_f foreign key (folder_id) references paf_folder (folder_id));

create index paf_cfchlddlix on paf_cf_child_item (child_item_id);

create table paf_cf_gfldrs (
	comm_folder_id	nvarchar(40)	not null,
	gear_def_fldr_id	nvarchar(40)	not null
,constraint paf_cfgfldrspk primary key (comm_folder_id,gear_def_fldr_id)
,constraint paf_cf_gfldrs1_f foreign key (comm_folder_id) references paf_folder (folder_id)
,constraint paf_cf_gfldrs2_f foreign key (gear_def_fldr_id) references paf_folder (folder_id));

create index paf_cfgfldrs1_i on paf_cf_gfldrs (gear_def_fldr_id);

create table paf_pf_child_item (
	folder_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	child_item_id	nvarchar(40)	not null
,constraint paf_pfchilditempk primary key (folder_id,child_item_id)
,constraint paf_pfchilditem1_f foreign key (folder_id) references paf_folder (folder_id)
,constraint paf_pfchilditem2_f foreign key (child_item_id) references paf_page (page_id));

create index paf_pfcitemiddlix on paf_pf_child_item (child_item_id);

create table paf_gdf_child_item (
	folder_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	child_item_id	nvarchar(40)	not null
,constraint paf_gdfchilditempk primary key (folder_id,child_item_id)
,constraint paf_gdfchlditem1_f foreign key (folder_id) references paf_folder (folder_id)
,constraint paf_gdfchlditem2_f foreign key (child_item_id) references paf_gear_def (gear_def_id));

create index paf_gdfciiddlix on paf_gdf_child_item (child_item_id);

create table paf_comm_template (
	template_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	internal_version	integer	null,
	enabled	tinyint	not null,
	access_level	integer	not null,
	parent_folder	nvarchar(40)	not null,
	page_folder	nvarchar(40)	not null,
	default_page	nvarchar(40)	not null,
	personalization	tinyint	not null,
	membership_req	tinyint	not null,
	page_template	nvarchar(40)	not null,
	title_template	nvarchar(40)	not null,
	style	nvarchar(40)	not null
,constraint paf_comtemplate_p primary key (template_id)
,constraint paf_comtemplate_c1 check (enabled in (0,1))
,constraint paf_comtemplate_c2 check (personalization in (0,1,2))
,constraint paf_comtemplate_c3 check (membership_req in (0,1,2)));


create table paf_ct_folder (
	folder_id	nvarchar(40)	not null,
	internal_version	integer	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	parent	nvarchar(40)	null,
	url_name	nvarchar(254)	not null
,constraint paf_ct_folder_p primary key (folder_id)
,constraint paf_ct_folder_u unique (name));

create index paf_ct_fldrpnidx on paf_ct_folder (parent,name);

create table paf_ct_child_fldr (
	folder_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	child_folder_id	nvarchar(40)	not null
,constraint paf_ctchild_fldr_p primary key (folder_id,child_folder_id));


create table paf_ct_pagefolder (
	folder_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	child_item_id	nvarchar(40)	not null
,constraint paf_ctpagefolder_p primary key (folder_id,child_item_id));


create table paf_ct_page (
	page_id	nvarchar(40)	not null,
	name	nvarchar(254)	not null,
	url_name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	creation_date	datetime	not null,
	last_modified	datetime	not null,
	internal_version	integer	null,
	access_level	integer	not null,
	parent_folder	nvarchar(40)	not null,
	layout_id	nvarchar(40)	not null,
	allow_layout_chgs	tinyint	not null,
	palette_id	nvarchar(40)	null,
	fixed	tinyint	not null,
	wireless_enabled	tinyint	not null
,constraint paf_ct_page_p primary key (page_id)
,constraint paf_ct_page_c1 check (allow_layout_chgs in (0,1))
,constraint paf_ct_page_c2 check (fixed in (0,1))
,constraint paf_ct_page_c3 check (wireless_enabled in (0,1)));


create table paf_ct_region (
	region_id	nvarchar(40)	not null,
	internal_version	integer	not null,
	definition	nvarchar(40)	not null,
	fixed	tinyint	not null
,constraint paf_ct_region_p primary key (region_id)
,constraint paf_ct_region_c1 check (fixed in (0,1)));


create table paf_ct_pg_regions (
	page_id	nvarchar(40)	not null,
	tag	nvarchar(42)	not null,
	region_id	nvarchar(40)	not null
,constraint paf_ctpg_regions_p primary key (page_id,tag));


create table paf_ct_region_grs (
	region_id	nvarchar(40)	not null,
	sequence_num	integer	not null,
	gear_id	nvarchar(40)	not null
,constraint paf_ctregion_grs_p primary key (region_id,sequence_num));


create table paf_ct_gear (
	gear_id	nvarchar(40)	not null,
	internal_version	integer	not null,
	name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	gear_definition	nvarchar(40)	not null,
	access_level	integer	not null,
	show_title_bars	tinyint	not null,
	is_shared	tinyint	not null,
	orig_gear_id	nvarchar(40)	null
,constraint paf_ct_gear_p primary key (gear_id)
,constraint paf_ct_gear_c1 check (show_title_bars in (0,1)));


create table paf_ct_gr_iparams (
	gear_id	nvarchar(40)	not null,
	tag	nvarchar(42)	not null,
	iparam_value	nvarchar(254)	not null
,constraint paf_ctgr_iparams_p primary key (gear_id,tag));


create table paf_ct_gr_ln_names (
	gear_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_name	nvarchar(255)	not null
,constraint paf_ctgrln_names_p primary key (gear_id,locale));


create table paf_ct_gr_ln_descs (
	gear_id	nvarchar(40)	not null,
	locale	nvarchar(30)	not null,
	localized_desc	nvarchar(255)	not null
,constraint paf_ctgrln_descs_p primary key (gear_id,locale));


create table paf_ct_gr_fldrs (
	template_id	nvarchar(40)	not null,
	gear_def_folder_id	nvarchar(40)	not null
,constraint paf_ct_gr_fldrs_p primary key (template_id,gear_def_folder_id));


create table paf_ct_gears (
	template_id	nvarchar(40)	not null,
	gear_id	nvarchar(40)	not null
,constraint paf_ct_gears_p primary key (template_id,gear_id));


create table paf_ct_alt_gear (
	id	nvarchar(40)	not null,
	source_id	nvarchar(40)	not null,
	source_type	nvarchar(40)	not null,
	version	integer	not null,
	message_type	nvarchar(255)	not null,
	name	nvarchar(40)	not null,
	value	nvarchar(40)	not null,
	resource_bundle	nvarchar(255)	not null
,constraint paf_ct_alt_gear_p primary key (id));


create table paf_ct_alt_gr_rel (
	id	nvarchar(40)	not null,
	name	nvarchar(40)	not null,
	gear_id	nvarchar(40)	not null
,constraint paf_ctalt_gr_rel_p primary key (id,gear_id));


create table paf_ct_roles (
	template_id	nvarchar(40)	not null,
	role_name	nvarchar(254)	not null,
	role_id	nvarchar(40)	not null
,constraint paf_ct_roles_pk primary key (template_id,role_name)
,constraint paf_ct_roles_fk foreign key (template_id) references paf_comm_template (template_id));


create table paf_ct_gr_acl (
	id	nvarchar(254)	not null,
	indx	integer	not null,
	acl	nvarchar(254)	not null);


create table paf_ct_gr_roles (
	gear_id	nvarchar(40)	not null,
	role_name	nvarchar(254)	not null,
	role_id	nvarchar(40)	not null
,constraint paf_ct_gr_roles_pk primary key (gear_id,role_name)
,constraint paf_ct_gr_roles_fk foreign key (gear_id) references paf_ct_gear (gear_id));

commit;




-- Collected from DSS/InternalUsers/sql/db_components/mysql/internal_scenario_ddl.sql


--  @version $Id: //product/DSS/version/10.0.2/templates/DSS/InternalUsers/sql/internal_scenario_ddl.xml#2 $$Change: 635969 $

create table dsi_coll_scenario (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	segment_name	nvarchar(255)	null,
	creator_id	varchar(25)	null,
	state	varchar(16)	null
,constraint dsi_coll_scenari_p primary key (id));

-- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dps_user) here.

create table dsi_ind_scenario (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	segment_name	nvarchar(255)	null,
	creator_id	varchar(25)	null,
	state	varchar(16)	null,
	user_id	varchar(25)	not null
,constraint dsi_ind_scenario_p primary key (id));

create index dsi_indscenario1_x on dsi_ind_scenario (modification_time);

create table dsi_scenario_strs (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_str	varchar(255)	null
,constraint dsi_scenario_str_p primary key (id,tag)
,constraint dsi_scenrstrsid_f foreign key (id) references dsi_ind_scenario (id));


create table dsi_scenario_bools (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_bool	tinyint	null
,constraint dsi_scenario_boo_p primary key (id,tag)
,constraint dsi_scenrblsid_f foreign key (id) references dsi_ind_scenario (id));


create table dsi_scenario_longs (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_long	bigint	null
,constraint dsi_scenario_lon_p primary key (id,tag)
,constraint dsi_scenrlngsid_f foreign key (id) references dsi_ind_scenario (id));


create table dsi_scenario_dbls (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_dbl	numeric(15,4)	null
,constraint dsi_scenario_dbl_p primary key (id,tag)
,constraint dsi_scenrdblsid_f foreign key (id) references dsi_ind_scenario (id));


create table dsi_scenario_dates (
	id	varchar(25)	not null,
	tag	nvarchar(25)	not null,
	context_date	datetime	null
,constraint dsi_scenario_dat_p primary key (id,tag)
,constraint dsi_scenrdtsid_f foreign key (id) references dsi_ind_scenario (id));


create table dpi_user_scenario (
	id	varchar(40)	not null,
	ind_scenario_id	varchar(25)	not null
,constraint dpi_user_scenari_p primary key (ind_scenario_id)
,constraint dpi_usrscnrid_f foreign key (id) references dpi_user (id)
,constraint dpi_usrsind_scnr_f foreign key (ind_scenario_id) references dsi_ind_scenario (id));

create index dpi_uscn_u_idx on dpi_user_scenario (id);

create table dsi_scenario_info (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	scenario_status	integer	null,
	modification_time	bigint	null,
	creation_time	bigint	null,
	author	varchar(254)	null,
	last_modified_by	varchar(254)	null,
	sdl	longblob	null,
	psm_version	integer	null
,constraint dsi_scenario_inf_p primary key (id));


create table dsi_scen_mig_info (
	id	varchar(25)	not null,
	scenario_info_id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	psm_version	integer	null,
	sdl	longblob	null,
	migration_status	integer	null
,constraint dsi_scenmiginfo_pk primary key (id)
,constraint dsi_scenmiginfo_fk foreign key (scenario_info_id) references dsi_scenario_info (id));

create index dsi_scenmiginfo_id on dsi_scen_mig_info (scenario_info_id);

create table dsi_mig_info_seg (
	id	varchar(25)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint dsi_mig_infoseg_pk primary key (id,idx)
,constraint dsi_mig_infoseg_fk foreign key (id) references dsi_scen_mig_info (id));


create table dsi_template_info (
	id	varchar(25)	not null,
	template_name	nvarchar(255)	null,
	modification_time	bigint	null,
	creation_time	bigint	null,
	author	varchar(254)	null,
	last_modified_by	varchar(254)	null,
	sdl	longblob	null
,constraint dsi_template_inf_p primary key (id));


create table dsi_coll_trans (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	server_id	varchar(40)	null,
	message_bean	longblob	null,
	event_type	varchar(255)	null,
	segment_name	nvarchar(255)	null,
	state	varchar(16)	null,
	coll_scenario_id	varchar(25)	null,
	step	integer	null,
	current_count	integer	null,
	last_query_id	varchar(25)	null
,constraint dsi_coll_trans_p primary key (id)
,constraint dsi_collcoll_scn_f foreign key (coll_scenario_id) references dsi_coll_scenario (id));

create index dsi_ctrcid_idx on dsi_coll_trans (coll_scenario_id);

create table dsi_ind_trans (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null,
	server_id	varchar(40)	null,
	message_bean	longblob	null,
	event_type	varchar(255)	null,
	segment_name	nvarchar(255)	null,
	state	varchar(16)	null,
	last_query_id	varchar(25)	null
,constraint dsi_ind_trans_p primary key (id));


create table dsi_deletion (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	modification_time	bigint	null
,constraint dsi_deletion_p primary key (id));


create table dsi_server_id (
	server_id	varchar(40)	not null,
	server_type	integer	not null
,constraint dsi_server_id_p primary key (server_id));


create table dsi_del_seg_name (
	id	varchar(25)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint dsi_del_seg_name_p primary key (id,idx));

-- migration_info_id references the migration info table, but we don't have aREFERENCES dsi_scen_mig_info(id) here, because we want to be ableto delete the migration info without deleting this row

create table dsi_migration (
	id	varchar(25)	not null,
	scenario_name	nvarchar(255)	null,
	old_mod_time	bigint	null,
	new_mod_time	bigint	null,
	migration_info_id	varchar(25)	null
,constraint dsi_migration_pk primary key (id));


create table dsi_mig_seg_name (
	id	varchar(25)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint dsi_mig_segname_pk primary key (id,idx)
,constraint dsi_mig_segname_fk foreign key (id) references dsi_migration (id));


create table dsi_xref (
	id	varchar(25)	not null,
	scenario_name	varchar(255)	null,
	reference_type	varchar(30)	null,
	reference_target	varchar(255)	null
,constraint dsi_xref_p primary key (id));

-- user_id references the user table but because it is a backwards referencewe cannot have a REFERENCES(dpi_user) here.

create table dsi_profile_slot (
	id	varchar(25)	not null,
	slot_name	varchar(255)	null,
	item_offset	bigint	null,
	user_id	varchar(25)	not null
,constraint dsi_profile_slot_p primary key (id));


create table dpi_user_slot (
	id	varchar(40)	not null,
	profile_slot_id	varchar(25)	not null
,constraint dpi_user_slot_p primary key (id,profile_slot_id)
,constraint dpi_usrsltid_f foreign key (id) references dpi_user (id)
,constraint dpi_usrsprofl_sl_f foreign key (profile_slot_id) references dsi_profile_slot (id));

create index dpi_usr_sltprfl_id on dpi_user_slot (profile_slot_id);

create table dsi_slot_items (
	slot_id	varchar(25)	not null,
	item_id	varchar(255)	null,
	idx	integer	not null
,constraint dsi_slot_items_p primary key (slot_id,idx)
,constraint dsi_slotslot_d_f foreign key (slot_id) references dsi_profile_slot (id));


create table dsi_slot_priority (
	slot_id	varchar(25)	not null,
	idx	integer	not null,
	priority	bigint	not null
,constraint dsi_slot_priorit_p primary key (slot_id,idx)
,constraint dsi_slotpslot_d_f foreign key (slot_id) references dsi_profile_slot (id));


create table dpi_scenario_value (
	id	varchar(40)	not null,
	tag	varchar(42)	not null,
	scenario_value	varchar(100)	null
,constraint dpi_scenario_val_p primary key (id,tag)
,constraint dpi_scenrvlid_f foreign key (id) references dpi_user (id));

create index dpi_scenval_id on dpi_scenario_value (id);
commit;




-- Collected from Publishing/base/sql/db_components/mysql/internal_user_profile_ddl.sql


--  @version $Id: //product/Publishing/version/10.0.2/pws/sql/xml/internal_user_profile_ddl.xml#2 $
--     The tables here are for the user profile extensions needed by EPublishing.  

create table epub_int_user (
	user_id	varchar(40)	not null,
	title	varchar(255)	null,
	expert	tinyint	null,
	def_listing	bigint	null,
	def_ip_listing	bigint	null,
	allow_applets	tinyint	null
,constraint epub_int_user_pk primary key (user_id));


create table epub_int_prj_hist (
	user_id	varchar(40)	not null,
	sequence_num	bigint	not null,
	project_id	varchar(40)	not null
,constraint user_i_prj_hist_pk primary key (user_id,sequence_num)
,constraint user_i_prj_hist_fk foreign key (user_id) references dpi_user (id));

commit;




-- Collected from Publishing/base/sql/db_components/mysql/publishing_ddl.sql


--  @version $Id: //product/Publishing/version/10.0.2/pws/sql/xml/publishing_ddl.xml#2 $
--     The tables here are for the various parts of the epublishing system.  

create table epub_history (
	history_id	varchar(40)	not null,
	profile	varchar(40)	null,
	timestamp	datetime	null,
	action	varchar(255)	null,
	action_type	varchar(255)	null,
	description	nvarchar(4096)	null
,constraint history_pk primary key (history_id));

create index his_profile_idx on epub_history (profile);
create index his_timestamp_idx on epub_history (timestamp);
create index his_action_idx on epub_history (action);

create table epub_his_act_parm (
	history_id	varchar(40)	not null,
	action_param	varchar(255)	null,
	sequence_num	bigint	not null
,constraint epub_his_ac_pk primary key (history_id,sequence_num)
,constraint epub_hisact_id_fk foreign key (history_id) references epub_history (history_id));


create table epub_taskinfo (
	taskinfo_id	varchar(40)	not null,
	version	bigint	not null,
	process_id	varchar(40)	not null,
	process_name	nvarchar(255)	not null,
	segment_name	nvarchar(255)	not null,
	task_element_id	varchar(255)	not null,
	acl	varchar(2048)	null,
	priority	bigint	null,
	owner_name	varchar(255)	null,
	last_actor_name	varchar(255)	null,
	last_action_date	datetime	null,
	last_outcome_id	varchar(255)	null
,constraint taskinfo_pk primary key (taskinfo_id));

create index taskinfo_pname_ix on epub_taskinfo (process_name);

create table epub_agent_trnprt (
	transport_id	varchar(40)	not null,
	version	bigint	not null,
	transport_type	tinyint	not null,
	jndi_name	varchar(255)	null,
	rmi_uri	varchar(255)	null);


create table epub_agent (
	agent_id	varchar(40)	not null,
	version	bigint	not null,
	creation_time	datetime	null,
	display_name	nvarchar(255)	null,
	description	nvarchar(1024)	null,
	main_agent_id	varchar(40)	null,
	transport	varchar(40)	not null
,constraint target_agent_pk primary key (agent_id));


create table epub_target (
	target_id	varchar(40)	not null,
	snapshot_name	varchar(255)	null,
	version	bigint	not null,
	creation_time	datetime	null,
	main_target_id	varchar(40)	null,
	display_name	nvarchar(255)	null,
	description	nvarchar(1024)	null,
	halted	tinyint	null,
	flag_agents	tinyint	null,
	target_type	tinyint	null
,constraint targets_pk primary key (target_id));


create table epub_tr_dest (
	target_id	varchar(40)	not null,
	target_source	varchar(100)	not null,
	target_destination	varchar(100)	not null
,constraint epub_trd_id_pk primary key (target_id,target_source));


create table epub_topology (
	topology_id	varchar(40)	not null,
	version	bigint	not null,
	primary_tl	tinyint	null
,constraint topology_pk primary key (topology_id));


create table epub_tl_targets (
	topology_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	sequence_num	bigint	not null
,constraint pr_tp_tr_pk primary key (topology_id,target_id));


create table epub_tr_agents (
	target_id	varchar(40)	not null,
	agent_id	varchar(40)	not null
,constraint pr_ag_pk primary key (target_id,agent_id)
,constraint pt_tr_pr_id_fk foreign key (target_id) references epub_target (target_id)
,constraint pt_ag_ag_id_fk foreign key (agent_id) references epub_agent (agent_id));

create index epub_tr_agents_x on epub_tr_agents (agent_id);

create table epub_princ_asset (
	agent_id	varchar(40)	not null,
	principal_assets	varchar(40)	not null
,constraint princ_asset_pk primary key (agent_id,principal_assets)
,constraint princ_aset_id_fk foreign key (agent_id) references epub_agent (agent_id));


create table epub_includ_asset (
	agent_id	varchar(40)	not null,
	include_assets	varchar(255)	not null
,constraint includ_asset_pk primary key (agent_id,include_assets)
,constraint includ_aset_id_fk foreign key (agent_id) references epub_agent (agent_id));


create table epub_exclud_asset (
	agent_id	varchar(40)	not null,
	exclude_assets	varchar(255)	not null
,constraint exclud_asset_pk primary key (agent_id,exclude_assets)
,constraint exclud_aset_id_fk foreign key (agent_id) references epub_agent (agent_id));


create table epub_dest_map (
	agent_id	varchar(40)	not null,
	source	varchar(255)	not null,
	destination	varchar(255)	not null
,constraint dest_map_pk primary key (agent_id,source)
,constraint dest_map_id_fk foreign key (agent_id) references epub_agent (agent_id));


create table epub_project (
	project_id	varchar(40)	not null,
	version	bigint	not null,
	acl	varchar(2048)	null,
	display_name	nvarchar(255)	null,
	description	nvarchar(1024)	null,
	creator	varchar(40)	null,
	workspace	varchar(255)	not null,
	workflow_id	varchar(40)	null,
	checked_in	tinyint	null,
	locked	tinyint	null,
	editable	tinyint	null,
	status	bigint	null,
	status_detail	nvarchar(255)	null,
	checkin_date	datetime	null,
	creation_date	datetime	null,
	completion_date	datetime	null
,constraint project_pk primary key (project_id)
,constraint pr_editable_chk check (editable in (0,1)));

create index pr_workspace_idx on epub_project (workspace);
create index pr_disp_name_idx on epub_project (display_name);
create index pr_creator_idx on epub_project (creator);
create index pr_creat_date_idx on epub_project (creation_date);
create index pr_comp_date_idx on epub_project (completion_date);

create table epub_prj_targt_ws (
	project_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	workspace_id	varchar(40)	null
,constraint epub_prw_id_pk primary key (project_id,target_id));


create table epub_pr_tg_status (
	project_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	status_code	tinyint	null
,constraint epub_pr_ap_id_pk primary key (project_id,target_id));


create table epub_prj_tg_snsht (
	project_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	snapshot_id	varchar(40)	null
,constraint epub_prs_id_pk primary key (project_id,target_id));


create table epub_pr_tg_dp_ts (
	project_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	deployment_time	datetime	null
,constraint epub_pr_dt_id_pk primary key (project_id,target_id));


create table epub_pr_tg_dp_id (
	project_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	deployment_id	varchar(40)	null
,constraint epub_pr_dp_id_pk primary key (project_id,target_id));


create table epub_pr_tg_ap_ts (
	project_id	varchar(40)	not null,
	target_id	varchar(40)	not null,
	approval_time	datetime	null
,constraint epub_ap_ts_id_pk primary key (project_id,target_id));


create table epub_pr_history (
	project_id	varchar(40)	not null,
	sequence_num	bigint	not null,
	history	varchar(40)	not null
,constraint pr_hist_pk primary key (project_id,sequence_num)
,constraint pt_hist_id_fk foreign key (project_id) references epub_project (project_id)
,constraint pt_hist_hist_fk foreign key (history) references epub_history (history_id));

create index pr_hist_hist_idx on epub_pr_history (history);

create table epub_process (
	process_id	varchar(40)	not null,
	version	bigint	not null,
	acl	varchar(2048)	null,
	display_name	nvarchar(255)	null,
	description	nvarchar(1024)	null,
	creator	varchar(40)	null,
	project	varchar(40)	null,
	process_data	varchar(40)	null,
	workflow_id	varchar(40)	null,
	activity	varchar(255)	null,
	site_id	varchar(40)	null,
	status	bigint	null,
	status_detail	nvarchar(255)	null,
	creation_date	datetime	null,
	completion_date	datetime	null
,constraint process_pk primary key (process_id));

create index prc_disp_name_idx on epub_process (display_name);
create index prc_creator_idx on epub_process (creator);
create index prc_creat_date_idx on epub_process (creation_date);
create index prc_comp_date_idx on epub_process (completion_date);
create index prc_project_idx on epub_process (project);

create table epub_proc_prv_prj (
	process_id	varchar(40)	not null,
	sequence_num	bigint	not null,
	project_id	varchar(40)	not null
,constraint proc_prv_prj_pk primary key (process_id,sequence_num)
,constraint prc_pvprj_pcid_fk foreign key (process_id) references epub_process (process_id)
,constraint prc_prv_prj_id_fk foreign key (project_id) references epub_project (project_id));

create index epub_prv_prj_id_x on epub_proc_prv_prj (project_id);

create table epub_proc_history (
	process_id	varchar(40)	not null,
	sequence_num	bigint	not null,
	history	varchar(40)	not null
,constraint proc_hist_pk primary key (process_id,sequence_num)
,constraint proc_hist_id_fk foreign key (process_id) references epub_process (process_id)
,constraint proc_hist_hist_fk foreign key (history) references epub_history (history_id));

create index epub_proc_hist_x on epub_proc_history (history);

create table epub_proc_taskinfo (
	id	varchar(40)	not null,
	taskinfo_id	varchar(40)	not null
,constraint prc_ti_pk primary key (taskinfo_id)
,constraint prc_ti_prc_id_fk foreign key (id) references epub_process (process_id)
,constraint prc_ti_ti_id_fk foreign key (taskinfo_id) references epub_taskinfo (taskinfo_id));

create index epub_prctaskinfo_x on epub_proc_taskinfo (id);

create table epub_deployment (
	deployment_id	varchar(40)	not null,
	version	bigint	not null,
	target_id	varchar(255)	null,
	deploy_time	datetime	not null,
	create_time	datetime	not null,
	creator	varchar(40)	null,
	uri	varchar(100)	null,
	next_dep_id	varchar(40)	null,
	previous_dep_id	varchar(40)	null,
	force_full	tinyint	null,
	dep_type	tinyint	null,
	status	smallint	null,
	message_code	varchar(255)	null,
	strict_file_op	tinyint	null,
	strict_repo_op	tinyint	null
,constraint deployment_pk primary key (deployment_id));

create index depl_time_idx on epub_deployment (deploy_time);

create table epub_deploy_proj (
	deployment_id	varchar(40)	not null,
	project_id	varchar(40)	not null,
	sequence_num	bigint	not null
,constraint epub_dep_proj_pk primary key (deployment_id,project_id));


create table epub_dep_err_parm (
	deployment_id	varchar(40)	not null,
	error_param	varchar(255)	null,
	sequence_num	bigint	not null
,constraint epub_dep_er_pk primary key (deployment_id,sequence_num)
,constraint epub_dep_id_fk foreign key (deployment_id) references epub_deployment (deployment_id));

--     Log of deployments that have occured. See the epub repository  
--     definition file for more details  

create table epub_dep_log (
	log_id	varchar(40)	not null,
	dep_id	varchar(40)	not null,
	target_name	varchar(255)	not null,
	log_time	datetime	not null,
	begin_time	datetime	not null,
	end_time	datetime	not null,
	actor_id	varchar(40)	null,
	type	integer	not null,
	dep_mode	integer	not null,
	status	integer	not null,
	deli_proj_ids	varchar(255)	null,
	delimiter	varchar(5)	not null,
	strict_file_op	tinyint	null,
	strict_repo_op	tinyint	null
,constraint dep_log_pk primary key (log_id));

commit;




-- Collected from Publishing/base/sql/db_components/mysql/versioned_file_repository_ddl.sql


--  @version $Id: //product/Publishing/version/10.0.2/pws/sql/xml/file_repository_ddl.xml#2 $
--     These tables are for the storing versioned files for Publishing  

create table epub_file_folder (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	acl	varchar(2048)	null,
	folder_name	nvarchar(255)	not null,
	parent_folder	varchar(40)	null
,constraint content_folder_pk primary key (folder_id,asset_version));

create index ff_folder_name_idx on epub_file_folder (folder_name);
create index epub_file_fold_wsx on epub_file_folder (workspace_id);
create index epub_file_fold_cix on epub_file_folder (checkin_date);

create table epub_file_asset (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	file_asset_id	varchar(40)	not null,
	type	bigint	not null,
	acl	varchar(2048)	null,
	filename	nvarchar(255)	not null,
	last_modified	datetime	null,
	size_bytes	bigint	null,
	checksum	bigint	null,
	parent_folder	varchar(40)	null
,constraint file_asset_pk primary key (file_asset_id,asset_version));

create index fa_folder_name_idx on epub_file_asset (filename);
create index fa_parent_fldr_idx on epub_file_asset (parent_folder);
create index fa_size_idx on epub_file_asset (size_bytes);
create index fa_last_mod_idx on epub_file_asset (last_modified);
create index epub_file_asse_wsx on epub_file_asset (workspace_id);
create index epub_file_asse_cix on epub_file_asset (checkin_date);

create table epub_text_file (
	asset_version	bigint	not null,
	text_file_id	varchar(40)	not null,
	text_content	longtext	null
,constraint tf_file_id_pk primary key (text_file_id,asset_version));


create table epub_binary_file (
	asset_version	bigint	not null,
	binary_file_id	varchar(40)	not null,
	binary_content	longblob	null
,constraint bf_file_id_pk primary key (binary_file_id,asset_version));

commit;




-- Collected from Publishing/base/sql/db_components/mysql/versioned_process_data_ddl.sql


--  @version $Id: //product/Publishing/version/10.0.2/pws/sql/xml/process_data_ddl.xml#2 $
--     These tables are for the ProcessDataRepository  

create table epub_process_data (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	process_data_id	varchar(40)	not null,
	type	bigint	not null
,constraint process_data_pk primary key (process_data_id,asset_version));

create index epub_process_d_wsx on epub_process_data (workspace_id);
create index epub_process_d_cix on epub_process_data (checkin_date);
commit;




-- Collected from Publishing/base/sql/db_components/mysql/versionmanager_ddl.sql


--  @version $Id: //product/Publishing/version/10.0.2/pws/sql/xml/versionmanager_ddl.xml#2 $
--     These tables are for the version manager  

create table avm_devline (
	id	varchar(40)	not null,
	type	bigint	not null,
	name	varchar(255)	not null,
	parent	varchar(40)	null,
	date_created	datetime	null
,constraint avm_devline_pk primary key (id)
,constraint avm_dl_name_unq unique (name));

create index avm_devline_pt_idx on avm_devline (parent);

create table avm_workspace (
	ws_id	varchar(40)	not null,
	checked_in	tinyint	not null,
	ci_time	datetime	null,
	userid	varchar(255)	null,
	locked	tinyint	not null,
	editable	tinyint	not null,
	change_was	varchar(4096)	null
,constraint avm_workspace_pk primary key (ws_id)
,constraint avm_workspace_fk foreign key (ws_id) references avm_devline (id));


create table avm_asset_lock (
	repository_name	varchar(255)	not null,
	descriptor_name	varchar(255)	not null,
	repository_id	varchar(255)	not null,
	workspace_id	varchar(40)	not null
,constraint avm_lock_pk primary key (repository_name,descriptor_name,repository_id)
,constraint avm_lock_ws_fk foreign key (workspace_id) references avm_workspace (ws_id));

create index avm_asset_lock_x on avm_asset_lock (workspace_id);
commit;




-- Collected from Publishing/base/sql/db_components/mysql/workflow_ddl.sql


--  @version $Id: //product/Publishing/version/10.0.2/pws/sql/xml/workflow_ddl.xml#2 $
--     Collective workflow process instances.  These instances represent  
--     all subjects (processes) going through the workflow process.  

create table epub_coll_workflow (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	modification_time	bigint	null,
	segment_name	varchar(255)	null,
	creator_id	varchar(40)	null,
	state	varchar(16)	null,
	num_retries	integer	null
,constraint epub_coll_wf_pkey primary key (id));

--     Individual workflow process instances.  Each of these instances  
--     represents a single subject (process) going through the workflow  
--     process.  

create table epub_ind_workflow (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	modification_time	bigint	null,
	segment_name	varchar(255)	null,
	creator_id	varchar(40)	null,
	state	varchar(16)	null,
	process_id	varchar(40)	not null,
	num_retries	integer	null
,constraint epub_ind_wf_pkey primary key (id)
,constraint epub_ind_wf_fkey foreign key (process_id) references epub_process (process_id));

create index epub_indworkflow_x on epub_ind_workflow (process_id);
--     Indices are needed on these tables to prevent table locks from being  
--     acquired.  The primary key indices do not prevent this since they  
--     are on multiple keys.  
-- 
--     String context variables associated with individual workflow  
--     process instances.  

create table epub_workflow_strs (
	id	varchar(40)	not null,
	tag	varchar(25)	not null,
	context_str	varchar(255)	null
,constraint epub_wf_str_pkey primary key (id,tag)
,constraint epub_wf_str_fkey foreign key (id) references epub_ind_workflow (id));

--     Boolean context variables associated with individual workflow  
--     process instances.  

create table epub_workflow_bls (
	id	varchar(40)	not null,
	tag	varchar(25)	not null,
	context_bool	tinyint	null
,constraint epub_wf_bl_pkey primary key (id,tag)
,constraint epub_wf_bl_fkey foreign key (id) references epub_ind_workflow (id));

--     Long context variables associated with individual workflow process  
--     instances.  

create table epub_workflow_lngs (
	id	varchar(40)	not null,
	tag	varchar(25)	not null,
	context_long	bigint	null
,constraint epub_wf_lng_pkey primary key (id,tag)
,constraint epub_wf_lng_fkey foreign key (id) references epub_ind_workflow (id));

--     Double context variables associated with individual workflow  
--     process instances.  

create table epub_workflow_dbls (
	id	varchar(40)	not null,
	tag	varchar(25)	not null,
	context_dbl	numeric(15,4)	null
,constraint epub_wf_dbl_pkey primary key (id,tag)
,constraint epub_wf_dbl_fkey foreign key (id) references epub_ind_workflow (id));

--     Date context variables associated with individual workflow process  
--     instances.  

create table epub_workflow_dats (
	id	varchar(40)	not null,
	tag	varchar(25)	not null,
	context_date	datetime	null
,constraint epub_wf_dat_pkey primary key (id,tag)
,constraint epub_wf_dat_fkey foreign key (id) references epub_ind_workflow (id));

--     Repository item context variables associated with individual   
--     workflow process instances.  

create table epub_workflow_ris (
	id	varchar(40)	not null,
	tag	varchar(255)	not null,
	context_item	varchar(255)	null
,constraint epub_wf_ri_pkey primary key (id,tag)
,constraint epub_wf_ri_fkey foreign key (id) references epub_ind_workflow (id));

--     Virtual file context variables associated with individual   
--     workflow process instances.  

create table epub_workflow_vfs (
	id	varchar(40)	not null,
	tag	varchar(25)	not null,
	context_file	varchar(255)	null
,constraint epub_wf_vf_pkey primary key (id,tag)
,constraint epub_wf_vf_fkey foreign key (id) references epub_ind_workflow (id));

--     Workflow infos.  Each of these infos corresponds to a workflow  
--     process definition created via the ACC UI.  

create table epub_workflow_info (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	workflow_status	integer	null,
	modification_time	bigint	null,
	creation_time	bigint	null,
	author	varchar(254)	null,
	last_modified_by	varchar(254)	null,
	psm_version	integer	null,
	wdl	longblob	null
,constraint epub_wf_info_pkey primary key (id));


create table epub_wf_mig_info (
	id	varchar(40)	not null,
	workflow_info_id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	modification_time	bigint	null,
	psm_version	integer	null,
	migration_status	integer	null,
	wdl	longblob	null
,constraint epub_wf_mig_inf_pk primary key (id)
,constraint epub_wf_mig_inf_fk foreign key (workflow_info_id) references epub_workflow_info (id));

create index epub_wf_mig_info_x on epub_wf_mig_info (workflow_info_id);

create table epub_wf_mg_inf_seg (
	id	varchar(40)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint epub_wf_mginfs_pk primary key (id,idx)
,constraint epub_wf_mginfs_fk foreign key (id) references epub_wf_mig_info (id));

--     Workflow template infos.  Each of these infos corresponds to a  
--     workflow template process definition created via the ACC UI.  

create table epub_wf_templ_info (
	id	varchar(40)	not null,
	template_name	varchar(255)	null,
	modification_time	bigint	null,
	creation_time	bigint	null,
	author	varchar(254)	null,
	last_modified_by	varchar(254)	null,
	wdl	longblob	null
,constraint epub_tl_info_pkey primary key (id));

--     Pending collective transitions associated with workflow processes.  

create table epub_wf_coll_trans (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	modification_time	bigint	null,
	server_id	varchar(40)	null,
	event_type	varchar(255)	null,
	segment_name	varchar(255)	null,
	state	varchar(16)	null,
	coll_workflow_id	varchar(40)	null,
	step	integer	null,
	current_count	integer	null,
	last_query_id	varchar(40)	null,
	message_bean	longblob	null
,constraint epub_wf_ctran_pkey primary key (id)
,constraint epub_wf_ctran_fkey foreign key (coll_workflow_id) references epub_coll_workflow (id));

create index epub_wfcolltrans_x on epub_wf_coll_trans (coll_workflow_id);
--     Pending individual transitions associated with workflow processes.  

create table epub_wf_ind_trans (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	modification_time	bigint	null,
	server_id	varchar(40)	null,
	event_type	varchar(255)	null,
	segment_name	varchar(255)	null,
	state	varchar(16)	null,
	last_query_id	varchar(40)	null,
	message_bean	longblob	null
,constraint epub_wf_itran_pkey primary key (id));

--     Pending deletions associated with workflow processes.  

create table epub_wf_deletion (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	modification_time	bigint	null
,constraint epub_wf_del_pkey primary key (id));


create table epub_wf_del_segs (
	id	varchar(40)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint epub_wf_delsg_pkey primary key (id,idx)
,constraint epub_wf_delsg_fkey foreign key (id) references epub_wf_deletion (id));

--     Pending migrations associated with workflow processes.  

create table epub_wf_migration (
	id	varchar(40)	not null,
	workflow_name	varchar(255)	null,
	old_mod_time	bigint	null,
	new_mod_time	bigint	null,
	migration_info_id	varchar(40)	null
,constraint epub_wf_mig_pkey primary key (id));


create table epub_wf_mig_segs (
	id	varchar(40)	not null,
	idx	integer	not null,
	segment_name	varchar(255)	null
,constraint epub_wf_migsg_pkey primary key (id,idx)
,constraint epub_wf_migsg_fkey foreign key (id) references epub_wf_migration (id));

--     Table that keeps track of how the various workflow process manager  
--     servers are classified.  

create table epub_wf_server_id (
	server_id	varchar(40)	not null,
	server_type	integer	not null
,constraint epub_wf_server_pk primary key (server_id));

commit;




-- Collected from DAS/Versioned/sql/db_components/mysql/versioned_seo_ddl.sql


--     @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/seo_ddl.xml#2 $  
-- Table for seo-tag repository item

create table das_seo_tag (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	seo_tag_id	varchar(40)	not null,
	display_name	varchar(100)	null,
	title	varchar(254)	null,
	description	varchar(254)	null,
	keywords	varchar(254)	null,
	content_key	varchar(100)	null
,constraint das_seo_tag_pk primary key (seo_tag_id,asset_version));

create index das_seo_tag_wsx on das_seo_tag (workspace_id);
create index das_seo_tag_cix on das_seo_tag (checkin_date);

create table das_seo_sites (
	asset_version	bigint	not null,
	seo_tag_id	varchar(40)	not null,
	site_id	varchar(40)	not null
,constraint das_seo_site_pk primary key (seo_tag_id,site_id,asset_version));

commit;




-- Collected from DAS/Versioned/sql/db_components/mysql/versioned_site_ddl.sql


--  @version $Id: //product/DAS/version/10.0.2/templates/DAS/sql/site_ddl.xml#2 $$Change: 635969 $
-- This file contains create table statements, which will configureyour database for use MultiSite

create table site_template (
	id	varchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	not null,
	item_mapping_id	varchar(40)	not null
,constraint site_template1_p primary key (id));


create table site_configuration (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	id	varchar(40)	not null,
	name	nvarchar(254)	not null,
	description	nvarchar(254)	null,
	template	varchar(40)	null,
	production_url	nvarchar(254)	null,
	enabled	tinyint	not null,
	site_down_url	nvarchar(254)	null,
	open_date	datetime	null,
	pre_opening_url	nvarchar(254)	null,
	closing_date	datetime	null,
	post_closing_url	nvarchar(254)	null,
	modification_time	datetime	null,
	creation_time	datetime	null,
	author	nvarchar(254)	null,
	last_modified_by	nvarchar(254)	null,
	site_icon	nvarchar(254)	null,
	favicon	nvarchar(254)	null,
	site_priority	integer	null,
	context_root	nvarchar(254)	null
,constraint site_configurat1_p primary key (id,asset_version));

create index site_configura_wsx on site_configuration (workspace_id);
create index site_configura_cix on site_configuration (checkin_date);

create table site_additional_urls (
	asset_version	bigint	not null,
	id	varchar(40)	not null,
	additional_production_url	nvarchar(254)	null,
	idx	integer	not null
,constraint siteadditio_url1_p primary key (id,idx,asset_version));


create table site_types (
	asset_version	bigint	not null,
	id	varchar(40)	not null,
	site_type	nvarchar(254)	not null
,constraint site_types1_p primary key (id,site_type,asset_version));


create table site_group (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	id	varchar(40)	not null,
	display_name	nvarchar(254)	not null
,constraint site_group1_p primary key (id,asset_version));

create index site_group_wsx on site_group (workspace_id);
create index site_group_cix on site_group (checkin_date);

create table site_group_sites (
	asset_version	bigint	not null,
	site_id	varchar(40)	not null,
	site_group_id	varchar(40)	not null
,constraint site_group_sites_p primary key (site_id,site_group_id,asset_version));


create table site_group_shareable_types (
	asset_version	bigint	not null,
	shareable_types	nvarchar(254)	not null,
	site_group_id	varchar(40)	not null
,constraint site_group_share_p primary key (shareable_types,site_group_id,asset_version));

commit;




-- Collected from DPS/Versioned/sql/db_components/mysql/versioned_personalization_ddl.sql


--  @version $Id: //product/DPS/version/10.0.2/templates/DPS/sql/personalization_ddl.xml#2 $$Change: 635969 $
-- This file contains create table statements needed to configure your database for personzalization assets.This script will create tables and indexes associated with the user segment list manager.

create table dps_seg_list (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	segment_list_id	varchar(40)	not null,
	display_name	varchar(256)	null,
	description	varchar(1024)	null,
	folder_id	varchar(40)	null
,constraint dps_seg_list_p primary key (segment_list_id,asset_version));

create index dps_seg_list_wsx on dps_seg_list (workspace_id);
create index dps_seg_list_cix on dps_seg_list (checkin_date);

create table dps_seg_list_name (
	asset_version	bigint	not null,
	segment_list_id	varchar(40)	not null,
	seq	integer	not null,
	group_name	varchar(256)	not null
,constraint dps_s_l_n_p primary key (segment_list_id,seq,asset_version));


create table dps_seg_list_folder (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	display_name	varchar(256)	null,
	description	varchar(1024)	null,
	parent_folder_id	varchar(40)	null
,constraint dps_s_l_f_p primary key (folder_id,asset_version));

create index dps_seg_list_f_wsx on dps_seg_list_folder (workspace_id);
create index dps_seg_list_f_cix on dps_seg_list_folder (checkin_date);
commit;




-- Collected from DCS/sql/db_components/mysql/commerce_user.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/commerce_user.xml#2 $$Change: 635969 $

create table dps_credit_card (
	id	varchar(40)	not null,
	credit_card_number	varchar(40)	null,
	credit_card_type	varchar(40)	null,
	expiration_month	varchar(20)	null,
	exp_day_of_month	varchar(20)	null,
	expiration_year	varchar(20)	null,
	billing_addr	varchar(40)	null
,constraint dps_credit_card_p primary key (id));

create index dps_crcdba_idx on dps_credit_card (billing_addr);

create table dcs_user (
	user_id	varchar(40)	not null,
	allow_partial_ship	tinyint	null,
	default_creditcard	varchar(40)	null,
	daytime_phone_num	varchar(30)	null,
	express_checkout	tinyint	null,
	default_carrier	nvarchar(256)	null,
	price_list	varchar(40)	null,
	sale_price_list	varchar(40)	null
,constraint dcs_user_p primary key (user_id)
,constraint dcs_usrdeflt_cr_f foreign key (default_creditcard) references dps_credit_card (id)
,constraint dcs_user1_c check (allow_partial_ship in (0,1))
,constraint dcs_user2_c check (express_checkout in (0,1)));

create index dcs_usrdcc_idx on dcs_user (default_creditcard);

create table dps_usr_creditcard (
	user_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	credit_card_id	varchar(40)	not null
,constraint dps_usr_creditca_p primary key (user_id,tag)
,constraint dps_usrccredt_cr_f foreign key (credit_card_id) references dps_credit_card (id)
,constraint dps_usrcusr_d_f foreign key (user_id) references dps_user (id));

create index dps_ucccid_idx on dps_usr_creditcard (credit_card_id);
create index dps_uccuid_idx on dps_usr_creditcard (user_id);
commit;




-- Collected from DCS/sql/db_components/mysql/custom_catalog_user_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/custom_catalog_user_ddl.xml#2 $$Change: 635969 $

create table dcs_user_catalog (
	user_id	varchar(40)	not null,
	user_catalog	varchar(40)	null
,constraint dcs_usr_catalog_pk primary key (user_id));

commit;




-- Collected from DCS/sql/db_components/mysql/inventory_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/inventory_ddl.xml#2 $$Change: 635969 $

create table dcs_inventory (
	inventory_id	varchar(40)	not null,
	version	integer	not null,
	inventory_lock	varchar(20)	null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	display_name	varchar(254)	null,
	description	varchar(254)	null,
	catalog_ref_id	varchar(40)	not null,
	avail_status	integer	not null,
	availability_date	datetime	null,
	stock_level	integer	null,
	backorder_level	integer	null,
	preorder_level	integer	null,
	stock_thresh	integer	null,
	backorder_thresh	integer	null,
	preorder_thresh	integer	null
,constraint dcs_inventory_p primary key (inventory_id)
,constraint inv_catrefid_idx unique (catalog_ref_id));

create index inv_end_dte_idx on dcs_inventory (end_date);
create index inv_strt_dte_idx on dcs_inventory (start_date);
commit;




-- Collected from DCS/sql/db_components/mysql/user_promotion_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/user_promotion_ddl.xml#2 $$Change: 635969 $
-- The promotion line was commented out to allow the profile and promotion tables to be delinked. The promotion tables are intended to be used as a "read-only" table on the production servers. The promotion (and product catalog) tables are promoted and made active on the production system through copy-switch. In doing so, the profile tables and the promotion tables cannot be in the same database, and therefore we must remove this referece. However if you are not going to use copy-switch for the promotions, then you can add this reference back in.     promotion			VARCHAR(40)		NOT NULL	REFERENCES dcs_promotion(promotion_id),

create table dcs_usr_promostat (
	status_id	varchar(40)	not null,
	profile_id	varchar(40)	not null,
	promotion	varchar(40)	not null,
	num_uses	integer	null,
	expirationDate	datetime	null,
	granted_date	datetime	null
,constraint dcs_usr_promosta_p primary key (status_id));

create index promostat_prof_idx on dcs_usr_promostat (profile_id);
create index usr_prmstat_pr_idx on dcs_usr_promostat (promotion);

create table dcs_usr_actvpromo (
	id	varchar(40)	not null,
	sequence_num	integer	not null,
	promo_status_id	varchar(40)	not null
,constraint dcs_usr_actvprom_p primary key (id,sequence_num));

create index usr_actvprm_id_idx on dcs_usr_actvpromo (id);
-- The promotion_id column was commented out to allow the profile and promotion tables to be delinked. The promotion tables are intended to be used as a "read-only" table on the production servers. The promotion (and product catalog) tables are promoted and made active on the production system through copy-switch. In doing so, the profile tables and the promotion tables cannot be in the same database, and therefore we must remove this referece. However if you are not going to use copy-switch for the promotions, then you can add this reference back in.        promotion_id                    VARCHAR(40)             NOT NULL        REFERENCES dcs_promotion(promotion_id),

create table dcs_usr_usedpromo (
	id	varchar(40)	not null,
	promotion_id	varchar(40)	not null
,constraint dcs_usr_usedprom_p primary key (id,promotion_id));

create index usr_usedprm_id_idx on dcs_usr_usedpromo (id);
create index usr_usedprm_pi_idx on dcs_usr_usedpromo (promotion_id);
commit;




-- Collected from DCS/sql/db_components/mysql/order_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/order_ddl.xml#2 $$Change: 635969 $

create table dcspp_order (
	order_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	order_class_type	varchar(40)	null,
	profile_id	varchar(40)	null,
	description	varchar(64)	null,
	state	varchar(40)	null,
	state_detail	nvarchar(254)	null,
	created_by_order	varchar(40)	null,
	origin_of_order	integer	null,
	creation_date	datetime	null,
	submitted_date	datetime	null,
	last_modified_date	datetime	null,
	completed_date	datetime	null,
	price_info	varchar(40)	null,
	tax_price_info	varchar(40)	null,
	explicitly_saved	tinyint	null,
	agent_id	varchar(40)	null,
	sales_channel	integer	null,
	creation_site_id	varchar(40)	null,
	site_id	varchar(40)	null
,constraint dcspp_order_p primary key (order_id)
,constraint dcspp_order_c check (explicitly_saved IN (0,1)));

create index order_lastmod_idx on dcspp_order (last_modified_date);
create index order_profile_idx on dcspp_order (profile_id);
create index order_submit_idx on dcspp_order (submitted_date);
create index ord_creat_site_idx on dcspp_order (creation_site_id);
create index ord_site_idx on dcspp_order (site_id);

create table dcspp_ship_group (
	shipping_group_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	shipgrp_class_type	varchar(40)	null,
	shipping_method	varchar(40)	null,
	description	varchar(64)	null,
	ship_on_date	datetime	null,
	actual_ship_date	datetime	null,
	state	varchar(40)	null,
	state_detail	nvarchar(254)	null,
	submitted_date	datetime	null,
	price_info	varchar(40)	null,
	order_ref	varchar(40)	null
,constraint dcspp_ship_group_p primary key (shipping_group_id));


create table dcspp_pay_group (
	payment_group_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	paygrp_class_type	varchar(40)	null,
	payment_method	varchar(40)	null,
	amount	numeric(19,7)	null,
	amount_authorized	numeric(19,7)	null,
	amount_debited	numeric(19,7)	null,
	amount_credited	numeric(19,7)	null,
	currency_code	varchar(10)	null,
	state	varchar(40)	null,
	state_detail	nvarchar(254)	null,
	submitted_date	datetime	null,
	order_ref	varchar(40)	null
,constraint dcspp_pay_group_p primary key (payment_group_id));


create table dcspp_item (
	commerce_item_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	item_class_type	varchar(40)	null,
	catalog_id	varchar(40)	null,
	catalog_ref_id	varchar(40)	null,
	catalog_key	varchar(40)	null,
	product_id	varchar(40)	null,
	site_id	varchar(40)	null,
	quantity	integer	null,
	state	varchar(40)	null,
	state_detail	nvarchar(254)	null,
	price_info	varchar(40)	null,
	order_ref	varchar(40)	null
,constraint dcspp_item_p primary key (commerce_item_id));

create index item_catref_idx on dcspp_item (catalog_ref_id);
create index item_prodref_idx on dcspp_item (product_id);
create index item_site_idx on dcspp_item (site_id);

create table dcspp_relationship (
	relationship_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	rel_class_type	varchar(40)	null,
	relationship_type	varchar(40)	null,
	order_ref	varchar(40)	null
,constraint dcspp_relationsh_p primary key (relationship_id));


create table dcspp_rel_orders (
	order_id	varchar(40)	not null,
	related_orders	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_rel_orders_p primary key (order_id,sequence_num)
,constraint dcspp_reordr_d_f foreign key (order_id) references dcspp_order (order_id));


create table dcspp_order_inst (
	order_id	varchar(40)	not null,
	tag	varchar(42)	not null,
	special_inst	nvarchar(254)	null
,constraint dcspp_order_inst_p primary key (order_id,tag)
,constraint dcspp_orordr_d_f foreign key (order_id) references dcspp_order (order_id));

create index order_inst_oid_idx on dcspp_order_inst (order_id);

create table dcspp_order_sg (
	order_id	varchar(40)	not null,
	shipping_groups	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_order_sg_p primary key (order_id,sequence_num)
,constraint dcspp_sgordr_d_f foreign key (order_id) references dcspp_order (order_id));

create index order_sg_ordid_idx on dcspp_order_sg (order_id);

create table dcspp_order_pg (
	order_id	varchar(40)	not null,
	payment_groups	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_order_pg_p primary key (order_id,sequence_num)
,constraint dcspp_orpgordr_f foreign key (order_id) references dcspp_order (order_id));

create index order_pg_ordid_idx on dcspp_order_pg (order_id);

create table dcspp_order_item (
	order_id	varchar(40)	not null,
	commerce_items	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_order_item_p primary key (order_id,sequence_num)
,constraint dcspp_oritordr_d_f foreign key (order_id) references dcspp_order (order_id));

create index order_item_oid_idx on dcspp_order_item (order_id);
create index order_item_cit_idx on dcspp_order_item (commerce_items);

create table dcspp_order_rel (
	order_id	varchar(40)	not null,
	relationships	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_order_rel_p primary key (order_id,sequence_num)
,constraint dcspp_orlordr_d_f foreign key (order_id) references dcspp_order (order_id));

create index order_rel_orid_idx on dcspp_order_rel (order_id);

create table dcspp_ship_inst (
	shipping_group_id	varchar(40)	not null,
	tag	varchar(42)	not null,
	special_inst	nvarchar(254)	null
,constraint dcspp_ship_inst_p primary key (shipping_group_id,tag)
,constraint dcspp_shshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));

create index ship_inst_sgid_idx on dcspp_ship_inst (shipping_group_id);

create table dcspp_hrd_ship_grp (
	shipping_group_id	varchar(40)	not null,
	tracking_number	varchar(40)	null
,constraint dcspp_hrd_ship_g_p primary key (shipping_group_id)
,constraint dcspp_hrshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));


create table dcspp_ele_ship_grp (
	shipping_group_id	varchar(40)	not null,
	email_address	varchar(255)	null
,constraint dcspp_ele_ship_g_p primary key (shipping_group_id)
,constraint dcspp_elshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));


create table dcspp_ship_addr (
	shipping_group_id	varchar(40)	not null,
	prefix	nvarchar(40)	null,
	first_name	nvarchar(40)	null,
	middle_name	nvarchar(40)	null,
	last_name	nvarchar(40)	null,
	suffix	nvarchar(40)	null,
	job_title	nvarchar(40)	null,
	company_name	nvarchar(40)	null,
	address_1	nvarchar(50)	null,
	address_2	nvarchar(50)	null,
	address_3	nvarchar(50)	null,
	city	nvarchar(40)	null,
	county	nvarchar(40)	null,
	state	nvarchar(40)	null,
	postal_code	nvarchar(10)	null,
	country	nvarchar(40)	null,
	phone_number	nvarchar(40)	null,
	fax_number	nvarchar(40)	null,
	email	nvarchar(255)	null
,constraint dcspp_ship_addr_p primary key (shipping_group_id)
,constraint dcspp_shdshippng_f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));


create table dcspp_hand_inst (
	handling_inst_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	hndinst_class_type	varchar(40)	null,
	handling_method	varchar(40)	null,
	shipping_group_id	varchar(40)	null,
	commerce_item_id	varchar(40)	null,
	quantity	integer	null
,constraint dcspp_hand_inst_p primary key (handling_inst_id));

create index hi_item_idx on dcspp_hand_inst (commerce_item_id);
create index hi_ship_group_idx on dcspp_hand_inst (shipping_group_id);

create table dcspp_gift_inst (
	handling_inst_id	varchar(40)	not null,
	giftlist_id	varchar(40)	null,
	giftlist_item_id	varchar(40)	null
,constraint dcspp_gift_inst_p primary key (handling_inst_id)
,constraint dcspp_gihandlng__f foreign key (handling_inst_id) references dcspp_hand_inst (handling_inst_id));


create table dcspp_sg_hand_inst (
	shipping_group_id	varchar(40)	not null,
	handling_instrs	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_sg_hand_in_p primary key (shipping_group_id,sequence_num)
,constraint dcspp_sgshippng__f foreign key (shipping_group_id) references dcspp_ship_group (shipping_group_id));

create index sg_hnd_ins_sgi_idx on dcspp_sg_hand_inst (shipping_group_id);

create table dcspp_pay_inst (
	payment_group_id	varchar(40)	not null,
	tag	varchar(42)	not null,
	special_inst	nvarchar(254)	null
,constraint dcspp_pay_inst_p primary key (payment_group_id,tag)
,constraint dcspp_papaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));

create index pay_inst_pgrid_idx on dcspp_pay_inst (payment_group_id);

create table dcspp_config_item (
	config_item_id	varchar(40)	not null,
	reconfig_data	varchar(255)	null,
	notes	varchar(255)	null
,constraint dcspp_config_ite_p primary key (config_item_id)
,constraint dcspp_coconfg_tm_f foreign key (config_item_id) references dcspp_item (commerce_item_id));


create table dcspp_subsku_item (
	subsku_item_id	varchar(40)	not null,
	ind_quantity	integer	null
,constraint dcspp_subsku_ite_p primary key (subsku_item_id)
,constraint dcspp_susubsk_tm_f foreign key (subsku_item_id) references dcspp_item (commerce_item_id));


create table dcspp_item_ci (
	commerce_item_id	varchar(40)	not null,
	commerce_items	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_item_ci_p primary key (commerce_item_id,sequence_num)
,constraint dcspp_itcommrc_t_f foreign key (commerce_item_id) references dcspp_item (commerce_item_id));


create table dcspp_gift_cert (
	payment_group_id	varchar(40)	not null,
	profile_id	varchar(40)	null,
	gift_cert_number	varchar(50)	null
,constraint dcspp_gift_cert_p primary key (payment_group_id)
,constraint dcspp_gipaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));

create index gc_number_idx on dcspp_gift_cert (gift_cert_number);
create index gc_profile_idx on dcspp_gift_cert (profile_id);

create table dcspp_store_cred (
	payment_group_id	varchar(40)	not null,
	profile_id	varchar(40)	null,
	store_cred_number	varchar(50)	null
,constraint dcspp_store_cred_p primary key (payment_group_id)
,constraint dcspp_stpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));

create index sc_number_idx on dcspp_store_cred (store_cred_number);
create index sc_profile_idx on dcspp_store_cred (profile_id);

create table dcspp_credit_card (
	payment_group_id	varchar(40)	not null,
	credit_card_number	varchar(40)	null,
	credit_card_type	varchar(40)	null,
	expiration_month	varchar(20)	null,
	exp_day_of_month	varchar(20)	null,
	expiration_year	varchar(20)	null
,constraint dcspp_credit_car_p primary key (payment_group_id)
,constraint dcspp_crpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));


create table dcspp_bill_addr (
	payment_group_id	varchar(40)	not null,
	prefix	nvarchar(40)	null,
	first_name	nvarchar(40)	null,
	middle_name	nvarchar(40)	null,
	last_name	nvarchar(40)	null,
	suffix	nvarchar(40)	null,
	job_title	nvarchar(40)	null,
	company_name	nvarchar(40)	null,
	address_1	nvarchar(50)	null,
	address_2	nvarchar(50)	null,
	address_3	nvarchar(50)	null,
	city	nvarchar(40)	null,
	county	nvarchar(40)	null,
	state	nvarchar(40)	null,
	postal_code	nvarchar(10)	null,
	country	nvarchar(40)	null,
	phone_number	nvarchar(40)	null,
	fax_number	nvarchar(40)	null,
	email	nvarchar(255)	null
,constraint dcspp_bill_addr_p primary key (payment_group_id)
,constraint dcspp_bipaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));


create table dcspp_pay_status (
	status_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	trans_id	varchar(50)	null,
	amount	numeric(19,7)	null,
	trans_success	tinyint	null,
	error_message	nvarchar(254)	null,
	trans_timestamp	datetime	null
,constraint dcspp_pay_status_p primary key (status_id)
,constraint dcspp_pay_status_c check (trans_success IN (0,1)));


create table dcspp_cc_status (
	status_id	varchar(40)	not null,
	auth_expiration	datetime	null,
	avs_code	varchar(40)	null,
	avs_desc_result	nvarchar(254)	null,
	integration_data	varchar(256)	null
,constraint dcspp_cc_status_p primary key (status_id)
,constraint dcspp_ccstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));


create table dcspp_gc_status (
	status_id	varchar(40)	not null,
	auth_expiration	datetime	null
,constraint dcspp_gc_status_p primary key (status_id)
,constraint dcspp_gcstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));


create table dcspp_sc_status (
	status_id	varchar(40)	not null,
	auth_expiration	datetime	null
,constraint dcspp_sc_status_p primary key (status_id)
,constraint dcspp_scstats_d_f foreign key (status_id) references dcspp_pay_status (status_id));


create table dcspp_auth_status (
	payment_group_id	varchar(40)	not null,
	auth_status	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_auth_statu_p primary key (payment_group_id,sequence_num)
,constraint dcspp_atpaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));

create index auth_stat_pgid_idx on dcspp_auth_status (payment_group_id);

create table dcspp_debit_status (
	payment_group_id	varchar(40)	not null,
	debit_status	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_debit_stat_p primary key (payment_group_id,sequence_num)
,constraint dcspp_depaymnt_g_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));

create index debit_stat_pgi_idx on dcspp_debit_status (payment_group_id);

create table dcspp_cred_status (
	payment_group_id	varchar(40)	not null,
	credit_status	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_cred_statu_p primary key (payment_group_id,sequence_num)
,constraint dcspp_crpaymntgr_f foreign key (payment_group_id) references dcspp_pay_group (payment_group_id));

create index cred_stat_pgid_idx on dcspp_cred_status (payment_group_id);

create table dcspp_shipitem_rel (
	relationship_id	varchar(40)	not null,
	shipping_group_id	varchar(40)	null,
	commerce_item_id	varchar(40)	null,
	quantity	integer	null,
	returned_qty	integer	null,
	amount	numeric(19,7)	null,
	state	varchar(40)	null,
	state_detail	nvarchar(254)	null
,constraint dcspp_shipitem_r_p primary key (relationship_id)
,constraint dcspp_shreltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));

create index sirel_item_idx on dcspp_shipitem_rel (commerce_item_id);
create index sirel_shipgrp_idx on dcspp_shipitem_rel (shipping_group_id);

create table dcspp_rel_range (
	relationship_id	varchar(40)	not null,
	low_bound	integer	null,
	high_bound	integer	null
,constraint dcspp_rel_range_p primary key (relationship_id));


create table dcspp_payitem_rel (
	relationship_id	varchar(40)	not null,
	payment_group_id	varchar(40)	null,
	commerce_item_id	varchar(40)	null,
	quantity	integer	null,
	amount	numeric(19,7)	null
,constraint dcspp_payitem_re_p primary key (relationship_id)
,constraint dcspp_pareltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));

create index pirel_item_idx on dcspp_payitem_rel (commerce_item_id);
create index pirel_paygrp_idx on dcspp_payitem_rel (payment_group_id);

create table dcspp_payship_rel (
	relationship_id	varchar(40)	not null,
	payment_group_id	varchar(40)	null,
	shipping_group_id	varchar(40)	null,
	amount	numeric(19,7)	null
,constraint dcspp_payship_re_p primary key (relationship_id)
,constraint dcspp_pshrltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));

create index psrel_paygrp_idx on dcspp_payship_rel (payment_group_id);
create index psrel_shipgrp_idx on dcspp_payship_rel (shipping_group_id);

create table dcspp_payorder_rel (
	relationship_id	varchar(40)	not null,
	payment_group_id	varchar(40)	null,
	order_id	varchar(40)	null,
	amount	numeric(19,7)	null
,constraint dcspp_payorder_r_p primary key (relationship_id)
,constraint dcspp_odreltnshp_f foreign key (relationship_id) references dcspp_relationship (relationship_id));

create index porel_order_idx on dcspp_payorder_rel (order_id);
create index porel_paygrp_idx on dcspp_payorder_rel (payment_group_id);

create table dcspp_amount_info (
	amount_info_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	currency_code	varchar(10)	null,
	amount	numeric(19,7)	null,
	discounted	tinyint	null,
	amount_is_final	tinyint	null,
	final_rc	integer	null
,constraint dcspp_amount_inf_p primary key (amount_info_id)
,constraint dcspp_amount_in1_c check (discounted IN (0,1))
,constraint dcspp_amount_in2_c check (amount_is_final IN (0,1)));


create table dcspp_order_price (
	amount_info_id	varchar(40)	not null,
	raw_subtotal	numeric(19,7)	null,
	tax	numeric(19,7)	null,
	shipping	numeric(19,7)	null,
	manual_adj_total	numeric(19,7)	null
,constraint dcspp_order_pric_p primary key (amount_info_id)
,constraint dcspp_oramnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));


create table dcspp_item_price (
	amount_info_id	varchar(40)	not null,
	list_price	numeric(19,7)	null,
	raw_total_price	numeric(19,7)	null,
	sale_price	numeric(19,7)	null,
	on_sale	tinyint	null,
	order_discount	numeric(19,7)	null,
	qty_discounted	integer	null,
	qty_as_qualifier	integer	null,
	price_list	varchar(40)	null
,constraint dcspp_item_price_p primary key (amount_info_id)
,constraint dcspp_itamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id)
,constraint dcspp_item_price_c check (on_sale IN (0,1)));


create table dcspp_tax_price (
	amount_info_id	varchar(40)	not null,
	city_tax	numeric(19,7)	null,
	county_tax	numeric(19,7)	null,
	state_tax	numeric(19,7)	null,
	country_tax	numeric(19,7)	null
,constraint dcspp_tax_price_p primary key (amount_info_id)
,constraint dcspp_taamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));


create table dcspp_ship_price (
	amount_info_id	varchar(40)	not null,
	raw_shipping	numeric(19,7)	null
,constraint dcspp_ship_price_p primary key (amount_info_id)
,constraint dcspp_shamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));


create table dcspp_amtinfo_adj (
	amount_info_id	varchar(40)	not null,
	adjustments	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_amtinfo_ad_p primary key (amount_info_id,sequence_num)
,constraint dcspp_amamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));

create index amtinf_adj_aid_idx on dcspp_amtinfo_adj (amount_info_id);
create index amtinf_adj_adj_idx on dcspp_amtinfo_adj (adjustments);

create table dcspp_price_adjust (
	adjustment_id	varchar(40)	not null,
	version	integer	not null,
	adj_description	varchar(254)	null,
	pricing_model	varchar(40)	null,
	manual_adjustment	varchar(40)	null,
	adjustment	numeric(19,7)	null,
	qty_adjusted	integer	null
,constraint dcspp_price_adju_p primary key (adjustment_id));


create table dcspp_shipitem_sub (
	amount_info_id	varchar(40)	not null,
	shipping_group_id	varchar(42)	not null,
	ship_item_subtotal	varchar(40)	not null
,constraint dcspp_shipitem_s_p primary key (amount_info_id,shipping_group_id)
,constraint dcspp_sbamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));

create index ship_item_sub_idx on dcspp_shipitem_sub (amount_info_id);

create table dcspp_taxshipitem (
	amount_info_id	varchar(40)	not null,
	shipping_group_id	varchar(42)	not null,
	tax_ship_item_sub	varchar(40)	not null
,constraint dcspp_taxshipite_p primary key (amount_info_id,shipping_group_id)
,constraint dcspp_shamntxnfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));

create index tax_ship_item_idx on dcspp_taxshipitem (amount_info_id);

create table dcspp_ntaxshipitem (
	amount_info_id	varchar(40)	not null,
	shipping_group_id	varchar(42)	not null,
	non_tax_item_sub	varchar(40)	not null
,constraint dcspp_ntaxshipit_p primary key (amount_info_id,shipping_group_id)
,constraint dcspp_ntamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));

create index ntax_ship_item_idx on dcspp_ntaxshipitem (amount_info_id);

create table dcspp_shipitem_tax (
	amount_info_id	varchar(40)	not null,
	shipping_group_id	varchar(42)	not null,
	ship_item_tax	varchar(40)	not null
,constraint dcspp_shipitem_t_p primary key (amount_info_id,shipping_group_id)
,constraint dcspp_txamnt_nfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));

create index ship_item_tax_idx on dcspp_shipitem_tax (amount_info_id);

create table dcspp_itmprice_det (
	amount_info_id	varchar(40)	not null,
	cur_price_details	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_itmprice_d_p primary key (amount_info_id,sequence_num)
,constraint dcspp_sbamntnfd_f foreign key (amount_info_id) references dcspp_amount_info (amount_info_id));

create index itmprc_det_aii_idx on dcspp_itmprice_det (amount_info_id);

create table dcspp_det_price (
	amount_info_id	varchar(40)	not null,
	tax	numeric(19,7)	null,
	order_discount	numeric(19,7)	null,
	order_manual_adj	numeric(19,7)	null,
	quantity	integer	null,
	qty_as_qualifier	integer	null
,constraint dcspp_det_price_p primary key (amount_info_id));


create table dcspp_det_range (
	amount_info_id	varchar(40)	not null,
	low_bound	integer	null,
	high_bound	integer	null
,constraint dcspp_det_range_p primary key (amount_info_id));


create table dcspp_order_adj (
	order_id	varchar(40)	not null,
	adjustment_id	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcspp_order_adj_p primary key (order_id,sequence_num)
,constraint dcspp_oradj_d_f foreign key (order_id) references dcspp_order (order_id));

create index order_adj_orid_idx on dcspp_order_adj (order_id);

create table dcspp_manual_adj (
	manual_adjust_id	varchar(40)	not null,
	type	integer	not null,
	adjustment_type	integer	not null,
	reason	integer	not null,
	amount	numeric(19,7)	null,
	notes	varchar(255)	null,
	version	integer	not null
,constraint dcspp_manual_adj_p primary key (manual_adjust_id));


create table dbcpp_sched_order (
	scheduled_order_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	name	nvarchar(32)	null,
	profile_id	varchar(40)	null,
	create_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	template_order	varchar(32)	null,
	state	integer	null,
	next_scheduled	datetime	null,
	schedule	varchar(255)	null,
	site_id	varchar(40)	null
,constraint dbcpp_sched_orde_p primary key (scheduled_order_id));

create index sched_tmplt_idx on dbcpp_sched_order (template_order);
create index sched_profile_idx on dbcpp_sched_order (profile_id);
create index sched_site_idx on dbcpp_sched_order (site_id);

create table dbcpp_sched_clone (
	scheduled_order_id	varchar(40)	not null,
	cloned_order	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dbcpp_sched_clon_p primary key (scheduled_order_id,sequence_num)
,constraint dbcpp_scschedld__f foreign key (scheduled_order_id) references dbcpp_sched_order (scheduled_order_id));


create table dcspp_scherr_aux (
	scheduled_order_id	varchar(40)	not null,
	sched_error_id	varchar(40)	not null
,constraint dcspp_scherr_aux_p primary key (scheduled_order_id));

create index sched_error_idx on dcspp_scherr_aux (sched_error_id);

create table dcspp_sched_error (
	sched_error_id	varchar(40)	not null,
	error_date	datetime	not null
,constraint dcspp_sched_err_p primary key (sched_error_id));


create table dcspp_schd_errmsg (
	sched_error_id	varchar(40)	not null,
	error_txt	varchar(254)	not null,
	sequence_num	integer	not null
,constraint dcspp_schd_errs_p primary key (sched_error_id,sequence_num)
,constraint dcspp_sch_errs_f foreign key (sched_error_id) references dcspp_sched_error (sched_error_id));

commit;




-- Collected from DCS/sql/db_components/mysql/user_giftlist_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/user_giftlist_ddl.xml#2 $$Change: 635969 $

create table dcs_giftlist (
	id	varchar(40)	not null,
	owner_id	varchar(40)	null,
	site_id	varchar(40)	null,
	is_public	tinyint	not null,
	is_published	tinyint	not null,
	event_name	nvarchar(64)	null,
	event_type	integer	null,
	event_date	datetime	null,
	comments	nvarchar(254)	null,
	description	nvarchar(254)	null,
	instructions	nvarchar(254)	null,
	creation_date	datetime	null,
	last_modified_date	datetime	null,
	shipping_addr_id	varchar(40)	null
,constraint dcs_giftlist_p primary key (id)
,constraint dcs_giftlist1_c check (is_public in (0,1))
,constraint dcs_giftlist2_c check (is_published in (0,1)));

create index gftlst_shpadid_idx on dcs_giftlist (shipping_addr_id);
create index gft_evnt_name_idx on dcs_giftlist (event_name);
create index gft_evnt_type_idx on dcs_giftlist (event_type);
create index gft_owner_id_idx on dcs_giftlist (owner_id);
create index gft_site_id_idx on dcs_giftlist (site_id);

create table dcs_giftinst (
	giftlist_id	varchar(40)	not null,
	tag	varchar(42)	not null,
	special_inst	varchar(254)	null
,constraint dcs_giftinst_p primary key (giftlist_id,tag)
,constraint dcs_giftgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));

create index giftinst_gflid_idx on dcs_giftinst (giftlist_id);

create table dcs_giftitem (
	id	varchar(40)	not null,
	catalog_ref_id	varchar(40)	null,
	product_id	varchar(40)	null,
	site_id	varchar(40)	null,
	display_name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	quantity_desired	integer	null,
	quantity_purchased	integer	null
,constraint dcs_giftitem_p primary key (id));

create index giftitem_cat_idx on dcs_giftitem (catalog_ref_id);
create index giftitem_prod_idx on dcs_giftitem (product_id);
create index giftitem_site_idx on dcs_giftitem (site_id);

create table dcs_giftlist_item (
	giftlist_id	varchar(40)	not null,
	sequence_num	integer	not null,
	giftitem_id	varchar(40)	null
,constraint dcs_giftlist_ite_p primary key (giftlist_id,sequence_num)
,constraint dcs_giftgifttm_d_f foreign key (giftitem_id) references dcs_giftitem (id)
,constraint dcs_gftlstgftlst_f foreign key (giftlist_id) references dcs_giftlist (id));

create index gftlst_itm_gii_idx on dcs_giftlist_item (giftitem_id);
create index gftlst_itm_gli_idx on dcs_giftlist_item (giftlist_id);

create table dcs_user_wishlist (
	user_id	varchar(40)	not null,
	giftlist_id	varchar(40)	null
,constraint dcs_user_wishlis_p primary key (user_id)
,constraint dcs_usrwgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));

create index usr_wshlst_gli_idx on dcs_user_wishlist (giftlist_id);

create table dcs_user_giftlist (
	user_id	varchar(40)	not null,
	sequence_num	integer	not null,
	giftlist_id	varchar(40)	null
,constraint dcs_user_giftlis_p primary key (user_id,sequence_num));

create index usr_gftlst_uid_idx on dcs_user_giftlist (user_id);

create table dcs_user_otherlist (
	user_id	varchar(40)	not null,
	sequence_num	integer	not null,
	giftlist_id	varchar(40)	null
,constraint dcs_user_otherli_p primary key (user_id,sequence_num)
,constraint dcs_usrtgiftlst__f foreign key (giftlist_id) references dcs_giftlist (id));

create index usr_otrlst_gli_idx on dcs_user_otherlist (giftlist_id);
commit;




-- Collected from DCS/sql/db_components/mysql/dcs_mappers.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/dcs_mappers.xml#2 $$Change: 635969 $

create table dcs_cart_event (
	id	varchar(40)	not null,
	timestamp	datetime	null,
	orderid	varchar(40)	null,
	itemid	varchar(40)	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	quantity	integer	null,
	amount	numeric(19,7)	null,
	profileid	varchar(40)	null);


create table dcs_submt_ord_evt (
	id	varchar(40)	not null,
	clocktime	datetime	null,
	orderid	varchar(40)	null,
	profileid	varchar(40)	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null);


create table dcs_prom_used_evt (
	id	varchar(40)	not null,
	clocktime	datetime	null,
	orderid	varchar(40)	null,
	profileid	varchar(40)	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	promotionid	varchar(40)	null,
	order_amount	numeric(26,7)	null,
	discount	numeric(26,7)	null);


create table dcs_ord_merge_evt (
	id	varchar(40)	not null,
	clocktime	datetime	null,
	sourceorderid	varchar(40)	null,
	destorderid	varchar(40)	null,
	profileid	varchar(40)	null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null,
	sourceremoved	tinyint	null
,constraint dcs_ordmergeevt_ck check (sourceremoved in (0,1)));


create table dcs_promo_rvkd (
	id	varchar(40)	not null,
	time_stamp	datetime	null,
	promotionid	varchar(254)	not null,
	profileid	varchar(254)	not null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null);


create table dcs_promo_grntd (
	id	varchar(40)	not null,
	time_stamp	datetime	null,
	promotionid	varchar(254)	not null,
	profileid	varchar(254)	not null,
	sessionid	varchar(100)	null,
	parentsessionid	varchar(100)	null);

commit;




-- Collected from DCS/sql/db_components/mysql/order_markers_ddl.sql


--  @version $ $

create table dcs_order_markers (
	marker_id	varchar(40)	not null,
	order_id	varchar(40)	not null,
	marker_key	varchar(100)	not null,
	marker_value	varchar(100)	null,
	marker_data	varchar(100)	null,
	creation_date	datetime	null,
	version	integer	not null,
	marker_type	integer	null
,constraint dcsordermarkers_p primary key (marker_id,order_id)
,constraint dcsordermarkers_f foreign key (order_id) references dcspp_order (order_id));

create index dcs_ordrmarkers1_x on dcs_order_markers (order_id);

create table dcspp_commerce_item_markers (
	marker_id	varchar(40)	not null,
	commerce_item_id	varchar(40)	not null,
	marker_key	varchar(100)	not null,
	marker_value	varchar(100)	null,
	marker_data	varchar(100)	null,
	creation_date	datetime	null,
	version	integer	not null,
	marker_type	integer	null
,constraint dcscitemmarkers_p primary key (marker_id,commerce_item_id)
,constraint dcscitemmarkers_f foreign key (commerce_item_id) references dcspp_item (commerce_item_id));

create index dcs_itemmarkers1_x on dcspp_commerce_item_markers (commerce_item_id);
commit;




-- Collected from DCS/Versioned/sql/db_components/mysql/versioned_claimable_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/claimable_ddl.xml#2 $$Change: 635969 $

create table dcspp_claimable (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	claimable_id	varchar(40)	not null,
	version	integer	not null,
	type	integer	not null,
	status	integer	null,
	expiration_date	datetime	null,
	last_modified	datetime	null
,constraint dcspp_claimable_p primary key (claimable_id,asset_version));

create index dcspp_claimabl_wsx on dcspp_claimable (workspace_id);
create index dcspp_claimabl_cix on dcspp_claimable (checkin_date);

create table dcspp_giftcert (
	asset_version	bigint	not null,
	giftcertificate_id	varchar(40)	not null,
	amount	numeric(19,7)	not null,
	amount_authorized	numeric(19,7)	not null,
	amount_remaining	numeric(19,7)	not null,
	purchaser_id	varchar(40)	null,
	purchase_date	datetime	null,
	last_used	datetime	null
,constraint dcspp_giftcert_p primary key (giftcertificate_id,asset_version));

create index claimable_user_idx on dcspp_giftcert (purchaser_id);

create table dcs_storecred_clm (
	asset_version	bigint	not null,
	store_credit_id	varchar(40)	not null,
	amount	numeric(19,7)	not null,
	amount_authorized	numeric(19,7)	not null,
	amount_remaining	numeric(19,7)	not null,
	owner_id	varchar(40)	null,
	issue_date	datetime	null,
	expiration_date	datetime	null,
	last_used	datetime	null
,constraint dcs_storecred_cl_p primary key (store_credit_id,asset_version));

create index storecr_issue_idx on dcs_storecred_clm (issue_date);
create index storecr_owner_idx on dcs_storecred_clm (owner_id);

create table dcspp_cp_folder (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	name	varchar(254)	not null,
	parent_folder	varchar(40)	null
,constraint dcspp_cp_folder_p primary key (folder_id,asset_version));

create index dcspp_cp_folde_wsx on dcspp_cp_folder (workspace_id);
create index dcspp_cp_folde_cix on dcspp_cp_folder (checkin_date);

create table dcspp_coupon (
	asset_version	bigint	not null,
	coupon_id	varchar(40)	not null,
	promotion_id	varchar(40)	not null
,constraint dcspp_coupon_p primary key (coupon_id,promotion_id,asset_version));


create table dcspp_coupon_info (
	asset_version	bigint	not null,
	coupon_id	varchar(40)	not null,
	display_name	varchar(254)	null,
	use_promo_site	integer	null,
	parent_folder	varchar(40)	null
,constraint dcspp_copninfo_p primary key (coupon_id,asset_version));

commit;




-- Collected from DCS/Versioned/sql/db_components/mysql/versioned_commerce_site_ddl.sql


-- This file contains create table statements, which will configureyour database for use MultiSite

create table dcs_site (
	asset_version	bigint	not null,
	id	varchar(40)	not null,
	catalog_id	varchar(40)	null,
	list_pricelist_id	varchar(40)	null,
	sale_pricelist_id	varchar(40)	null
,constraint dcs_site_p primary key (id,asset_version));

commit;




-- Collected from DCS/Versioned/sql/db_components/mysql/versioned_priceLists_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/priceLists_ddl.xml#2 $$Change: 635969 $

create table dcs_price_list (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	price_list_id	varchar(40)	not null,
	version	integer	not null,
	display_name	varchar(254)	null,
	description	varchar(254)	null,
	creation_date	datetime	null,
	last_mod_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	locale	integer	null,
	base_price_list	varchar(40)	null,
	item_acl	longtext	null
,constraint dcs_price_list_p primary key (price_list_id,asset_version));

create index dcs_price_list_wsx on dcs_price_list (workspace_id);
create index dcs_price_list_cix on dcs_price_list (checkin_date);

create table dcs_complex_price (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	complex_price_id	varchar(40)	not null,
	version	integer	not null
,constraint dcs_complex_pric_p primary key (complex_price_id,asset_version));

create index dcs_complex_pr_wsx on dcs_complex_price (workspace_id);
create index dcs_complex_pr_cix on dcs_complex_price (checkin_date);

create table dcs_price (
	sec_asset_version	bigint	null,
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	price_id	varchar(40)	not null,
	version	integer	not null,
	price_list	varchar(40)	not null,
	product_id	varchar(40)	null,
	sku_id	varchar(40)	null,
	parent_sku_id	varchar(40)	null,
	pricing_scheme	integer	not null,
	list_price	numeric(19,7)	null,
	complex_price	varchar(40)	null
,constraint dcs_price_p primary key (price_id,asset_version));

create index dcs_price_idx1 on dcs_price (product_id);
create index dcs_price_idx2 on dcs_price (price_list,sku_id);
create index dcs_price_wsx on dcs_price (workspace_id);
create index dcs_price_cix on dcs_price (checkin_date);

create table dcs_price_levels (
	asset_version	bigint	not null,
	complex_price_id	varchar(40)	not null,
	price_levels	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcs_price_levels_p primary key (complex_price_id,sequence_num,asset_version));


create table dcs_price_level (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	price_level_id	varchar(40)	not null,
	version	integer	not null,
	quantity	integer	not null,
	price	numeric(19,7)	not null
,constraint dcs_price_level_p primary key (price_level_id,asset_version));

create index dcs_price_leve_wsx on dcs_price_level (workspace_id);
create index dcs_price_leve_cix on dcs_price_level (checkin_date);

create table dcs_gen_fol_pl (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	type	integer	not null,
	name	varchar(40)	not null,
	parent	varchar(40)	null,
	description	varchar(254)	null,
	item_acl	longtext	null
,constraint dcs_gen_fol_pl_p primary key (folder_id,asset_version));

create index dcs_gen_fol_pl_wsx on dcs_gen_fol_pl (workspace_id);
create index dcs_gen_fol_pl_cix on dcs_gen_fol_pl (checkin_date);

create table dcs_child_fol_pl (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	folder_id	varchar(40)	not null,
	sequence_num	integer	not null,
	child_folder_id	varchar(40)	not null
,constraint dcs_child_fol_pl_p primary key (folder_id,sequence_num,asset_version,sec_asset_version));


create table dcs_plfol_chld (
	asset_version	bigint	not null,
	plfol_id	varchar(40)	not null,
	sequence_num	integer	not null,
	price_list_id	varchar(40)	not null
,constraint dcs_plfol_chld_p primary key (plfol_id,sequence_num,asset_version));

commit;




-- Collected from DCS/Versioned/sql/db_components/mysql/versioned_product_catalog_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/product_catalog_ddl.xml#2 $$Change: 635969 $

create table dcs_folder (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	description	nvarchar(254)	null,
	name	nvarchar(254)	not null,
	path	nvarchar(254)	not null,
	parent_folder_id	varchar(40)	null
,constraint dcs_folder_p primary key (folder_id,asset_version));

create index fldr_end_dte_idx on dcs_folder (end_date);
create index fldr_path_idx on dcs_folder (path);
create index fldr_strt_dte_idx on dcs_folder (start_date);
create index dcs_folder_wsx on dcs_folder (workspace_id);
create index dcs_folder_cix on dcs_folder (checkin_date);

create table dcs_media (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	media_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	description	nvarchar(254)	null,
	name	nvarchar(254)	not null,
	path	nvarchar(254)	not null,
	parent_folder_id	varchar(40)	not null,
	media_type	integer	null
,constraint dcs_media_p primary key (media_id,asset_version));

create index med_end_dte_idx on dcs_media (end_date);
create index med_path_idx on dcs_media (path);
create index med_strt_dte_idx on dcs_media (start_date);
create index med_type_idx on dcs_media (media_type);
create index dcs_media_wsx on dcs_media (workspace_id);
create index dcs_media_cix on dcs_media (checkin_date);

create table dcs_media_ext (
	asset_version	bigint	not null,
	media_id	varchar(40)	not null,
	url	varchar(254)	not null
,constraint dcs_media_ext_p primary key (media_id,asset_version));


create table dcs_media_bin (
	asset_version	bigint	not null,
	media_id	varchar(40)	not null,
	length	integer	not null,
	last_modified	datetime	not null,
	data	longblob	not null
,constraint dcs_media_bin_p primary key (media_id,asset_version));


create table dcs_media_txt (
	asset_version	bigint	not null,
	media_id	varchar(40)	not null,
	length	integer	not null,
	last_modified	datetime	not null,
	data	longtext 	not null
,constraint dcs_media_txt_p primary key (media_id,asset_version));


create table dcs_category (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	category_id	varchar(40)	not null,
	version	integer	not null,
	catalog_id	varchar(40)	null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	display_name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	long_description	longtext 	null,
	parent_cat_id	varchar(40)	null,
	category_type	integer	null,
	root_category	tinyint	null
,constraint dcs_category_p primary key (category_id,asset_version)
,constraint dcs_category_c check (root_category in (0,1)));

create index cat_end_dte_idx on dcs_category (end_date);
create index cat_pcatid_idx on dcs_category (parent_cat_id);
create index cat_strt_dte_idx on dcs_category (start_date);
create index cat_type_idx on dcs_category (category_type);
create index dcs_category_wsx on dcs_category (workspace_id);
create index dcs_category_cix on dcs_category (checkin_date);

create table dcs_category_acl (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	item_acl	longtext	null
,constraint dcs_category_acl_p primary key (category_id,asset_version));


create table dcs_product (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	product_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	display_name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	long_description	longtext 	null,
	parent_cat_id	varchar(40)	null,
	product_type	integer	null,
	admin_display	varchar(254)	null,
	nonreturnable	tinyint	null,
	brand	varchar(254)	null,
	disallow_recommend	tinyint	null
,constraint dcs_product_p primary key (product_id,asset_version)
,constraint dcs_product_c check (nonreturnable in (0,1))
,constraint dcs_product1_c check (disallow_recommend in (0,1)));

create index prd_end_dte_idx on dcs_product (end_date);
create index prd_pcatid_idx on dcs_product (parent_cat_id);
create index prd_strt_dte_idx on dcs_product (start_date);
create index prd_type_idx on dcs_product (product_type);
create index dcs_product_wsx on dcs_product (workspace_id);
create index dcs_product_cix on dcs_product (checkin_date);

create table dcs_product_acl (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	item_acl	longtext	null
,constraint dcs_product_acl_p primary key (product_id,asset_version));


create table dcs_sku (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	sku_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	display_name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	sku_type	integer	null,
	wholesale_price	numeric(19,7)	null,
	list_price	numeric(19,7)	null,
	sale_price	numeric(19,7)	null,
	on_sale	tinyint	null,
	tax_status	integer	null,
	fulfiller	integer	null,
	item_acl	longtext	null,
	nonreturnable	tinyint	null
,constraint dcs_sku_p primary key (sku_id,asset_version)
,constraint dcs_sku_c check (on_sale in (0,1))
,constraint dcs_sku1_c check (nonreturnable in (0,1)));

create index sku_end_dte_idx on dcs_sku (end_date);
create index sku_lstprice_idx on dcs_sku (list_price);
create index sku_sleprice_idx on dcs_sku (sale_price);
create index sku_strt_dte_idx on dcs_sku (start_date);
create index sku_type_idx on dcs_sku (sku_type);
create index dcs_sku_wsx on dcs_sku (workspace_id);
create index dcs_sku_cix on dcs_sku (checkin_date);

create table dcs_cat_groups (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	child_prd_group	varchar(254)	null,
	child_cat_group	varchar(254)	null,
	related_cat_group	varchar(254)	null
,constraint dcs_cat_groups_p primary key (category_id,asset_version));


create table dcs_cat_chldprd (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	child_prd_id	varchar(40)	not null
,constraint dcs_cat_chldprd_p primary key (category_id,sequence_num,asset_version,sec_asset_version));

create index ct_chldprd_cpi_idx on dcs_cat_chldprd (child_prd_id);
create index ct_chldprd_cid_idx on dcs_cat_chldprd (category_id);

create table dcs_cat_chldcat (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	child_cat_id	varchar(40)	not null
,constraint dcs_cat_chldcat_p primary key (category_id,sequence_num,asset_version,sec_asset_version));

create index ct_chldcat_cci_idx on dcs_cat_chldcat (child_cat_id);
create index ct_chldcat_cid_idx on dcs_cat_chldcat (category_id);

create table dcs_cat_ancestors (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	anc_cat_id	varchar(40)	not null
,constraint dcs_cat_ancestor_p primary key (category_id,anc_cat_id,asset_version));

create index dcs_ct_anc_cat_id on dcs_cat_ancestors (anc_cat_id);
create index dcs_ct_cat_id on dcs_cat_ancestors (category_id);

create table dcs_cat_rltdcat (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	related_cat_id	varchar(40)	not null
,constraint dcs_cat_rltdcat_p primary key (category_id,sequence_num,asset_version));

create index ct_rltdcat_cid_idx on dcs_cat_rltdcat (category_id);

create table dcs_cat_keywrds (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	keyword	nvarchar(254)	not null
,constraint dcs_cat_keywrds_p primary key (category_id,sequence_num,asset_version));

create index cat_keywrds_idx on dcs_cat_keywrds (keyword);
create index ct_keywrds_cid_idx on dcs_cat_keywrds (category_id);

create table dcs_cat_media (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	template_id	varchar(40)	null,
	thumbnail_image_id	varchar(40)	null,
	small_image_id	varchar(40)	null,
	large_image_id	varchar(40)	null
,constraint dcs_cat_media_p primary key (category_id,asset_version));


create table dcs_cat_aux_media (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	media_id	varchar(40)	not null
,constraint dcs_cat_aux_medi_p primary key (category_id,tag,asset_version));

create index ct_aux_mdia_ci_idx on dcs_cat_aux_media (category_id);

create table dcs_prd_keywrds (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null,
	keyword	nvarchar(254)	not null
,constraint dcs_prd_keywrds_p primary key (product_id,sequence_num,asset_version));

create index prd_keywrds_idx on dcs_prd_keywrds (keyword);
create index pr_keywrds_pid_idx on dcs_prd_keywrds (product_id);

create table dcs_prd_media (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	template_id	varchar(40)	null,
	thumbnail_image_id	varchar(40)	null,
	small_image_id	varchar(40)	null,
	large_image_id	varchar(40)	null
,constraint dcs_prd_media_p primary key (product_id,asset_version));


create table dcs_prd_aux_media (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	media_id	varchar(40)	not null
,constraint dcs_prd_aux_medi_p primary key (product_id,tag,asset_version));

create index pr_aux_mdia_pi_idx on dcs_prd_aux_media (product_id);

create table dcs_prd_chldsku (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null,
	sku_id	varchar(40)	not null
,constraint dcs_prd_chldsku_p primary key (product_id,sequence_num,asset_version,sec_asset_version));

create index pr_chldsku_sid_idx on dcs_prd_chldsku (sku_id);
create index pr_chldsku_pid_idx on dcs_prd_chldsku (product_id);

create table dcs_prd_skuattr (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null,
	attribute_name	nvarchar(40)	not null
,constraint dcs_prd_skuattr_p primary key (product_id,sequence_num,asset_version));

create index pr_skuattr_pid_idx on dcs_prd_skuattr (product_id);

create table dcs_prd_groups (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	related_prd_group	varchar(254)	null,
	upsl_prd_group	varchar(254)	null
,constraint dcs_prd_groups_p primary key (product_id,asset_version));


create table dcs_prd_rltdprd (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null,
	related_prd_id	varchar(40)	not null
,constraint dcs_prd_rltdprd_p primary key (product_id,sequence_num,asset_version));

create index pr_rltdprd_pid_idx on dcs_prd_rltdprd (product_id);

create table dcs_prd_upslprd (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null,
	upsell_prd_id	varchar(40)	not null
,constraint dcs_prd_upslprd_p primary key (product_id,sequence_num,asset_version));


create table dcs_prd_ancestors (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	anc_cat_id	varchar(40)	not null
,constraint dcs_prd_ancestor_p primary key (product_id,anc_cat_id,asset_version));

create index dcs_prd_anc_cat_id on dcs_prd_ancestors (anc_cat_id);
create index dcs_prd_prd_id on dcs_prd_ancestors (product_id);

create table dcs_sku_attr (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	attribute_name	nvarchar(42)	not null,
	attribute_value	varchar(254)	not null
,constraint dcs_sku_attr_p primary key (sku_id,attribute_name,asset_version));

create index sku_attr_skuid_idx on dcs_sku_attr (sku_id);

create table dcs_sku_link (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	sku_link_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	display_name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	quantity	integer	not null,
	bundle_item	varchar(40)	not null,
	item_acl	longtext	null
,constraint dcs_sku_link_p primary key (sku_link_id,asset_version));

create index skl_end_dte_idx on dcs_sku_link (end_date);
create index skl_strt_dte_idx on dcs_sku_link (start_date);
create index dcs_sku_link_wsx on dcs_sku_link (workspace_id);
create index dcs_sku_link_cix on dcs_sku_link (checkin_date);

create table dcs_sku_bndllnk (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	sequence_num	integer	not null,
	sku_link_id	varchar(40)	not null
,constraint dcs_sku_bndllnk_p primary key (sku_id,sequence_num,asset_version));

create index sk_bndllnk_sid_idx on dcs_sku_bndllnk (sku_id);

create table dcs_sku_media (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	template_id	varchar(40)	null,
	thumbnail_image_id	varchar(40)	null,
	small_image_id	varchar(40)	null,
	large_image_id	varchar(40)	null
,constraint dcs_sku_media_p primary key (sku_id,asset_version));


create table dcs_sku_aux_media (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	media_id	varchar(40)	not null
,constraint dcs_sku_aux_medi_p primary key (sku_id,tag,asset_version));

create index sk_aux_mdia_si_idx on dcs_sku_aux_media (sku_id);

create table dcs_sku_replace (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	sequence_num	integer	not null,
	replacement	varchar(40)	not null
,constraint dcs_sku_replace_p primary key (sku_id,sequence_num,asset_version));

create index sk_replace_sid_idx on dcs_sku_replace (sku_id);

create table dcs_sku_conf (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	config_props	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcs_sku_conf_p primary key (sku_id,sequence_num,asset_version));


create table dcs_config_prop (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	config_prop_id	varchar(40)	not null,
	version	integer	not null,
	display_name	nvarchar(40)	null,
	description	nvarchar(255)	null,
	item_acl	longtext	null
,constraint dcs_config_prop_p primary key (config_prop_id,asset_version));

create index dcs_config_pro_wsx on dcs_config_prop (workspace_id);
create index dcs_config_pro_cix on dcs_config_prop (checkin_date);

create table dcs_conf_options (
	asset_version	bigint	not null,
	config_prop_id	varchar(40)	not null,
	config_options	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcs_conf_options_p primary key (config_prop_id,sequence_num,asset_version));


create table dcs_config_opt (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	config_opt_id	varchar(40)	not null,
	version	integer	not null,
	display_name	nvarchar(40)	null,
	description	nvarchar(255)	null,
	sku	varchar(40)	null,
	product	varchar(40)	null,
	price	numeric(19,7)	null,
	item_acl	longtext	null
,constraint dcs_config_opt_p primary key (config_opt_id,asset_version));

create index ct_conf_prod_idx on dcs_config_opt (product);
create index ct_conf_sku_idx on dcs_config_opt (sku);
create index dcs_config_opt_wsx on dcs_config_opt (workspace_id);
create index dcs_config_opt_cix on dcs_config_opt (checkin_date);

create table dcs_foreign_cat (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	catalog_id	varchar(40)	not null,
	type	integer	not null,
	version	integer	not null,
	name	nvarchar(100)	null,
	description	nvarchar(255)	null,
	host	varchar(100)	null,
	port	integer	null,
	base_url	varchar(255)	null,
	return_url	varchar(255)	null,
	item_acl	longtext	null
,constraint dcs_foreign_cat_p primary key (catalog_id,asset_version));

create index dcs_foreign_ca_wsx on dcs_foreign_cat (workspace_id);
create index dcs_foreign_ca_cix on dcs_foreign_cat (checkin_date);
commit;




-- Collected from DCS/Versioned/sql/db_components/mysql/versioned_custom_catalog_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/custom_catalog_ddl.xml#1 $$Change: 633540 $

create table dcs_catalog (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	catalog_id	varchar(40)	not null,
	version	integer	not null,
	display_name	varchar(254)	null,
	creation_date	datetime	null,
	last_mod_date	datetime	null,
	migration_status	integer	null,
	migration_index	integer	null,
	item_acl	longtext	null
,constraint dcs_catalog_p primary key (catalog_id,asset_version));

create index dcs_catalog_wsx on dcs_catalog (workspace_id);
create index dcs_catalog_cix on dcs_catalog (checkin_date);

create table dcs_root_cats (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	root_cat_id	varchar(40)	not null
,constraint dcs_root_cats_p primary key (catalog_id,root_cat_id,asset_version,sec_asset_version));

create index dcs_rootcatscat_id on dcs_root_cats (root_cat_id);

create table dcs_allroot_cats (
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	root_cat_id	varchar(40)	not null
,constraint dcs_allroot_cats_p primary key (catalog_id,root_cat_id,asset_version));


create table dcs_root_subcats (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	sub_catalog_id	varchar(40)	not null
,constraint dcs_root_subcats_p primary key (catalog_id,sub_catalog_id,asset_version,sec_asset_version));


create table dcs_category_info (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	category_info_id	varchar(40)	not null,
	version	integer	not null,
	item_acl	longtext	null
,constraint dcs_category_inf_p primary key (category_info_id,asset_version));

create index dcs_category_i_wsx on dcs_category_info (workspace_id);
create index dcs_category_i_cix on dcs_category_info (checkin_date);

create table dcs_product_info (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	product_info_id	varchar(40)	not null,
	version	integer	not null,
	parent_cat_id	varchar(40)	null,
	item_acl	longtext	null
,constraint dcs_product_info_p primary key (product_info_id,asset_version));

create index dcs_product_in_wsx on dcs_product_info (workspace_id);
create index dcs_product_in_cix on dcs_product_info (checkin_date);

create table dcs_sku_info (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	sku_info_id	varchar(40)	not null,
	version	integer	not null,
	item_acl	longtext	null
,constraint dcs_sku_info_p primary key (sku_info_id,asset_version));

create index dcs_sku_info_wsx on dcs_sku_info (workspace_id);
create index dcs_sku_info_cix on dcs_sku_info (checkin_date);

create table dcs_cat_subcats (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	catalog_id	varchar(40)	not null
,constraint dcs_cat_subcats_p primary key (category_id,sequence_num,asset_version,sec_asset_version));

create index dcs_catsubcatlogid on dcs_cat_subcats (catalog_id);

create table dcs_cat_subroots (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	sub_category_id	varchar(40)	not null
,constraint dcs_cat_subroots_p primary key (category_id,sequence_num,asset_version));


create table dcs_cat_catinfo (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null,
	category_info_id	varchar(40)	not null
,constraint dcs_cat_catinfo_p primary key (category_id,catalog_id,asset_version,sec_asset_version));


create table dcs_catinfo_anc (
	asset_version	bigint	not null,
	category_info_id	varchar(40)	not null,
	anc_cat_id	varchar(40)	not null
,constraint dcs_catinfo_anc_p primary key (category_info_id,anc_cat_id,asset_version));


create table dcs_prd_prdinfo (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null,
	product_info_id	varchar(40)	not null
,constraint dcs_prd_prdinfo_p primary key (product_id,catalog_id,asset_version,sec_asset_version));


create table dcs_prdinfo_rdprd (
	asset_version	bigint	not null,
	product_info_id	varchar(40)	not null,
	sequence_num	integer	not null,
	related_prd_id	varchar(40)	not null
,constraint dcs_prdinfo_rdpr_p primary key (product_info_id,sequence_num,asset_version));


create table dcs_prdinfo_anc (
	asset_version	bigint	not null,
	product_info_id	varchar(40)	not null,
	anc_cat_id	varchar(40)	not null
,constraint dcs_prdinfo_anc_p primary key (product_info_id,anc_cat_id,asset_version));


create table dcs_sku_skuinfo (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null,
	sku_info_id	varchar(40)	not null
,constraint dcs_sku_skuinfo_p primary key (sku_id,catalog_id,asset_version,sec_asset_version));


create table dcs_skuinfo_rplc (
	asset_version	bigint	not null,
	sku_info_id	varchar(40)	not null,
	sequence_num	integer	not null,
	replacement	varchar(40)	not null
,constraint dcs_skuinfo_rplc_p primary key (sku_info_id,sequence_num,asset_version));


create table dcs_gen_fol_cat (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	type	integer	not null,
	name	varchar(40)	not null,
	parent	varchar(40)	null,
	description	varchar(254)	null,
	item_acl	longtext	null
,constraint dcs_gen_fol_cat_p primary key (folder_id,asset_version));

create index dcs_gen_fol_ca_wsx on dcs_gen_fol_cat (workspace_id);
create index dcs_gen_fol_ca_cix on dcs_gen_fol_cat (checkin_date);

create table dcs_child_fol_cat (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	folder_id	varchar(40)	not null,
	sequence_num	integer	not null,
	child_folder_id	varchar(40)	not null
,constraint dcs_child_fol_ca_p primary key (folder_id,sequence_num,asset_version,sec_asset_version));


create table dcs_catfol_chld (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	catfol_id	varchar(40)	not null,
	sequence_num	integer	not null,
	catalog_id	varchar(40)	not null
,constraint dcs_catfol_chld_p primary key (catfol_id,sequence_num,asset_version,sec_asset_version));


create table dcs_catfol_sites (
	asset_version	bigint	not null,
	catfol_id	varchar(40)	not null,
	site_id	varchar(40)	not null
,constraint dcs_catfl_sites_pk primary key (catfol_id,site_id,asset_version));


create table dcs_dir_anc_ctlgs (
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_catalog_id	varchar(40)	not null
,constraint dcs_dirancctlgs_pk primary key (catalog_id,sequence_num,asset_version));


create table dcs_ind_anc_ctlgs (
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_catalog_id	varchar(40)	not null
,constraint dcs_indancctlgs_pk primary key (catalog_id,sequence_num,asset_version));


create table dcs_ctlg_anc_cats (
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	sequence_num	integer	not null,
	category_id	varchar(40)	not null
,constraint dcs_ctlganccats_pk primary key (catalog_id,sequence_num,asset_version));


create table dcs_cat_anc_cats (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	sequence_num	integer	not null,
	anc_category_id	varchar(40)	not null
,constraint dcs_cat_anccats_pk primary key (category_id,sequence_num,asset_version));


create table dcs_cat_prnt_cats (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null,
	parent_ctgy_id	varchar(40)	not null
,constraint dcs_catprntcats_pk primary key (category_id,catalog_id,asset_version));


create table dcs_prd_prnt_cats (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null,
	category_id	varchar(40)	not null
,constraint dcs_prdprntcats_pk primary key (product_id,catalog_id,asset_version));


create table dcs_prd_anc_cats (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null,
	category_id	varchar(40)	not null
,constraint dcs_prdanc_cats_pk primary key (product_id,sequence_num,asset_version));


create table dcs_cat_catalogs (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null
,constraint dcs_cat_catalgs_pk primary key (category_id,catalog_id,asset_version));


create table dcs_prd_catalogs (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null
,constraint dcs_prd_catalgs_pk primary key (product_id,catalog_id,asset_version));


create table dcs_sku_catalogs (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	catalog_id	varchar(40)	not null
,constraint dcs_sku_catalgs_pk primary key (sku_id,catalog_id,asset_version));


create table dcs_catalog_sites (
	asset_version	bigint	not null,
	catalog_id	varchar(40)	not null,
	site_id	varchar(40)	not null
,constraint dcs_catlg_sites_pk primary key (catalog_id,site_id,asset_version));

create index catlg_site_id_idx on dcs_catalog_sites (site_id);

create table dcs_category_sites (
	asset_version	bigint	not null,
	category_id	varchar(40)	not null,
	site_id	varchar(40)	not null
,constraint dcs_cat_sites_pk primary key (category_id,site_id,asset_version));

create index cat_site_id_idx on dcs_category_sites (site_id);

create table dcs_product_sites (
	asset_version	bigint	not null,
	product_id	varchar(40)	not null,
	site_id	varchar(40)	not null
,constraint dcs_prod_sites_pk primary key (product_id,site_id,asset_version));

create index prd_site_id_idx on dcs_product_sites (site_id);

create table dcs_sku_sites (
	asset_version	bigint	not null,
	sku_id	varchar(40)	not null,
	site_id	varchar(40)	not null
,constraint dcs_sku_sites_pk primary key (sku_id,site_id,asset_version));

create index sku_site_id_idx on dcs_sku_sites (site_id);
commit;




-- Collected from DCS/Versioned/sql/db_components/mysql/versioned_promotion_ddl.sql


--  @version $Id: //product/DCS/version/10.0.2/templates/DCS/sql/promotion_ddl.xml#2 $$Change: 635969 $
-- Add the DCS_PRM_FOLDER table, promotionFolder

create table dcs_prm_folder (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	folder_id	varchar(40)	not null,
	name	varchar(254)	not null,
	parent_folder	varchar(40)	null
,constraint dcs_prm_folder_p primary key (folder_id,asset_version));

create index dcs_prm_folder_wsx on dcs_prm_folder (workspace_id);
create index dcs_prm_folder_cix on dcs_prm_folder (checkin_date);

create table dcs_promotion (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	promotion_id	varchar(40)	not null,
	version	integer	not null,
	creation_date	datetime	null,
	start_date	datetime	null,
	end_date	datetime	null,
	display_name	nvarchar(254)	null,
	description	nvarchar(254)	null,
	promotion_type	integer	null,
	enabled	tinyint	null,
	begin_usable	datetime	null,
	end_usable	datetime	null,
	priority	integer	null,
	global	tinyint	null,
	anon_profile	tinyint	null,
	allow_multiple	tinyint	null,
	uses	integer	null,
	rel_expiration	tinyint	null,
	time_until_expire	integer	null,
	template	varchar(254)	null,
	ui_access_lvl	integer	null,
	parent_folder	varchar(40)	null,
	last_modified	datetime	null,
	pmdl_version	integer	null,
	qualifier	varchar(254)	null
,constraint dcs_promotion_p primary key (promotion_id,asset_version)
,constraint dcs_promotion1_c check (enabled in (0,1))
,constraint dcs_promotion2_c check (global in (0,1))
,constraint dcs_promotion3_c check (anon_profile in (0,1))
,constraint dcs_promotion4_c check (allow_multiple in (0,1))
,constraint dcs_promotion5_c check (rel_expiration in (0,1)));

create index prmo_bgin_use_idx on dcs_promotion (begin_usable);
create index prmo_end_dte_idx on dcs_promotion (end_date);
create index prmo_end_use_idx on dcs_promotion (end_usable);
create index prmo_strt_dte_idx on dcs_promotion (start_date);
create index dcs_promotion_wsx on dcs_promotion (workspace_id);
create index dcs_promotion_cix on dcs_promotion (checkin_date);

create table dcs_promo_media (
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	tag	nvarchar(42)	not null,
	media_id	varchar(40)	not null
,constraint dcs_promo_media_p primary key (promotion_id,tag,asset_version));

create index promo_mdia_pid_idx on dcs_promo_media (promotion_id);

create table dcs_discount_promo (
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	calculator	varchar(254)	null,
	adjuster	numeric(19,7)	null,
	pmdl_rule	longtext 	not null,
	one_use	tinyint	null
,constraint dcs_discount_pro_p primary key (promotion_id,asset_version)
,constraint dcs_discount_pro_c check (one_use in (0, 1)));


create table dcs_promo_upsell (
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	upsell	tinyint	null
,constraint dcs_promo_upsell_p primary key (promotion_id,asset_version)
,constraint dcs_promo_upsell_c check (upsell in (0, 1)));


create table dcs_upsell_action (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	action_id	varchar(40)	not null,
	version	integer	not null,
	name	varchar(40)	not null,
	upsell_prd_grp	longtext	null
,constraint dcs_upsell_actn_p primary key (action_id,asset_version));

create index dcs_upsell_act_wsx on dcs_upsell_action (workspace_id);
create index dcs_upsell_act_cix on dcs_upsell_action (checkin_date);

create table dcs_close_qualif (
	asset_version	bigint	not null,
	workspace_id	varchar(40)	not null,
	branch_id	varchar(40)	not null,
	is_head	tinyint	not null,
	version_deleted	tinyint	not null,
	version_editable	tinyint	not null,
	pred_version	bigint	null,
	checkin_date	datetime	null,
	close_qualif_id	varchar(40)	not null,
	version	integer	not null,
	name	varchar(40)	not null,
	priority	integer	null,
	qualifier	longtext 	null,
	upsell_media	varchar(40)	null,
	upsell_action	varchar(40)	null
,constraint dcs_close_qualif_p primary key (close_qualif_id,asset_version));

create index dcs_close_qual_wsx on dcs_close_qualif (workspace_id);
create index dcs_close_qual_cix on dcs_close_qualif (checkin_date);

create table dcs_prm_cls_qlf (
	sec_asset_version	bigint	not null,
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	closeness_qualif	varchar(40)	not null);


create table dcs_prm_sites (
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	site_id	varchar(40)	not null);


create table dcs_prm_site_grps (
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	site_group_id	varchar(40)	not null);


create table dcs_prm_tpl_vals (
	asset_version	bigint	not null,
	promotion_id	varchar(40)	not null,
	placeholder	varchar(40)	not null,
	placeholderValue	longtext	null
,constraint dcs_prm_tpl_vals_p primary key (promotion_id,placeholder,asset_version));


create table dcs_prm_cls_vals (
	asset_version	bigint	not null,
	close_qualif_id	varchar(40)	not null,
	placeholder	varchar(40)	not null,
	placeholderValue	longtext	null
,constraint dcs_prm_cls_vals_p primary key (close_qualif_id,placeholder,asset_version));


create table dcs_upsell_prods (
	asset_version	bigint	not null,
	action_id	varchar(40)	not null,
	product_id	varchar(40)	not null,
	sequence_num	integer	not null
,constraint dcs_upsell_prods_p primary key (action_id,product_id,asset_version));

commit;




-- Collected from WebUI/sql/db_components/mysql/viewmapping_ddl.sql


--     @version $Id: //product/WebUI/version/10.0.2/src/sql/viewmapping_ddl.xml#2 $$Change: 635969 $  
--     ItemMapping    Mapps a component path + item name to that item's views.  

create table vmap_im (
	id	varchar(40)	not null,
	name	varchar(64)	null,
	description	varchar(1024)	null,
	item_path	varchar(255)	not null,
	item_name	varchar(64)	not null,
	is_readonly	tinyint	null,
	form_handler	varchar(40)	null,
	mode_id	varchar(40)	not null
,constraint vmap_im_pk primary key (id));

create index vmap_im_item on vmap_im (item_path,item_name,name);
--     FormHandler  

create table vmap_fh (
	id	varchar(40)	not null,
	name	varchar(64)	null,
	description	varchar(2048)	null,
	component_path	varchar(1024)	null
,constraint vmap_fh_pk primary key (id));

--     MapMode  

create table vmap_mode (
	id	varchar(40)	not null,
	name	varchar(64)	not null,
	description	varchar(1024)	null,
	fallback_id	varchar(40)	null);

--     ItemViewMapping  

create table vmap_ivm (
	id	varchar(40)	not null,
	name	varchar(64)	not null,
	display_name	nvarchar(64)	not null,
	description	varchar(1024)	null,
	view_id	varchar(40)	null
,constraint vmap_ivm_pk primary key (id));

--     ItemMapping -> view ItemViewMapping relation  

create table vmap_im2ivm_rel (
	item_id	varchar(40)	not null,
	sequence_num	integer	not null,
	view_id	varchar(40)	not null
,constraint vmap_im2ivm_pk primary key (item_id,sequence_num));

--     ItemView  

create table vmap_iv (
	id	varchar(40)	not null,
	name	nvarchar(64)	not null,
	description	nvarchar(1024)	not null,
	uri	varchar(255)	null,
	view_component	varchar(255)	null,
	app_name	varchar(255)	null,
	mode_id	varchar(40)	not null
,constraint vmap_iv_pk primary key (id));

--     PropertyView  

create table vmap_pv (
	id	varchar(40)	not null,
	name	nvarchar(64)	not null,
	type	varchar(128)	not null,
	component_type	varchar(128)	null,
	description	nvarchar(1024)	not null,
	uri	varchar(255)	null,
	view_component	varchar(255)	null,
	app_name	varchar(255)	null,
	mode_id	varchar(40)	not null,
	container_family	varchar(128)	null,
	is_default	tinyint	null,
	is_readonly	tinyint	null,
	is_component	tinyint	null
,constraint vmap_pv_pk primary key (id));

create index vmap_pv_unique on vmap_pv (type,name,mode_id,is_component);
--     The relationship between an ItemViewMapping and its    PropertyViewMapping items  

create table vmap_ivm2pvm_rel (
	ivm_id	varchar(40)	not null,
	pvm_id	varchar(40)	not null,
	name	varchar(64)	not null);

--     PropertyViewMapping  

create table vmap_pvm (
	id	varchar(40)	not null,
	description	varchar(1024)	null,
	pview_id	varchar(40)	null,
	cpview_id	varchar(40)	null
,constraint vmap_pvm_pk primary key (id));

--     AttributeValue  

create table vmap_attrval (
	id	varchar(40)	not null,
	attr_value	varchar(2048)	null
,constraint vmap_attrval_pk primary key (id));

--     A table that provides the mapping between mapping items    and AttributeValue items  

create table vmap_attrval_rel (
	mapper_id	varchar(40)	not null,
	attribute_id	varchar(40)	not null,
	name	varchar(64)	not null
,constraint vmap_attvl_rel_pk primary key (mapper_id,attribute_id));

--     A table that provides the mapping between mapping items    and component AttributeValue items  

create table vmap_cattrval_rel (
	mapper_id	varchar(40)	not null,
	attribute_id	varchar(40)	not null,
	name	varchar(64)	not null
,constraint vmap_ctvl_rel_pk primary key (mapper_id,attribute_id));

--     ItemView -> ItemViewAttributeDefinition relation  

create table vmap_iv2ivad_rel (
	view_id	varchar(40)	not null,
	attr_id	varchar(40)	not null,
	name	varchar(64)	not null
,constraint vmap_iv2iva_pk primary key (view_id,name));

--     ItemViewAttributeDefinition  

create table vmap_ivattrdef (
	id	varchar(40)	not null,
	description	varchar(1024)	null,
	default_value	varchar(1024)	null
,constraint vmap_ivatdef_pk primary key (id));

--     PropertyView -> PropertyViewAttributeDefinition relation  

create table vmap_pv2pvad_rel (
	view_id	varchar(40)	not null,
	attr_id	varchar(40)	not null,
	name	varchar(64)	not null);

--     PropertyViewAttributeDefinition  

create table vmap_pvattrdef (
	id	varchar(40)	not null,
	description	varchar(1024)	null,
	default_value	varchar(1024)	null
,constraint vmap_pvatdef_pk primary key (id));

commit;


]]>
  </sql>

<rollback/>

</changeSet>

</databaseChangeLog>
