<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog                  
xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
 http://www.liquibase.org/xml/ns/dbchangelog-ext
 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

<changeSet id='changeSet_0003_core' author='iteego' context='prod'>
  <preConditions>
    <not>
      <tableExists tableName='bogus_precondition_table'/>
    </not>
  </preConditions>

  <sql><![CDATA[
-- FILE NAME: DAS/sql/dbsetup/ddlgen/id_generator.xml
	CREATE TABLE das_id_generator (id_space_name varchar(60) not null, seed bigint not null, batch_size integer not null, prefix varchar(10) null, suffix varchar(10) null, constraint das_id_generator_p primary key (id_space_name));

	CREATE TABLE das_secure_id_gen (id_space_name varchar(60) not null, seed bigint not null, batch_size integer not null, ids_per_batch integer null, prefix varchar(10) null, suffix varchar(10) null, constraint das_secure_id_ge_p primary key (id_space_name));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/cluster_name_ddl.xml
	CREATE TABLE das_cluster_name (cluster_name varchar(255) not null, saved_date bigint not null);

-- FILE NAME: DAS/sql/dbsetup/ddlgen/dms_limbo_ddl.xml
	CREATE TABLE dms_limbo (limbo_name varchar(250) not null, limbo_id bigint not null, constraint limbo_pk primary key (limbo_name));

	CREATE TABLE dms_limbo_msg (msg_id bigint not null, limbo_id bigint not null, delivery_date bigint not null, delivery_count tinyint not null, msg_src_name varchar(250) not null, port_name varchar(250) not null, msg_class varchar(250) not null, msg_class_type tinyint not null, jms_type varchar(250) null, jms_expiration bigint null, jms_correlationid varchar(250) null, constraint limbo_msg_pk primary key (msg_id));

	CREATE INDEX dms_limbo_read_idx on dms_limbo_msg (limbo_id,delivery_date);

	CREATE TABLE dms_limbo_replyto (msg_id bigint not null, jms_replyto varbinary(500) null, constraint limbo_replyto_pk primary key (msg_id));

	CREATE TABLE dms_limbo_body (msg_id bigint not null, msg_body longvarbinary null, constraint limbo_body_pk primary key (msg_id));

	CREATE TABLE dms_limbo_props (msg_id bigint not null, prop_name varchar(250) not null, prop_value varchar(250) not null, constraint limbo_props_pk primary key (msg_id,prop_name));

	CREATE TABLE dms_limbo_ptypes (msg_id bigint not null, prop_name varchar(250) not null, prop_type tinyint not null, constraint dms_limbo_ptypes_p primary key (msg_id,prop_name));

	CREATE TABLE dms_limbo_delay (msg_id bigint not null, delay bigint not null, max_attempts tinyint not null, failure_port varchar(250) not null, jms_timestamp bigint null, jms_deliverymode integer null, jms_priority integer null, jms_messageid varchar(250) null, jms_redelivered tinyint null, jms_destination varbinary(500) null, constraint limbo_delay_pk primary key (msg_id));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/create_sql_jms_ddl.xml
	CREATE TABLE dms_client (client_name varchar(250) not null, client_id bigint null, constraint dms_client_p primary key (client_name));

	CREATE TABLE dms_queue (queue_name varchar(250) null, queue_id bigint not null, temp_id bigint null, constraint dms_queue_p primary key (queue_id));

	CREATE TABLE dms_queue_recv (client_id bigint null, receiver_id bigint not null, queue_id bigint null, constraint dms_queue_recv_p primary key (receiver_id));

	CREATE TABLE dms_queue_entry (queue_id bigint not null, msg_id bigint not null, delivery_date bigint null, handling_client_id bigint null, read_state bigint null, constraint dms_queue_entry_p primary key (queue_id,msg_id));

	CREATE TABLE dms_topic (topic_name varchar(250) null, topic_id bigint not null, temp_id bigint null, constraint dms_topic_p primary key (topic_id));

	CREATE TABLE dms_topic_sub (client_id bigint null, subscriber_name varchar(250) null, subscriber_id bigint not null, topic_id bigint null, durable tinyint null, active tinyint null, constraint dms_topic_sub_p primary key (subscriber_id));

	CREATE TABLE dms_topic_entry (subscriber_id bigint not null, msg_id bigint not null, delivery_date bigint null, read_state bigint null, constraint dms_topic_entry_p primary key (subscriber_id,msg_id));

	CREATE INDEX dms_topic_msg_idx on dms_topic_entry (msg_id,subscriber_id);

	CREATE INDEX dms_topic_read_idx on dms_topic_entry (read_state,delivery_date);

	CREATE TABLE dms_msg (msg_class varchar(250) null, has_properties tinyint null, reference_count integer null, msg_id bigint not null, timestamp bigint null, correlation_id varchar(250) null, reply_to bigint null, destination bigint null, delivery_mode tinyint null, redelivered tinyint null, type varchar(250) null, expiration bigint null, priority tinyint null, small_body varbinary(250) null, large_body longvarbinary null, constraint dms_msg_p primary key (msg_id));

	CREATE TABLE dms_msg_properties (msg_id bigint not null, data_type tinyint null, name varchar(250) not null, value varchar(250) null, constraint dms_msg_properti_p primary key (msg_id,name));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/create_staff_ddl.xml
	CREATE TABLE das_account (account_name nvarchar(254) not null, type integer not null, first_name nvarchar(254) null, last_name nvarchar(254) null, password varchar(254) null, description nvarchar(254) null, lastpwdupdate datetime null, constraint das_account_p primary key (account_name));

	CREATE TABLE das_group_assoc (account_name nvarchar(254) not null, sequence_num integer not null, group_name nvarchar(254) not null, constraint das_grp_asc_p primary key (account_name,sequence_num));

	CREATE TABLE das_acct_prevpwd (account_name nvarchar(254) not null, seq_num integer not null, prevpwd varchar(35) null, constraint das_prevpwd_p primary key (account_name,seq_num), constraint das_prvpwd_d_f foreign key (account_name) references das_account (account_name));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/create_gsa_subscribers_ddl.xml
	CREATE TABLE das_gsa_subscriber (id integer not null, address varchar(50) not null, port integer not null, repository varchar(256) not null, itemdescriptor varchar(256) not null, constraint das_gsa_subscrib_p primary key (id));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/create_sds.xml
	CREATE TABLE das_sds (sds_name varchar(50) not null, curr_ds_name varchar(50) null, dynamo_server varchar(80) null, last_modified datetime null, constraint das_sds_p primary key (sds_name));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/integration_data_ddl.xml
	CREATE TABLE if_integ_data (item_id varchar(40) not null, descriptor nvarchar(64) not null, repository nvarchar(255) not null, state integer not null, last_import datetime null, version integer not null, constraint if_int_data_p primary key (item_id,descriptor,repository));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/nucleus_security_ddl.xml
	CREATE TABLE das_nucl_sec (func_name nvarchar(254) not null, policy nvarchar(254) not null, constraint func_name_pk primary key (func_name));

	CREATE TABLE das_ns_acls (id nvarchar(254) not null, index_num integer not null, acl nvarchar(254) not null, constraint id_index_pk primary key (id,index_num));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/media_ddl.xml
	CREATE TABLE media_folder (folder_id varchar(40) not null, version integer not null, creation_date datetime null, description nvarchar(254) null, name nvarchar(254) not null, path nvarchar(254) not null, parent_folder_id varchar(40) null, constraint md_folder_p primary key (folder_id), constraint md_foldparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));

	CREATE INDEX md_fldr_path_idx on media_folder (path);

	CREATE INDEX fldr_mfldrid_idx on media_folder (parent_folder_id);

	CREATE TABLE media_base (media_id varchar(40) not null, version integer not null, creation_date datetime null, description nvarchar(254) null, name nvarchar(254) not null, path nvarchar(254) not null, parent_folder_id varchar(40) not null, media_type integer null, constraint media_p primary key (media_id), constraint medparnt_fl_f foreign key (parent_folder_id) references media_folder (folder_id));

	CREATE INDEX media_path_idx on media_base (path);

	CREATE INDEX media_type_idx on media_base (media_type);

	CREATE INDEX med_mfldrid_idx on media_base (parent_folder_id);

	CREATE TABLE media_ext (media_id varchar(40) not null, url varchar(254) not null, constraint media_ext_p primary key (media_id), constraint medxtmed_d_f foreign key (media_id) references media_base (media_id));

	CREATE TABLE media_bin (media_id varchar(40) not null, length integer not null, last_modified datetime not null, data longvarbinary not null, constraint media_bin_p primary key (media_id), constraint medbnmed_d_f foreign key (media_id) references media_base (media_id));

	CREATE TABLE media_txt (media_id varchar(40) not null, length integer not null, last_modified datetime not null, data longvarchar  not null, constraint media_txt_p primary key (media_id), constraint medtxtmed_d_f foreign key (media_id) references media_base (media_id));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/deployment_ddl.xml
	CREATE TABLE das_deployment (deployment_id varchar(40) not null, version integer not null, start_time datetime null, end_time datetime null, failure_time datetime null, status integer null, prev_status integer null, status_detail varchar(255) null, current_phase integer null, rep_high_mark integer null, rep_marks_avail integer null, file_high_mark integer null, file_marks_avail integer null, thread_batch_size integer null, failure_count integer null, purge_deploy_data tinyint null, constraint daf_depl_pk primary key (deployment_id));

	CREATE INDEX das_dpl_start_idx on das_deployment (start_time);

	CREATE TABLE das_depl_progress (deployment_id varchar(40) not null, version integer not null, work_completed integer null, total_work integer null, constraint daf_depl_prg_pk primary key (deployment_id));

	CREATE TABLE das_thread_batch (thread_batch_id varchar(40) not null, version integer not null, deployment varchar(40) null, type integer null, owner varchar(255) null, thread_name varchar(255) null, lower_bound integer null, upper_bound integer null, last_update_time datetime null, running tinyint not null, constraint das_dpl_tb_pk primary key (thread_batch_id));

	CREATE INDEX das_tb_deployment on das_thread_batch (deployment);

	CREATE INDEX das_tb_owner on das_thread_batch (owner);

	CREATE INDEX das_tb_thread_nam on das_thread_batch (thread_name);

	CREATE TABLE das_deploy_data (deploy_data_id varchar(40) not null, version integer not null, type integer null, source varchar(255) null, destination varchar(255) null, dest_server varchar(255) null, deployment varchar(40) null, constraint deploy_data_pk primary key (deploy_data_id), constraint dd_deployment_fk foreign key (deployment) references das_deployment (deployment_id));

	CREATE INDEX dd_deployment_idx on das_deploy_data (deployment);

	CREATE TABLE das_deploy_mark (marker_id varchar(40) not null, version integer not null, type integer null, status integer null, index_number integer null, marker_action integer null, f_src_devline_id varchar(40) null, r_src_devline_id varchar(40) null, deployment_id varchar(40) null, deployment_data varchar(40) null, constraint marker_pk primary key (marker_id));

	CREATE INDEX marker_index_idx on das_deploy_mark (index_number);

	CREATE TABLE das_rep_mark (rep_marker_id varchar(40) not null, item_desc_name varchar(255) null, item_id varchar(255) null, constraint rep_marker_pk primary key (rep_marker_id));

	CREATE TABLE das_file_mark (file_marker_id varchar(40) not null, file_path varchar(1000) null, constraint file_marker_pk primary key (file_marker_id));

	CREATE TABLE das_depl_depldat (deployment_id varchar(40) not null, sequence_num integer not null, deployment_data varchar(40) null, constraint das_dpl_depdat_pk primary key (deployment_id,sequence_num));

	CREATE TABLE das_depl_options (deployment_id varchar(40) not null, tag varchar(255) not null, optionValue varchar(255) null, constraint das_dpl_depopt_pk primary key (deployment_id,tag));

	CREATE TABLE das_depl_repmaps (deployment_id varchar(40) not null, source varchar(255) not null, destination varchar(255) null, constraint das_dpl_repmap_pk primary key (deployment_id,source));

	CREATE TABLE das_depl_item_ref (item_ref_id varchar(40) not null, version integer not null, deployment_id varchar(40) null, repository varchar(255) null, item_desc_name varchar(255) null, item_id varchar(255) null, item_index integer null, constraint das_dpl_itmref_pk primary key (item_ref_id));

	CREATE INDEX das_dpl_itmx_idx on das_depl_item_ref (item_index);

	CREATE INDEX das_dpl_dplid_idx on das_depl_item_ref (deployment_id);

	CREATE TABLE das_dd_markers (deploy_data_id varchar(40) not null, sequence_num integer not null, marker varchar(40) null, constraint das_dpl_dd_mrk_pk primary key (deploy_data_id,sequence_num), constraint marker_fk foreign key (marker) references das_deploy_mark (marker_id));

	CREATE INDEX marker_idx on das_dd_markers (marker);

	CREATE TABLE das_dep_fail_info (id varchar(40) not null, deployment_id varchar(40) not null, marker_id varchar(40) null, severity varchar(40) null, failure_message varchar(255) null, failure_time datetime null, error_code varchar(40) null, cause longvarchar null);

-- FILE NAME: DAS/sql/dbsetup/ddlgen/rl_example_ddl.xml
	CREATE TABLE rlex_file_folder (folder_id varchar(40) not null, folder_name nvarchar(255) not null, parent_folder varchar(40) null, constraint file_folder_pk primary key (folder_id));

	CREATE INDEX rlex_file_fold_id1 on rlex_file_folder (folder_name);

	CREATE TABLE rlex_file_asset (file_asset_id varchar(40) not null, asset_type bigint not null, filename nvarchar(255) not null, last_modified datetime null, size_bytes bigint null, parent_folder varchar(40) null, constraint file_asset_rl_pk primary key (file_asset_id), constraint rlex_file_fold_fk foreign key (parent_folder) references rlex_file_folder (folder_id));

	CREATE INDEX rlex_file_asst_id1 on rlex_file_asset (filename);

	CREATE INDEX rlex_file_asst_id3 on rlex_file_asset (size_bytes);

	CREATE INDEX rlex_file_asst_id4 on rlex_file_asset (last_modified);

	CREATE INDEX rlex_file_asst_id2 on rlex_file_asset (parent_folder);

	CREATE TABLE rlex_text_file (text_file_id varchar(40) not null, text_content longvarchar null, constraint rlex_text_file_pk primary key (text_file_id), constraint rlex_text_file_fk foreign key (text_file_id) references rlex_file_asset (file_asset_id));

	CREATE TABLE rlex_binary_file (binary_file_id varchar(40) not null, binary_content longvarbinary null, constraint rlex_binary_fil_pk primary key (binary_file_id), constraint rlex_binary_fil_fk foreign key (binary_file_id) references rlex_file_asset (file_asset_id));

	CREATE TABLE rlex_article_file (article_file_id varchar(40) not null, published_date datetime null, keywords varchar(80) null, constraint rlex_article_fi_pk primary key (article_file_id), constraint rlex_article_fi_fk foreign key (article_file_id) references rlex_file_asset (file_asset_id));

	CREATE TABLE rlex_user (id varchar(32) not null, nam_col varchar(32) null, age_col varchar(32) null, constraint rlex_user_p primary key (id));

	CREATE TABLE rlex_address (addr_id varchar(32) not null, user_id varchar(32) null, street varchar(32) null, city varchar(32) null, constraint rlex_address_p primary key (addr_id), constraint rlex_address_f1 foreign key (user_id) references rlex_user (id));

	CREATE TABLE rlex_contact (con_id varchar(32) not null, rank integer not null, user_id varchar(32) null, email varchar(255) null, url varchar(255) null, constraint rlex_contact_p primary key (con_id,rank), constraint rlex_contact_f1 foreign key (user_id) references rlex_user (id));

	CREATE TABLE rlex_phone (phone_id varchar(32) not null, kind varchar(64) not null, user_id varchar(32) null, pnumber varchar(64) null, constraint rlex_phone_p primary key (phone_id,kind), constraint rlex_phone_f1 foreign key (user_id) references rlex_user (id));

	CREATE TABLE rlex_job (id varchar(32) not null, jobtype varchar(32) null, title varchar(32) null, constraint rlex_job_p primary key (id), constraint rlex_job_f1 foreign key (id) references rlex_user (id));

	CREATE TABLE rlex_subjects (id varchar(32) not null, seq_num integer not null, subject varchar(32) null, constraint rlex_subjects_p primary key (id,seq_num), constraint rlex_subjects_f1 foreign key (id) references rlex_user (id));

	CREATE TABLE rlex_worst (id varchar(32) not null, seq_num integer not null, subject varchar(32) null, constraint rlex_worst_p primary key (id,seq_num), constraint rlex_worst_f1 foreign key (id) references rlex_user (id));

	CREATE TABLE rlex_credit_card (id varchar(32) not null, card_key varchar(32) not null, card_num varchar(32) null, constraint rlex_credit_card_p primary key (id,card_key), constraint rlex_credit_f1 foreign key (id) references rlex_user (id));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/db2_jms_procedures_ddl.xml
-- FILE NAME: DAS/sql/dbsetup/ddlgen/sitemap_ddl.xml
	CREATE TABLE das_siteindex (siteindex_id varchar(40) not null, lastmod datetime null, filename varchar(100) null, xml longvarchar  null, constraint siteindex_pk primary key (siteindex_id));

	CREATE TABLE das_sitemap (sitemap_id varchar(40) not null, lastmod datetime null, filename varchar(100) null, xml longvarchar  null, constraint sitemap_pk primary key (sitemap_id));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/seo_ddl.xml
	CREATE TABLE das_seo_tag (seo_tag_id varchar(40) not null, display_name varchar(100) null, title varchar(254) null, description varchar(254) null, keywords varchar(254) null, content_key varchar(100) null, constraint das_seo_tag_pk primary key (seo_tag_id));

	CREATE TABLE das_seo_sites (seo_tag_id varchar(40) not null, site_id varchar(40) not null, constraint das_seo_site_pk primary key (seo_tag_id,site_id));

-- FILE NAME: DAS/sql/dbsetup/ddlgen/site_ddl.xml
	CREATE TABLE site_template (id varchar(40) not null, name nvarchar(254) not null, description nvarchar(254) not null, item_mapping_id varchar(40) not null, constraint site_template1_p primary key (id));

	CREATE TABLE site_configuration (id varchar(40) not null, name nvarchar(254) not null, description nvarchar(254) null, template varchar(40) null, production_url nvarchar(254) null, enabled tinyint not null, site_down_url nvarchar(254) null, open_date datetime null, pre_opening_url nvarchar(254) null, closing_date datetime null, post_closing_url nvarchar(254) null, modification_time datetime null, creation_time datetime null, author nvarchar(254) null, last_modified_by nvarchar(254) null, site_icon nvarchar(254) null, favicon nvarchar(254) null, site_priority integer null, context_root nvarchar(254) null, constraint site_configurat1_p primary key (id));

	CREATE TABLE site_additional_urls (id varchar(40) not null, additional_production_url nvarchar(254) null, idx integer not null, constraint siteadditio_url1_p primary key (id,idx));

	CREATE TABLE site_types (id varchar(40) not null, site_type nvarchar(254) not null, constraint site_types1_p primary key (id,site_type));

	CREATE TABLE site_group (id varchar(40) not null, display_name nvarchar(254) not null, constraint site_group1_p primary key (id));

	CREATE TABLE site_group_sites (site_id varchar(40) not null, site_group_id varchar(40) not null, constraint site_group_sites_p primary key (site_id,site_group_id), constraint site_group_site1_f foreign key (site_id) references site_configuration (id), constraint site_group_site2_f foreign key (site_group_id) references site_group (id));

	CREATE INDEX site_group_site1_x on site_group_sites (site_id);

	CREATE INDEX site_group_site2_x on site_group_sites (site_group_id);

	CREATE TABLE site_group_shareable_types (shareable_types nvarchar(254) not null, site_group_id varchar(40) not null, constraint site_group_share_p primary key (shareable_types,site_group_id), constraint site_group_shar1_f foreign key (site_group_id) references site_group (id));

	CREATE INDEX site_group_shar1_x on site_group_shareable_types (site_group_id);

-- FILE NAME: DPS/sql/dbsetup/ddlgen/user_ddl.xml
	CREATE TABLE dps_organization (org_id varchar(40) not null, name nvarchar(254) not null, description nvarchar(254) null, parent_org varchar(40) null, constraint dps_organization_p primary key (org_id), constraint dps_orgnparnt_rg_f foreign key (parent_org) references dps_organization (org_id));

	CREATE INDEX dps_orgparent_org on dps_organization (parent_org);

	CREATE TABLE dps_user (id varchar(40) not null, login nvarchar(40) not null, auto_login tinyint null, password varchar(35) null, member tinyint null, first_name nvarchar(40) null, middle_name nvarchar(40) null, last_name nvarchar(40) null, user_type integer null, locale integer null, lastactivity_date datetime null, lastpwdupdate datetime null, generatedpwd tinyint null, registration_date datetime null, email nvarchar(255) null, email_status integer null, receive_email integer null, last_emailed datetime null, gender integer null, date_of_birth date null, securityStatus integer null, description nvarchar(254) null, constraint dps_user_p primary key (id), constraint dps_user_u unique (login));

	CREATE TABLE dps_contact_info (id varchar(40) not null, user_id varchar(40) null, prefix nvarchar(40) null, first_name nvarchar(40) null, middle_name nvarchar(40) null, last_name nvarchar(40) null, suffix nvarchar(40) null, job_title nvarchar(100) null, company_name nvarchar(40) null, address1 nvarchar(50) null, address2 nvarchar(50) null, address3 nvarchar(50) null, city nvarchar(30) null, state nvarchar(20) null, postal_code nvarchar(10) null, county nvarchar(40) null, country nvarchar(40) null, phone_number nvarchar(30) null, fax_number nvarchar(30) null, constraint dps_contact_info_p primary key (id));

	CREATE TABLE dps_user_address (id varchar(40) not null, home_addr_id varchar(40) null, billing_addr_id varchar(40) null, shipping_addr_id varchar(40) null, constraint dps_user_address_p primary key (id), constraint dps_usrddrssid_f foreign key (id) references dps_user (id));

	CREATE INDEX dps_usr_adr_shp_id on dps_user_address (shipping_addr_id);

	CREATE INDEX dps_usr_blng_ad_id on dps_user_address (billing_addr_id);

	CREATE INDEX dps_usr_home_ad_id on dps_user_address (home_addr_id);

	CREATE TABLE dps_other_addr (user_id varchar(40) not null, tag nvarchar(42) not null, address_id varchar(40) not null, constraint dps_other_addr_p primary key (user_id,tag), constraint dps_othrddrusr_d_f foreign key (user_id) references dps_user (id));

	CREATE TABLE dps_mailing (id varchar(40) not null, name nvarchar(255) null, subject nvarchar(80) null, uniq_server_id varchar(255) null, from_address nvarchar(255) null, replyto nvarchar(255) null, template_URL varchar(255) null, alt_template_URL varchar(255) null, batch_exec_id varchar(40) null, cc longvarchar null, bcc longvarchar null, send_as_html integer null, send_as_text integer null, params longvarbinary null, start_time datetime null, end_time datetime null, status integer null, num_profiles integer null, num_sent integer null, num_bounces integer null, num_soft_bounces integer null, num_errors integer null, num_skipped integer null, fill_from_templ tinyint null, is_batched tinyint null, ignore_fatigue tinyint null, batch_size integer null, constraint dps_mailing_p primary key (id));

	CREATE TABLE dps_mail_trackdata (mailing_id varchar(40) not null, map_key varchar(254) not null, map_value varchar(254) null, constraint dps_mail_trackd_p primary key (mailing_id,map_key), constraint dps_mail_trackd_f foreign key (mailing_id) references dps_mailing (id));

	CREATE TABLE dps_mail_batch (mailing_id varchar(40) not null, start_idx integer not null, uniq_server_id varchar(254) null, start_time datetime null, end_time datetime null, status integer null, num_profiles integer null, num_sent integer null, num_bounces integer null, num_errors integer null, num_skipped integer null, is_summarized tinyint null, constraint dps_mail_batch_p primary key (mailing_id,start_idx), constraint dps_mailbatch_d_f foreign key (mailing_id) references dps_mailing (id));

	CREATE TABLE dps_mail_server (uniq_server_id varchar(254) not null, last_updated datetime null, constraint dps_mail_server_p primary key (uniq_server_id));

	CREATE TABLE dps_user_mailing (mailing_id varchar(40) not null, user_id varchar(40) not null, idx integer not null, constraint dps_user_mailing_p primary key (mailing_id,user_id), constraint dps_usrmmalng_d_f foreign key (mailing_id) references dps_mailing (id), constraint dps_usrmlngusr_d_f foreign key (user_id) references dps_user (id));

	CREATE INDEX dps_u_mail_uid on dps_user_mailing (user_id);

	CREATE TABLE dps_email_address (mailing_id varchar(40) not null, email_address varchar(255) not null, idx integer not null, constraint dps_email_addres_p primary key (mailing_id,idx), constraint dps_emldmalng_d_f foreign key (mailing_id) references dps_mailing (id));

	CREATE TABLE dps_role (role_id varchar(40) not null, type integer not null, version integer not null, name nvarchar(254) not null, description nvarchar(254) null, constraint dps_role_p primary key (role_id));

	CREATE TABLE dps_user_roles (user_id varchar(40) not null, atg_role varchar(40) not null, constraint dps_user_roles_p primary key (user_id,atg_role), constraint dps_usrrlsatg_rl_f foreign key (atg_role) references dps_role (role_id), constraint dps_usrrlsusr_d_f foreign key (user_id) references dps_user (id));

	CREATE INDEX dps_usr_roles_id on dps_user_roles (atg_role);

	CREATE TABLE dps_org_role (org_id varchar(40) not null, atg_role varchar(40) not null, constraint dps_org_role_p primary key (org_id,atg_role), constraint dps_orgrlorg_d_f foreign key (org_id) references dps_organization (org_id), constraint dps_orgrlatg_rl_f foreign key (atg_role) references dps_role (role_id));

	CREATE INDEX dps_org_rolerole on dps_org_role (atg_role);

	CREATE TABLE dps_role_rel_org (organization varchar(40) not null, sequence_num integer not null, role_id varchar(40) not null, constraint dps_role_rel_org_p primary key (organization,sequence_num), constraint dps_rolrorgnztn_f foreign key (organization) references dps_organization (org_id), constraint dps_rolrlrgrol_d_f foreign key (role_id) references dps_role (role_id));

	CREATE INDEX dps_role_rel_org on dps_role_rel_org (role_id);

	CREATE TABLE dps_relativerole (role_id varchar(40) not null, dps_function nvarchar(40) not null, relative_to varchar(40) not null, constraint dps_relativerole_p primary key (role_id), constraint dps_reltreltv_t_f foreign key (relative_to) references dps_organization (org_id), constraint dps_reltvrlrol_d_f foreign key (role_id) references dps_role (role_id));

	CREATE INDEX dps_relativerole on dps_relativerole (relative_to);

	CREATE TABLE dps_user_org (organization varchar(40) not null, user_id varchar(40) not null, constraint dps_user_org_p primary key (organization,user_id), constraint dps_usrrgorgnztn_f foreign key (organization) references dps_organization (org_id), constraint dps_usrrgusr_d_f foreign key (user_id) references dps_user (id));

	CREATE INDEX dps_usr_orgusr_id on dps_user_org (user_id);

	CREATE TABLE dps_user_org_anc (user_id varchar(40) not null, sequence_num integer not null, anc_org varchar(40) not null, constraint dps_user_org_anc_p primary key (user_id,sequence_num), constraint dps_usrranc_rg_f foreign key (anc_org) references dps_organization (org_id), constraint dps_usrrgncusr_d_f foreign key (user_id) references dps_user (id));

	CREATE INDEX dps_usr_org_ancanc on dps_user_org_anc (anc_org);

	CREATE TABLE dps_org_chldorg (org_id varchar(40) not null, child_org_id varchar(40) not null, constraint dps_org_chldorg_p primary key (org_id,child_org_id), constraint dps_orgcchild_rg_f foreign key (child_org_id) references dps_organization (org_id), constraint dps_orgcorg_d_f foreign key (org_id) references dps_organization (org_id));

	CREATE INDEX dps_org_chldorg_id on dps_org_chldorg (child_org_id);

	CREATE TABLE dps_org_ancestors (org_id varchar(40) not null, sequence_num integer not null, anc_org varchar(40) not null, constraint dps_org_ancestor_p primary key (org_id,sequence_num), constraint dps_orgnanc_rg_f foreign key (anc_org) references dps_organization (org_id), constraint dps_orgnorg_d_f foreign key (org_id) references dps_organization (org_id));

	CREATE INDEX dps_org_ancanc_org on dps_org_ancestors (anc_org);

	CREATE TABLE dps_folder (folder_id varchar(40) not null, type integer not null, name nvarchar(254) not null, parent varchar(40) null, description nvarchar(254) null, constraint dps_folder_p primary key (folder_id), constraint dps_foldrparnt_f foreign key (parent) references dps_folder (folder_id));

	CREATE INDEX dps_folderparent on dps_folder (parent);

	CREATE TABLE dps_child_folder (folder_id varchar(40) not null, child_folder_id varchar(40) not null, constraint dps_child_folder_p primary key (folder_id,child_folder_id), constraint dps_chilchild_fl_f foreign key (child_folder_id) references dps_folder (folder_id), constraint dps_chilfoldr_d_f foreign key (folder_id) references dps_folder (folder_id));

	CREATE INDEX dps_chld_fldr_fld on dps_child_folder (child_folder_id);

	CREATE TABLE dps_rolefold_chld (rolefold_id varchar(40) not null, role_id varchar(40) not null, constraint dps_rolefold_chl_p primary key (rolefold_id,role_id), constraint dps_rolfrolfld_d_f foreign key (rolefold_id) references dps_folder (folder_id), constraint dps_rolfrol_d_f foreign key (role_id) references dps_role (role_id));

	CREATE INDEX dps_rolfldchldrole on dps_rolefold_chld (role_id);

	CREATE TABLE dps_user_prevpwd (id varchar(40) not null, seq_num integer not null, prevpwd varchar(35) null, constraint dps_prevpwd_p primary key (id,seq_num), constraint dps_prvpwd_d_f foreign key (id) references dps_user (id));

-- FILE NAME: DPS/sql/dbsetup/ddlgen/logging_ddl.xml
	CREATE TABLE dps_event_type (id integer not null, name varchar(32) not null, constraint dps_event_type_p primary key (id), constraint dps_event_type_u unique (name));

	CREATE TABLE dps_user_event (id bigint not null, timestamp datetime not null, sessionid varchar(100) null, parentsessionid varchar(100) null, eventtype integer not null, profileid varchar(25) null, member tinyint default 0 not null, constraint dps_user_event_p primary key (id), constraint dps_usrvevnttyp_f foreign key (eventtype) references dps_event_type (id));

	CREATE INDEX dps_ue_ts on dps_user_event (timestamp);

	CREATE INDEX dps_user_event_ix on dps_user_event (eventtype);

	CREATE TABLE dps_user_event_sum (eventtype integer not null, summarycount integer not null, fromtime datetime not null, totime datetime not null, constraint dps_usrsuevnttyp_f foreign key (eventtype) references dps_event_type (id));

	CREATE INDEX dps_ues_ft on dps_user_event_sum (fromtime,totime,eventtype);

	CREATE INDEX dps_user_ev_sum_ix on dps_user_event_sum (eventtype);

	CREATE TABLE dps_request (id bigint not null, timestamp datetime not null, sessionid varchar(100) null, parentsessionid varchar(100) null, name varchar(255) not null, member tinyint default 0 not null, constraint dps_request_p primary key (id));

	CREATE INDEX dps_r_ts on dps_request (timestamp);

	CREATE TABLE dps_reqname_sum (name varchar(255) not null, member tinyint default 0 not null, summarycount integer not null, fromtime datetime not null, totime datetime not null);

	CREATE INDEX dps_rns_ft on dps_reqname_sum (fromtime,totime);

	CREATE TABLE dps_session_sum (sessionid varchar(100) null, parentsessionid varchar(100) null, member tinyint default 0 not null, summarycount integer not null, fromtime datetime not null, totime datetime not null);

	CREATE INDEX dps_rss_ft on dps_session_sum (fromtime,totime,sessionid);

	CREATE TABLE dps_con_req (id bigint not null, timestamp datetime not null, requestid bigint null, contentid varchar(255) not null, constraint dps_con_req_p primary key (id));

	CREATE INDEX dps_cr_ts on dps_con_req (timestamp);

	CREATE TABLE dps_con_req_sum (contentid varchar(255) not null, member tinyint default 0 not null, summarycount integer not null, fromtime datetime not null, totime datetime not null);

	CREATE INDEX dps_crs_ft on dps_con_req_sum (fromtime,totime);

	CREATE TABLE dps_pgrp_req_sum (groupname nvarchar(64) not null, contentname nvarchar(255) not null, summarycount integer not null, fromtime datetime not null, totime datetime not null);

	CREATE INDEX dps_prs_ft on dps_pgrp_req_sum (fromtime,totime);

	CREATE TABLE dps_pgrp_con_sum (groupname nvarchar(64) not null, contentname nvarchar(64) not null, summarycount integer not null, fromtime datetime not null, totime datetime not null);

	CREATE INDEX dps_pcs_ft on dps_pgrp_con_sum (fromtime,totime);

	CREATE TABLE dps_log_id (tablename varchar(30) not null, nextid bigint not null, constraint dps_log_id_p primary key (tablename));

-- FILE NAME: DPS/sql/dbsetup/ddlgen/logging_init.xml
	START TRANSACTION;

	INSERT INTO dps_event_type (id, name) VALUES (0, 'newsession');

	INSERT INTO dps_event_type (id, name) VALUES (1, 'sessionexpiration');

	INSERT INTO dps_event_type (id, name) VALUES (2, 'login');

	INSERT INTO dps_event_type (id, name) VALUES (3, 'registration');

	INSERT INTO dps_event_type (id, name) VALUES (4, 'logout');

	INSERT INTO dps_log_id (tablename, nextid) VALUES ('dps_user_event', 0);

	INSERT INTO dps_log_id (tablename, nextid) VALUES ('dps_request', 0);

	INSERT INTO dps_log_id (tablename, nextid) VALUES ('dps_con_req', 0);

	COMMIT;

-- FILE NAME: DPS/sql/dbsetup/ddlgen/personalization_ddl.xml
	CREATE TABLE dps_seg_list (segment_list_id varchar(40) not null, display_name varchar(256) null, description varchar(1024) null, folder_id varchar(40) null, constraint dps_seg_list_p primary key (segment_list_id));

	CREATE TABLE dps_seg_list_name (segment_list_id varchar(40) not null, seq integer not null, group_name varchar(256) not null, constraint dps_s_l_n_p primary key (segment_list_id,seq), constraint dps_s_l_n_f1 foreign key (segment_list_id) references dps_seg_list (segment_list_id));

	CREATE TABLE dps_seg_list_folder (folder_id varchar(40) not null, display_name varchar(256) null, description varchar(1024) null, parent_folder_id varchar(40) null, constraint dps_s_l_f_p primary key (folder_id), constraint dps_s_l_f_f1 foreign key (parent_folder_id) references dps_seg_list_folder (folder_id));

	CREATE INDEX dps_sgmlstfldr1_x on dps_seg_list_folder (parent_folder_id);

-- FILE NAME: DPS.InternalUsers/sql/dbsetup/ddlgen/internal_user_ddl.xml
	CREATE TABLE dpi_organization (org_id varchar(40) not null, name nvarchar(254) not null, description nvarchar(254) null, parent_org varchar(40) null, constraint dpi_organization_p primary key (org_id), constraint dpi_orgnparnt_rg_f foreign key (parent_org) references dpi_organization (org_id));

	CREATE INDEX dpi_orgparent_org on dpi_organization (parent_org);

	CREATE TABLE dpi_user (id varchar(40) not null, login nvarchar(40) not null, auto_login tinyint null, password varchar(35) null, member tinyint null, first_name nvarchar(40) null, middle_name nvarchar(40) null, last_name nvarchar(40) null, user_type integer null, locale integer null, lastactivity_date datetime null, lastpwdupdate datetime null, generatedpwd tinyint null, registration_date datetime null, email nvarchar(255) null, email_status integer null, receive_email integer null, last_emailed datetime null, gender integer null, date_of_birth date null, securityStatus integer null, description nvarchar(254) null, constraint dpi_user_p primary key (id), constraint dpi_user_u unique (login));

	CREATE TABLE dpi_contact_info (id varchar(40) not null, user_id varchar(40) null, prefix nvarchar(40) null, first_name nvarchar(40) null, middle_name nvarchar(40) null, last_name nvarchar(40) null, suffix nvarchar(40) null, job_title nvarchar(100) null, company_name nvarchar(40) null, address1 nvarchar(50) null, address2 nvarchar(50) null, address3 nvarchar(50) null, city nvarchar(30) null, state nvarchar(20) null, postal_code nvarchar(10) null, county nvarchar(40) null, country nvarchar(40) null, phone_number nvarchar(30) null, fax_number nvarchar(30) null, constraint dpi_contact_info_p primary key (id));

	CREATE TABLE dpi_user_address (id varchar(40) not null, home_addr_id varchar(40) null, billing_addr_id varchar(40) null, shipping_addr_id varchar(40) null, constraint dpi_user_address_p primary key (id), constraint dpi_usrddrssid_f foreign key (id) references dpi_user (id));

	CREATE INDEX dpi_usr_adr_shp_id on dpi_user_address (shipping_addr_id);

	CREATE INDEX dpi_usr_blng_ad_id on dpi_user_address (billing_addr_id);

	CREATE INDEX dpi_usr_home_ad_id on dpi_user_address (home_addr_id);

	CREATE TABLE dpi_other_addr (user_id varchar(40) not null, tag nvarchar(42) not null, address_id varchar(40) not null, constraint dpi_other_addr_p primary key (user_id,tag), constraint dpi_othrddrusr_d_f foreign key (user_id) references dpi_user (id));

	CREATE TABLE dpi_mailing (id varchar(40) not null, name nvarchar(255) null, subject nvarchar(80) null, uniq_server_id varchar(255) null, from_address nvarchar(255) null, replyto nvarchar(255) null, template_URL varchar(255) null, alt_template_URL varchar(255) null, batch_exec_id varchar(40) null, cc longvarchar null, bcc longvarchar null, send_as_html integer null, send_as_text integer null, params longvarbinary null, start_time datetime null, end_time datetime null, status integer null, num_profiles integer null, num_sent integer null, num_bounces integer null, num_soft_bounces integer null, num_errors integer null, num_skipped integer null, fill_from_templ tinyint null, is_batched tinyint null, ignore_fatigue tinyint null, batch_size integer null, constraint dpi_mailing_p primary key (id));

	CREATE TABLE dpi_mail_trackdata (mailing_id varchar(40) not null, map_key varchar(254) not null, map_value varchar(254) null, constraint dpi_mail_trackd_p primary key (mailing_id,map_key), constraint dpi_mail_trackd_f foreign key (mailing_id) references dpi_mailing (id));

	CREATE TABLE dpi_mail_batch (mailing_id varchar(40) not null, start_idx integer not null, uniq_server_id varchar(254) null, start_time datetime null, end_time datetime null, status integer null, num_profiles integer null, num_sent integer null, num_bounces integer null, num_errors integer null, num_skipped integer null, is_summarized tinyint null, constraint dpi_mail_batch_p primary key (mailing_id,start_idx), constraint dpi_mailbatch_d_f foreign key (mailing_id) references dpi_mailing (id));

	CREATE TABLE dpi_mail_server (uniq_server_id varchar(254) not null, last_updated datetime null, constraint dpi_mail_server_p primary key (uniq_server_id));

	CREATE TABLE dpi_user_mailing (mailing_id varchar(40) not null, user_id varchar(40) not null, idx integer not null, constraint dpi_user_mailing_p primary key (mailing_id,user_id), constraint dpi_usrmmalng_d_f foreign key (mailing_id) references dpi_mailing (id), constraint dpi_usrmlngusr_d_f foreign key (user_id) references dpi_user (id));

	CREATE INDEX dpi_u_mail_uid on dpi_user_mailing (user_id);

	CREATE TABLE dpi_email_address (mailing_id varchar(40) not null, email_address varchar(255) not null, idx integer not null, constraint dpi_email_addres_p primary key (mailing_id,idx), constraint dpi_emldmalng_d_f foreign key (mailing_id) references dpi_mailing (id));

	CREATE TABLE dpi_role (role_id varchar(40) not null, type integer not null, version integer not null, name nvarchar(254) not null, description nvarchar(254) null, constraint dpi_role_p primary key (role_id));

	CREATE TABLE dpi_template_role (role_id varchar(40) not null, template_role_id varchar(40) not null, constraint dpi_tmplate_role_p primary key (role_id,template_role_id), constraint dpi_tpltrlrl_rl_f foreign key (template_role_id) references dpi_role (role_id), constraint dpi_tpltrltpl_d_f foreign key (role_id) references dpi_role (role_id));

	CREATE INDEX dpi_tmplt_role_id on dpi_template_role (template_role_id);

	CREATE TABLE dpi_access_right (access_right_id varchar(40) not null, right_type integer not null, right_scope integer not null, version integer not null, name nvarchar(254) not null, description nvarchar(254) null, constraint dpi_access_right_p primary key (access_right_id));

	CREATE TABLE dpi_role_right (role_id varchar(40) not null, access_right_id varchar(40) not null, constraint dpi_role_right_p primary key (role_id,access_right_id), constraint dpi_rlrightrt_rl_f foreign key (access_right_id) references dpi_access_right (access_right_id), constraint dpi_rlrightrl_d_f foreign key (role_id) references dpi_role (role_id));

	CREATE INDEX dpi_access_rt_id on dpi_role_right (access_right_id);

	CREATE TABLE dpi_user_roles (user_id varchar(40) not null, atg_role varchar(40) not null, constraint dpi_user_roles_p primary key (user_id,atg_role), constraint dpi_usrrlsatg_rl_f foreign key (atg_role) references dpi_role (role_id), constraint dpi_usrrlsusr_d_f foreign key (user_id) references dpi_user (id));

	CREATE INDEX dpi_usr_roles_id on dpi_user_roles (atg_role);

	CREATE TABLE dpi_org_role (org_id varchar(40) not null, atg_role varchar(40) not null, constraint dpi_org_role_p primary key (org_id,atg_role), constraint dpi_orgrlorg_d_f foreign key (org_id) references dpi_organization (org_id), constraint dpi_orgrlatg_rl_f foreign key (atg_role) references dpi_role (role_id));

	CREATE INDEX dpi_org_rolerole on dpi_org_role (atg_role);

	CREATE TABLE dpi_role_rel_org (organization varchar(40) not null, sequence_num integer not null, role_id varchar(40) not null, constraint dpi_role_rel_org_p primary key (organization,sequence_num), constraint dpi_rolrorgnztn_f foreign key (organization) references dpi_organization (org_id), constraint dpi_rolrlrgrol_d_f foreign key (role_id) references dpi_role (role_id));

	CREATE INDEX dpi_role_rel_org on dpi_role_rel_org (role_id);

	CREATE TABLE dpi_relativerole (role_id varchar(40) not null, dps_function nvarchar(40) not null, relative_to varchar(40) not null, constraint dpi_relativerole_p primary key (role_id), constraint dpi_reltreltv_t_f foreign key (relative_to) references dpi_organization (org_id), constraint dpi_reltvrlrol_d_f foreign key (role_id) references dpi_role (role_id));

	CREATE INDEX dpi_relativerole on dpi_relativerole (relative_to);

	CREATE TABLE dpi_user_org (organization varchar(40) not null, user_id varchar(40) not null, constraint dpi_user_org_p primary key (organization,user_id), constraint dpi_usrrgorgnztn_f foreign key (organization) references dpi_organization (org_id), constraint dpi_usrrgusr_d_f foreign key (user_id) references dpi_user (id));

	CREATE INDEX dpi_usr_orgusr_id on dpi_user_org (user_id);

	CREATE TABLE dpi_user_sec_orgs (user_id varchar(40) not null, secondary_org_id varchar(40) not null, constraint dpi_usr_sec_orgs_p primary key (user_id,secondary_org_id), constraint dpi_usrsecorg_rl_f foreign key (secondary_org_id) references dpi_organization (org_id), constraint dpi_usrsorgusr_d_f foreign key (user_id) references dpi_user (id));

	CREATE INDEX dpi_usr_sec_org_id on dpi_user_sec_orgs (secondary_org_id);

	CREATE TABLE dpi_user_org_anc (user_id varchar(40) not null, sequence_num integer not null, anc_org varchar(40) not null, constraint dpi_user_org_anc_p primary key (user_id,sequence_num), constraint dpi_usrranc_rg_f foreign key (anc_org) references dpi_organization (org_id), constraint dpi_usrrgncusr_d_f foreign key (user_id) references dpi_user (id));

	CREATE INDEX dpi_usr_org_ancanc on dpi_user_org_anc (anc_org);

	CREATE TABLE dpi_org_chldorg (org_id varchar(40) not null, child_org_id varchar(40) not null, constraint dpi_org_chldorg_p primary key (org_id,child_org_id), constraint dpi_orgcchild_rg_f foreign key (child_org_id) references dpi_organization (org_id), constraint dpi_orgcorg_d_f foreign key (org_id) references dpi_organization (org_id));

	CREATE INDEX dpi_org_chldorg_id on dpi_org_chldorg (child_org_id);

	CREATE TABLE dpi_org_ancestors (org_id varchar(40) not null, sequence_num integer not null, anc_org varchar(40) not null, constraint dpi_org_ancestor_p primary key (org_id,sequence_num), constraint dpi_orgnanc_rg_f foreign key (anc_org) references dpi_organization (org_id), constraint dpi_orgnorg_d_f foreign key (org_id) references dpi_organization (org_id));

	CREATE INDEX dpi_org_ancanc_org on dpi_org_ancestors (anc_org);

	CREATE TABLE dpi_folder (folder_id varchar(40) not null, type integer not null, name nvarchar(254) not null, parent varchar(40) null, description nvarchar(254) null, constraint dpi_folder_p primary key (folder_id), constraint dpi_foldrparnt_f foreign key (parent) references dpi_folder (folder_id));

	CREATE INDEX dpi_folderparent on dpi_folder (parent);

	CREATE TABLE dpi_child_folder (folder_id varchar(40) not null, child_folder_id varchar(40) not null, constraint dpi_child_folder_p primary key (folder_id,child_folder_id), constraint dpi_chilchild_fl_f foreign key (child_folder_id) references dpi_folder (folder_id), constraint dpi_chilfoldr_d_f foreign key (folder_id) references dpi_folder (folder_id));

	CREATE INDEX dpi_chld_fldr_fld on dpi_child_folder (child_folder_id);

	CREATE TABLE dpi_rolefold_chld (rolefold_id varchar(40) not null, role_id varchar(40) not null, constraint dpi_rolefold_chl_p primary key (rolefold_id,role_id), constraint dpi_rolfrolfld_d_f foreign key (rolefold_id) references dpi_folder (folder_id), constraint dpi_rolfrol_d_f foreign key (role_id) references dpi_role (role_id));

	CREATE INDEX dpi_rolfldchldrole on dpi_rolefold_chld (role_id);

	CREATE TABLE dpi_user_prevpwd (id varchar(40) not null, seq_num integer not null, prevpwd varchar(35) null, constraint dpi_prevpwd_p primary key (id,seq_num), constraint dpi_prvpwd_d_f foreign key (id) references dpi_user (id));

-- FILE NAME: DSS/sql/dbsetup/ddlgen/das_mappers.xml
	CREATE TABLE dss_das_event (id varchar(32) not null, timestamp datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null);

	CREATE TABLE dss_das_form (id varchar(32) not null, clocktime datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, formname varchar(254) null);

-- FILE NAME: DSS/sql/dbsetup/ddlgen/dps_mappers.xml
	CREATE TABLE dss_dps_event (id varchar(32) not null, timestamp datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, profileid varchar(25) null, scenarioPathInfo varchar(254) null);

	CREATE TABLE dss_dps_page_visit (id varchar(32) not null, timestamp datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, path varchar(255) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_view_item (id varchar(32) not null, timestamp datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, repositoryname nvarchar(255) null, folder varchar(255) null, itemtype varchar(255) null, repositoryid varchar(255) null, itemdescriptor varchar(255) null, page varchar(255) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_click (id varchar(32) not null, timestamp datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, destinationpath varchar(255) null, sourcenames varchar(255) null, sourcepath varchar(255) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_referrer (id varchar(32) not null, timestamp datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, referrerpath varchar(255) null, referrersite varchar(255) null, referrerpage varchar(255) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_inbound (id varchar(32) not null, timestamp datetime null, messagesubject varchar(255) null, originalsubject varchar(255) null, messagefrom varchar(64) null, messageto varchar(255) null, messagecc varchar(255) null, messagereplyto varchar(64) null, receiveddate bigint null, bounced varchar(6) null, bounceemailaddr varchar(255) null, bouncereplycode varchar(10) null, bounceerrormess varchar(255) null, bouncestatuscode varchar(10) null);

	CREATE TABLE dss_dps_admin_reg (id varchar(32) not null, clocktime datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, adminprofileid varchar(25) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_property (id varchar(32) not null, clocktime datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, propertypath varchar(254) null, oldvalue varchar(254) null, newvalue varchar(254) null, changesign varchar(16) null, changeamount numeric(19,7) null, changepercentage numeric(19,7) null, elementsadded varchar(254) null, elementsremoved varchar(254) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_admin_prop (id varchar(32) not null, clocktime datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, propertypath varchar(254) null, oldvalue varchar(254) null, newvalue varchar(254) null, changesign varchar(16) null, changeamount numeric(19,7) null, changepercentage numeric(19,7) null, elementsadded varchar(254) null, elementsremoved varchar(254) null, adminprofileid varchar(25) null, profileid varchar(25) null);

	CREATE TABLE dss_dps_update (id varchar(32) not null, clocktime datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, changedproperties longvarchar null, oldvalues longvarchar null, newvalues longvarchar null, profileid varchar(25) null);

	CREATE TABLE dss_dps_admin_up (id varchar(32) not null, clocktime datetime null, sessionid varchar(100) null, parentsessionid varchar(100) null, changedproperties longvarchar null, oldvalues longvarchar null, newvalues longvarchar null, adminprofileid varchar(25) null, profileid varchar(25) null);

	CREATE TABLE dps_scenario_value (id varchar(40) not null, tag varchar(42) not null, scenario_value varchar(100) null, constraint dps_scenario_val_p primary key (id,tag), constraint dps_scenrvlid_f foreign key (id) references dps_user (id));

	CREATE INDEX dps_scenval_id on dps_scenario_value (id);

-- FILE NAME: DSS/sql/dbsetup/ddlgen/dss_mappers.xml
	CREATE TABLE dss_audit_trail (id varchar(32) not null, timestamp datetime null, label nvarchar(255) null, profileid varchar(25) null, segmentName nvarchar(254) null, processName nvarchar(254) null, sessionid varchar(100) null, parentsessionid varchar(100) null);

-- FILE NAME: DSS/sql/dbsetup/ddlgen/scenario_ddl.xml
	CREATE TABLE dss_coll_scenario (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, segment_name nvarchar(255) null, creator_id varchar(25) null, state varchar(16) null, constraint dss_coll_scenari_p primary key (id));

	CREATE TABLE dss_ind_scenario (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, segment_name nvarchar(255) null, creator_id varchar(25) null, state varchar(16) null, user_id varchar(25) not null, constraint dss_ind_scenario_p primary key (id));

	CREATE INDEX dss_indscenario1_x on dss_ind_scenario (modification_time);

	CREATE TABLE dss_scenario_strs (id varchar(25) not null, tag nvarchar(25) not null, context_str varchar(255) null, constraint dss_scenario_str_p primary key (id,tag), constraint dss_scenrstrsid_f foreign key (id) references dss_ind_scenario (id));

	CREATE INDEX dss_scn_st_idx on dss_scenario_strs (id);

	CREATE TABLE dss_scenario_bools (id varchar(25) not null, tag nvarchar(25) not null, context_bool tinyint null, constraint dss_scenario_boo_p primary key (id,tag), constraint dss_scenrblsid_f foreign key (id) references dss_ind_scenario (id));

	CREATE INDEX dss_scn_bo_idx on dss_scenario_bools (id);

	CREATE TABLE dss_scenario_longs (id varchar(25) not null, tag nvarchar(25) not null, context_long bigint null, constraint dss_scenario_lon_p primary key (id,tag), constraint dss_scenrlngsid_f foreign key (id) references dss_ind_scenario (id));

	CREATE INDEX dss_scn_lg_idx on dss_scenario_longs (id);

	CREATE TABLE dss_scenario_dbls (id varchar(25) not null, tag nvarchar(25) not null, context_dbl numeric(15,4) null, constraint dss_scenario_dbl_p primary key (id,tag), constraint dss_scenrdblsid_f foreign key (id) references dss_ind_scenario (id));

	CREATE INDEX dss_scn_db_idx on dss_scenario_dbls (id);

	CREATE TABLE dss_scenario_dates (id varchar(25) not null, tag nvarchar(25) not null, context_date datetime null, constraint dss_scenario_dat_p primary key (id,tag), constraint dss_scenrdtsid_f foreign key (id) references dss_ind_scenario (id));

	CREATE INDEX dss_scn_dt_idx on dss_scenario_dates (id);

	CREATE TABLE dps_user_scenario (id varchar(40) not null, ind_scenario_id varchar(25) not null, constraint dps_user_scenari_p primary key (ind_scenario_id), constraint dps_usrscnrid_f foreign key (id) references dps_user (id), constraint dps_usrsind_scnr_f foreign key (ind_scenario_id) references dss_ind_scenario (id));

	CREATE INDEX dps_uscn_u_idx on dps_user_scenario (id);

	CREATE TABLE dss_scenario_info (id varchar(25) not null, scenario_name nvarchar(255) null, scenario_status integer null, modification_time bigint null, creation_time bigint null, author varchar(254) null, last_modified_by varchar(254) null, sdl longvarbinary null, psm_version integer null, constraint dss_scenario_inf_p primary key (id));

	CREATE TABLE dss_scen_mig_info (id varchar(25) not null, scenario_info_id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, psm_version integer null, sdl longvarbinary null, migration_status integer null, constraint dss_scenmiginfo_pk primary key (id), constraint dss_scenmiginfo_fk foreign key (scenario_info_id) references dss_scenario_info (id));

	CREATE INDEX dss_scenmiginfo_id on dss_scen_mig_info (scenario_info_id);

	CREATE TABLE dss_mig_info_seg (id varchar(25) not null, idx integer not null, segment_name varchar(255) null, constraint dss_mig_infoseg_pk primary key (id,idx), constraint dss_mig_infoseg_fk foreign key (id) references dss_scen_mig_info (id));

	CREATE TABLE dss_template_info (id varchar(25) not null, template_name nvarchar(255) null, modification_time bigint null, creation_time bigint null, author varchar(254) null, last_modified_by varchar(254) null, sdl longvarbinary null, constraint dss_template_inf_p primary key (id));

	CREATE TABLE dss_coll_trans (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, server_id varchar(40) null, message_bean longvarbinary null, event_type varchar(255) null, segment_name nvarchar(255) null, state varchar(16) null, coll_scenario_id varchar(25) null, step integer null, current_count integer null, last_query_id varchar(25) null, constraint dss_coll_trans_p primary key (id), constraint dss_collcoll_scn_f foreign key (coll_scenario_id) references dss_coll_scenario (id));

	CREATE INDEX dss_ctrcid_idx on dss_coll_trans (coll_scenario_id);

	CREATE TABLE dss_ind_trans (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, server_id varchar(40) null, message_bean longvarbinary null, event_type varchar(255) null, segment_name nvarchar(255) null, state varchar(16) null, last_query_id varchar(25) null, constraint dss_ind_trans_p primary key (id));

	CREATE TABLE dss_deletion (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, constraint dss_deletion_p primary key (id));

	CREATE TABLE dss_server_id (server_id varchar(40) not null, server_type integer not null, constraint dss_server_id_p primary key (server_id));

	CREATE TABLE dss_del_seg_name (id varchar(25) not null, idx integer not null, segment_name varchar(255) null, constraint dss_del_seg_name_p primary key (id,idx));

	CREATE TABLE dss_migration (id varchar(25) not null, scenario_name nvarchar(255) null, old_mod_time bigint null, new_mod_time bigint null, migration_info_id varchar(25) null, constraint dss_migration_pk primary key (id));

	CREATE TABLE dss_mig_seg_name (id varchar(25) not null, idx integer not null, segment_name varchar(255) null, constraint dss_mig_segname_pk primary key (id,idx), constraint dss_mig_segname_fk foreign key (id) references dss_migration (id));

	CREATE TABLE dss_xref (id varchar(25) not null, scenario_name varchar(255) null, reference_type varchar(30) null, reference_target varchar(255) null, constraint dss_xref_p primary key (id));

	CREATE TABLE dss_profile_slot (id varchar(25) not null, slot_name varchar(255) null, item_offset bigint null, user_id varchar(25) not null, constraint dss_profile_slot_p primary key (id));

	CREATE TABLE dps_user_slot (id varchar(40) not null, profile_slot_id varchar(25) not null, constraint dps_user_slot_p primary key (id,profile_slot_id), constraint dps_usrsltid_f foreign key (id) references dps_user (id), constraint dps_usrsprofl_sl_f foreign key (profile_slot_id) references dss_profile_slot (id));

	CREATE INDEX dps_usr_sltprfl_id on dps_user_slot (profile_slot_id);

	CREATE TABLE dss_slot_items (slot_id varchar(25) not null, item_id varchar(255) null, idx integer not null, constraint dss_slot_items_p primary key (slot_id,idx), constraint dss_slotslot_d_f foreign key (slot_id) references dss_profile_slot (id));

	CREATE TABLE dss_slot_priority (slot_id varchar(25) not null, idx integer not null, priority bigint not null, constraint dss_slot_priorit_p primary key (slot_id,idx), constraint dss_slotpslot_d_f foreign key (slot_id) references dss_profile_slot (id));

-- FILE NAME: DSS/sql/dbsetup/ddlgen/markers_ddl.xml
	CREATE TABLE dps_markers (marker_id varchar(40) not null, marker_key varchar(100) not null, marker_value varchar(100) null, marker_data varchar(100) null, creation_date datetime null, version integer not null, marker_type integer null, constraint dps_markers_p primary key (marker_id));

	CREATE TABLE dps_usr_markers (profile_id varchar(40) not null, marker_id varchar(40) not null, sequence_num integer not null, constraint dps_usr_markers_p primary key (profile_id,sequence_num), constraint dpsusrmarkers_u_f foreign key (profile_id) references dps_user (id), constraint dpsusrmarkers_m_f foreign key (marker_id) references dps_markers (marker_id));

	CREATE INDEX dpsusrmarkers1_ix on dps_usr_markers (marker_id);

-- FILE NAME: DSS/sql/dbsetup/ddlgen/business_process_rpt_ddl.xml
	CREATE TABLE drpt_stage_reached (id varchar(40) not null, owner_id varchar(40) not null, process_start_time datetime not null, event_time datetime not null, bp_name varchar(255) not null, bp_stage varchar(255) null, is_transient tinyint not null, bp_stage_sequence integer not null);

-- FILE NAME: DSS/sql/dbsetup/ddlgen/profile_bp_markers_ddl.xml
	CREATE TABLE dss_user_bpmarkers (marker_id varchar(40) not null, profile_id varchar(40) not null, marker_key varchar(100) not null, marker_value varchar(100) null, marker_data varchar(100) null, creation_date datetime null, version integer not null, marker_type integer null, constraint dssprofilebp_p primary key (marker_id,profile_id));

-- FILE NAME: DSS.InternalUsers/sql/dbsetup/ddlgen/internal_scenario_ddl.xml
	CREATE TABLE dsi_coll_scenario (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, segment_name nvarchar(255) null, creator_id varchar(25) null, state varchar(16) null, constraint dsi_coll_scenari_p primary key (id));

	CREATE TABLE dsi_ind_scenario (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, segment_name nvarchar(255) null, creator_id varchar(25) null, state varchar(16) null, user_id varchar(25) not null, constraint dsi_ind_scenario_p primary key (id));

	CREATE INDEX dsi_indscenario1_x on dsi_ind_scenario (modification_time);

	CREATE TABLE dsi_scenario_strs (id varchar(25) not null, tag nvarchar(25) not null, context_str varchar(255) null, constraint dsi_scenario_str_p primary key (id,tag), constraint dsi_scenrstrsid_f foreign key (id) references dsi_ind_scenario (id));

	CREATE TABLE dsi_scenario_bools (id varchar(25) not null, tag nvarchar(25) not null, context_bool tinyint null, constraint dsi_scenario_boo_p primary key (id,tag), constraint dsi_scenrblsid_f foreign key (id) references dsi_ind_scenario (id));

	CREATE TABLE dsi_scenario_longs (id varchar(25) not null, tag nvarchar(25) not null, context_long bigint null, constraint dsi_scenario_lon_p primary key (id,tag), constraint dsi_scenrlngsid_f foreign key (id) references dsi_ind_scenario (id));

	CREATE TABLE dsi_scenario_dbls (id varchar(25) not null, tag nvarchar(25) not null, context_dbl numeric(15,4) null, constraint dsi_scenario_dbl_p primary key (id,tag), constraint dsi_scenrdblsid_f foreign key (id) references dsi_ind_scenario (id));

	CREATE TABLE dsi_scenario_dates (id varchar(25) not null, tag nvarchar(25) not null, context_date datetime null, constraint dsi_scenario_dat_p primary key (id,tag), constraint dsi_scenrdtsid_f foreign key (id) references dsi_ind_scenario (id));

	CREATE TABLE dpi_user_scenario (id varchar(40) not null, ind_scenario_id varchar(25) not null, constraint dpi_user_scenari_p primary key (ind_scenario_id), constraint dpi_usrscnrid_f foreign key (id) references dpi_user (id), constraint dpi_usrsind_scnr_f foreign key (ind_scenario_id) references dsi_ind_scenario (id));

	CREATE INDEX dpi_uscn_u_idx on dpi_user_scenario (id);

	CREATE TABLE dsi_scenario_info (id varchar(25) not null, scenario_name nvarchar(255) null, scenario_status integer null, modification_time bigint null, creation_time bigint null, author varchar(254) null, last_modified_by varchar(254) null, sdl longvarbinary null, psm_version integer null, constraint dsi_scenario_inf_p primary key (id));

	CREATE TABLE dsi_scen_mig_info (id varchar(25) not null, scenario_info_id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, psm_version integer null, sdl longvarbinary null, migration_status integer null, constraint dsi_scenmiginfo_pk primary key (id), constraint dsi_scenmiginfo_fk foreign key (scenario_info_id) references dsi_scenario_info (id));

	CREATE INDEX dsi_scenmiginfo_id on dsi_scen_mig_info (scenario_info_id);

	CREATE TABLE dsi_mig_info_seg (id varchar(25) not null, idx integer not null, segment_name varchar(255) null, constraint dsi_mig_infoseg_pk primary key (id,idx), constraint dsi_mig_infoseg_fk foreign key (id) references dsi_scen_mig_info (id));

	CREATE TABLE dsi_template_info (id varchar(25) not null, template_name nvarchar(255) null, modification_time bigint null, creation_time bigint null, author varchar(254) null, last_modified_by varchar(254) null, sdl longvarbinary null, constraint dsi_template_inf_p primary key (id));

	CREATE TABLE dsi_coll_trans (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, server_id varchar(40) null, message_bean longvarbinary null, event_type varchar(255) null, segment_name nvarchar(255) null, state varchar(16) null, coll_scenario_id varchar(25) null, step integer null, current_count integer null, last_query_id varchar(25) null, constraint dsi_coll_trans_p primary key (id), constraint dsi_collcoll_scn_f foreign key (coll_scenario_id) references dsi_coll_scenario (id));

	CREATE INDEX dsi_ctrcid_idx on dsi_coll_trans (coll_scenario_id);

	CREATE TABLE dsi_ind_trans (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, server_id varchar(40) null, message_bean longvarbinary null, event_type varchar(255) null, segment_name nvarchar(255) null, state varchar(16) null, last_query_id varchar(25) null, constraint dsi_ind_trans_p primary key (id));

	CREATE TABLE dsi_deletion (id varchar(25) not null, scenario_name nvarchar(255) null, modification_time bigint null, constraint dsi_deletion_p primary key (id));

	CREATE TABLE dsi_server_id (server_id varchar(40) not null, server_type integer not null, constraint dsi_server_id_p primary key (server_id));

	CREATE TABLE dsi_del_seg_name (id varchar(25) not null, idx integer not null, segment_name varchar(255) null, constraint dsi_del_seg_name_p primary key (id,idx));

	CREATE TABLE dsi_migration (id varchar(25) not null, scenario_name nvarchar(255) null, old_mod_time bigint null, new_mod_time bigint null, migration_info_id varchar(25) null, constraint dsi_migration_pk primary key (id));

	CREATE TABLE dsi_mig_seg_name (id varchar(25) not null, idx integer not null, segment_name varchar(255) null, constraint dsi_mig_segname_pk primary key (id,idx), constraint dsi_mig_segname_fk foreign key (id) references dsi_migration (id));

	CREATE TABLE dsi_xref (id varchar(25) not null, scenario_name varchar(255) null, reference_type varchar(30) null, reference_target varchar(255) null, constraint dsi_xref_p primary key (id));

	CREATE TABLE dsi_profile_slot (id varchar(25) not null, slot_name varchar(255) null, item_offset bigint null, user_id varchar(25) not null, constraint dsi_profile_slot_p primary key (id));

	CREATE TABLE dpi_user_slot (id varchar(40) not null, profile_slot_id varchar(25) not null, constraint dpi_user_slot_p primary key (id,profile_slot_id), constraint dpi_usrsltid_f foreign key (id) references dpi_user (id), constraint dpi_usrsprofl_sl_f foreign key (profile_slot_id) references dsi_profile_slot (id));

	CREATE INDEX dpi_usr_sltprfl_id on dpi_user_slot (profile_slot_id);

	CREATE TABLE dsi_slot_items (slot_id varchar(25) not null, item_id varchar(255) null, idx integer not null, constraint dsi_slot_items_p primary key (slot_id,idx), constraint dsi_slotslot_d_f foreign key (slot_id) references dsi_profile_slot (id));

	CREATE TABLE dsi_slot_priority (slot_id varchar(25) not null, idx integer not null, priority bigint not null, constraint dsi_slot_priorit_p primary key (slot_id,idx), constraint dsi_slotpslot_d_f foreign key (slot_id) references dsi_profile_slot (id));

	CREATE TABLE dpi_scenario_value (id varchar(40) not null, tag varchar(42) not null, scenario_value varchar(100) null, constraint dpi_scenario_val_p primary key (id,tag), constraint dpi_scenrvlid_f foreign key (id) references dpi_user (id));

	CREATE INDEX dpi_scenval_id on dpi_scenario_value (id);


]]>
  </sql>

<rollback/>

</changeSet>

</databaseChangeLog>
