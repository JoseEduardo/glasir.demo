/*
 * Copyright (C) 2011 Iteego Inc and Matias Bjarland <mbjarland@gmail.com>
 *
 * This file is part of Glasir, a Gradle build framework for ATG E-Commerce
 * projects created by Iteego Inc and Matias Bjarland.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.

*
* =============================================================================
*
* This is the settings.gradle file. It is by convention used by
* gradle to set up multi-project project hiearchies.
*
* When executing gradle against a build.gradle file, gradle will
* start by searching down the directory tree to see if it can find
* a settings.gradle file and if so it it should consider itself
* a part of a multi project build. Note that the settings.gradle
* file is executed in the initialization phase of gradle execution
* i.e. before almost anything in the build.gradle itself
*
* We start by referencing the atgradle artifact from the iteego repository
* to get access to the build classes required. 
*
 */
import com.iteego.glasir.build.GlasirSettingsConvention
import static org.apache.ivy.util.url.CredentialsStore.INSTANCE as ivy

rootProject.name='glasir.bootstrap`'

buildscript {    
  repositories {
    ivy.addCredentials("Artifactory Realm", "iteego.artifactoryonline.com", artifactoryReader, artifactoryReaderPwd)
    mavenRepo url: 'http://iteego.artifactoryonline.com/iteego/glasir-repos'
  }

  dependencies {
    classpath('com.iteego.glasir:glasir.build:1.0.18-SNAPSHOT') { changing=true }
    classpath('org.jfrog.buildinfo:build-info-extractor-gradle:2.0.x-SNAPSHOT:uber@jar')
  }

  //add the above dependencies to the classpath of all sub project build scripts
  configurations.classpath.each { file -> settings.classLoader.addURL(file.toURI().toURL()) }
}

/*
* 
* Now use a convention object and set the required properties for setting up a gradle 
* multi project structure reflecting the ATG module structure in this source tree
*
*/
new GlasirSettingsConvention().with {
  // prompt for location of ATG dir, persisted into properties file
  // if file and property exists, value is returned without prompting
  String atgRoot = promptDir(message: "Please provide a valid ATG installation directory: ",
                             blockUntilSubItemsExist: "home/localconfig,home/bin, DAS",
                             propertyFile: "$settingsDir/.local.build.properties",
                             propertyName: "atgRoot")

  // configure module search roots. This enables the build to locate
  // all relevant ATG modules and analyze the ATG module dependencies of the
  // project. settingsDir is a gradle injected property representing the directory
  // where the settings.gradle file lives
  moduleSearchRoot dir: file(atgRoot), isAtgCore: true
  moduleSearchRoot dir: settingsDir, isAtgCore: false, includes: "glasir-app"

  //the below configures the gradle subprojects using the given module
  //search roots and the resulting atg modules. First parameter settings
  //is gradle injected settings instance, second param is a name for
  //the root project (and also the sub dir where we should look for
  //modules
  initializeProjectStructure (settings as Settings, "glasir-app")
}

